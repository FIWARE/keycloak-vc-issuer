{"version":3,"file":"QRCode.js","names":["React","useRef","useEffect","useState","useCallback","qrcodegen","ERROR_LEVEL_MAP","L","QrCode","Ecc","LOW","M","MEDIUM","Q","QUARTILE","H","HIGH","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","SPEC_MARGIN_SIZE","DEFAULT_MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","modules","margin","ops","forEach","row","y","start","cell","x","push","length","join","excavateModules","excavation","slice","map","h","w","getImageSettings","cells","size","imageSettings","numCells","defaultSize","Math","floor","scale","width","height","excavate","floorX","floorY","ceilW","ceil","ceilH","getMarginSize","includeMargin","marginSize","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","forwardRef","props","forwardedRef","value","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","_image","setCanvasRef","node","current","isImgLoaded","setIsImageLoaded","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","display","QRCodeSVG","fgPath","QRCode","renderAs","default"],"sources":["../../../src/app/content/vc/QRCode.tsx"],"sourcesContent":["/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\n\n\n import * as React from 'react';\n import {useRef, useEffect, useState, useCallback} from 'react';\n import type {CSSProperties} from 'react';\n import qrcodegen from './third-party/qrcodegen';\n \n type Modules = ReturnType<qrcodegen.QrCode['getModules']>;\n type Excavation = {x: number; y: number; w: number; h: number};\n \n const ERROR_LEVEL_MAP: {[index: string]: qrcodegen.QrCode.Ecc} = {\n   L: qrcodegen.QrCode.Ecc.LOW,\n   M: qrcodegen.QrCode.Ecc.MEDIUM,\n   Q: qrcodegen.QrCode.Ecc.QUARTILE,\n   H: qrcodegen.QrCode.Ecc.HIGH,\n };\n \n type ImageSettings = {\n   src: string;\n   height: number;\n   width: number;\n   excavate: boolean;\n   x?: number;\n   y?: number;\n };\n \n type QRProps = {\n   value: string;\n   size?: number;\n   // Should be a real enum, but doesn't seem to be compatible with real code.\n   level?: string;\n   bgColor?: string;\n   fgColor?: string;\n   style?: CSSProperties;\n   includeMargin?: boolean;\n   marginSize?: number;\n   imageSettings?: ImageSettings;\n };\n type QRPropsCanvas = QRProps & React.CanvasHTMLAttributes<HTMLCanvasElement>;\n type QRPropsSVG = QRProps & React.SVGAttributes<SVGSVGElement>;\n \n const DEFAULT_SIZE = 128;\n const DEFAULT_LEVEL = 'L';\n const DEFAULT_BGCOLOR = '#FFFFFF';\n const DEFAULT_FGCOLOR = '#000000';\n const DEFAULT_INCLUDEMARGIN = false;\n \n const SPEC_MARGIN_SIZE = 4;\n const DEFAULT_MARGIN_SIZE = 0;\n \n // This is *very* rough estimate of max amount of QRCode allowed to be covered.\n // It is \"wrong\" in a lot of ways (area is a terrible way to estimate, it\n // really should be number of modules covered), but if for some reason we don't\n // get an explicit height or width, I'd rather default to something than throw.\n const DEFAULT_IMG_SCALE = 0.1;\n \n function generatePath(modules: Modules, margin: number = 0): string {\n   const ops: Array<string> = [];\n   modules.forEach(function (row, y) {\n     let start: number | null = null;\n     row.forEach(function (cell, x) {\n       if (!cell && start !== null) {\n         // M0 0h7v1H0z injects the space with the move and drops the comma,\n         // saving a char per operation\n         ops.push(\n           `M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`\n         );\n         start = null;\n         return;\n       }\n \n       // end of row, clean up or skip\n       if (x === row.length - 1) {\n         if (!cell) {\n           // We would have closed the op above already so this can only mean\n           // 2+ light modules in a row.\n           return;\n         }\n         if (start === null) {\n           // Just a single dark module.\n           ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n         } else {\n           // Otherwise finish the current line.\n           ops.push(\n             `M${start + margin},${y + margin} h${x + 1 - start}v1H${\n               start + margin\n             }z`\n           );\n         }\n         return;\n       }\n \n       if (cell && start === null) {\n         start = x;\n       }\n     });\n   });\n   return ops.join('');\n }\n \n // We could just do this in generatePath, except that we want to support\n // non-Path2D canvas, so we need to keep it an explicit step.\n function excavateModules(modules: Modules, excavation: Excavation): Modules {\n   return modules.slice().map((row, y) => {\n     if (y < excavation.y || y >= excavation.y + excavation.h) {\n       return row;\n     }\n     return row.map((cell, x) => {\n       if (x < excavation.x || x >= excavation.x + excavation.w) {\n         return cell;\n       }\n       return false;\n     });\n   });\n }\n \n function getImageSettings(\n   cells: Modules,\n   size: number,\n   margin: number,\n   imageSettings?: ImageSettings\n ): null | {\n   x: number;\n   y: number;\n   h: number;\n   w: number;\n   excavation: Excavation | null;\n } {\n   if (imageSettings == null) {\n     return null;\n   }\n   const numCells = cells.length + margin * 2;\n   const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n   const scale = numCells / size;\n   const w = (imageSettings.width || defaultSize) * scale;\n   const h = (imageSettings.height || defaultSize) * scale;\n   const x =\n     imageSettings.x == null\n       ? cells.length / 2 - w / 2\n       : imageSettings.x * scale;\n   const y =\n     imageSettings.y == null\n       ? cells.length / 2 - h / 2\n       : imageSettings.y * scale;\n \n   let excavation = null;\n   if (imageSettings.excavate) {\n     let floorX = Math.floor(x);\n     let floorY = Math.floor(y);\n     let ceilW = Math.ceil(w + x - floorX);\n     let ceilH = Math.ceil(h + y - floorY);\n     excavation = {x: floorX, y: floorY, w: ceilW, h: ceilH};\n   }\n \n   return {x, y, h, w, excavation};\n }\n \n function getMarginSize(includeMargin: boolean, marginSize?: number): number {\n   if (marginSize != null) {\n     return Math.floor(marginSize);\n   }\n   return includeMargin ? SPEC_MARGIN_SIZE : DEFAULT_MARGIN_SIZE;\n }\n \n // For canvas we're going to switch our drawing mode based on whether or not\n // the environment supports Path2D. We only need the constructor to be\n // supported, but Edge doesn't actually support the path (string) type\n // argument. Luckily it also doesn't support the addPath() method. We can\n // treat that as the same thing.\n const SUPPORTS_PATH2D = (function () {\n   try {\n     new Path2D().addPath(new Path2D());\n   } catch (e) {\n     return false;\n   }\n   return true;\n })();\n \n const QRCodeCanvas = React.forwardRef(function QRCodeCanvas(\n   props: QRPropsCanvas,\n   forwardedRef: React.ForwardedRef<HTMLCanvasElement>\n ) {\n   const {\n     value,\n     size = DEFAULT_SIZE,\n     level = DEFAULT_LEVEL,\n     bgColor = DEFAULT_BGCOLOR,\n     fgColor = DEFAULT_FGCOLOR,\n     includeMargin = DEFAULT_INCLUDEMARGIN,\n     marginSize,\n     style,\n     imageSettings,\n     ...otherProps\n   } = props;\n   const imgSrc = imageSettings?.src;\n   const _canvas = useRef<HTMLCanvasElement | null>(null);\n   const _image = useRef<HTMLImageElement>(null);\n \n   // Set the local ref (_canvas) and also the forwarded ref from outside\n   const setCanvasRef = useCallback(\n     (node: HTMLCanvasElement | null) => {\n       _canvas.current = node;\n       if (typeof forwardedRef === 'function') {\n         forwardedRef(node);\n       } else if (forwardedRef) {\n         forwardedRef.current = node;\n       }\n     },\n     [forwardedRef]\n   );\n \n   // We're just using this state to trigger rerenders when images load. We\n   // Don't actually read the value anywhere. A smarter use of useEffect would\n   // depend on this value.\n   // eslint-disable-next-line @typescript-eslint/no-unused-vars\n   const [isImgLoaded, setIsImageLoaded] = useState(false);\n \n   useEffect(() => {\n     // Always update the canvas. It's cheap enough and we want to be correct\n     // with the current state.\n     if (_canvas.current != null) {\n       const canvas = _canvas.current;\n \n       const ctx = canvas.getContext('2d');\n       if (!ctx) {\n         return;\n       }\n \n       let cells = qrcodegen.QrCode.encodeText(\n         value,\n         ERROR_LEVEL_MAP[level]\n       ).getModules();\n \n       const margin = getMarginSize(includeMargin, marginSize);\n       const numCells = cells.length + margin * 2;\n       const calculatedImageSettings = getImageSettings(\n         cells,\n         size,\n         margin,\n         imageSettings\n       );\n \n       const image = _image.current;\n       const haveImageToRender =\n         calculatedImageSettings != null &&\n         image !== null &&\n         image.complete &&\n         image.naturalHeight !== 0 &&\n         image.naturalWidth !== 0;\n \n       if (haveImageToRender) {\n         if (calculatedImageSettings.excavation != null) {\n           cells = excavateModules(cells, calculatedImageSettings.excavation);\n         }\n       }\n \n       // We're going to scale this so that the number of drawable units\n       // matches the number of cells. This avoids rounding issues, but does\n       // result in some potentially unwanted single pixel issues between\n       // blocks, only in environments that don't support Path2D.\n       const pixelRatio = window.devicePixelRatio || 1;\n       canvas.height = canvas.width = size * pixelRatio;\n       const scale = (size / numCells) * pixelRatio;\n       ctx.scale(scale, scale);\n \n       // Draw solid background, only paint dark modules.\n       ctx.fillStyle = bgColor;\n       ctx.fillRect(0, 0, numCells, numCells);\n \n       ctx.fillStyle = fgColor;\n       if (SUPPORTS_PATH2D) {\n         // $FlowFixMe: Path2D c'tor doesn't support args yet.\n         ctx.fill(new Path2D(generatePath(cells, margin)));\n       } else {\n         cells.forEach(function (row, rdx) {\n           row.forEach(function (cell, cdx) {\n             if (cell) {\n               ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n             }\n           });\n         });\n       }\n \n       if (haveImageToRender) {\n         ctx.drawImage(\n           image,\n           calculatedImageSettings.x + margin,\n           calculatedImageSettings.y + margin,\n           calculatedImageSettings.w,\n           calculatedImageSettings.h\n         );\n       }\n     }\n   });\n \n   // Ensure we mark image loaded as false here so we trigger updating the\n   // canvas in our other effect.\n   useEffect(() => {\n     setIsImageLoaded(false);\n   }, [imgSrc]);\n \n   const canvasStyle = {height: size, width: size, ...style};\n   let img = null;\n   if (imgSrc != null) {\n     img = (\n       <img\n         src={imgSrc}\n         key={imgSrc}\n         style={{display: 'none'}}\n         onLoad={() => {\n           setIsImageLoaded(true);\n         }}\n         ref={_image}\n       />\n     );\n   }\n   return (\n     <>\n       <canvas\n         style={canvasStyle}\n         height={size}\n         width={size}\n         ref={setCanvasRef}\n         {...otherProps}\n       />\n       {img}\n     </>\n   );\n });\n \n const QRCodeSVG = React.forwardRef(function QRCodeSVG(\n   props: QRPropsSVG,\n   forwardedRef: React.ForwardedRef<SVGSVGElement>\n ) {\n   const {\n     value,\n     size = DEFAULT_SIZE,\n     level = DEFAULT_LEVEL,\n     bgColor = DEFAULT_BGCOLOR,\n     fgColor = DEFAULT_FGCOLOR,\n     includeMargin = DEFAULT_INCLUDEMARGIN,\n     marginSize,\n     imageSettings,\n     ...otherProps\n   } = props;\n \n   let cells = qrcodegen.QrCode.encodeText(\n     value,\n     ERROR_LEVEL_MAP[level]\n   ).getModules();\n \n   const margin = getMarginSize(includeMargin, marginSize);\n   const numCells = cells.length + margin * 2;\n   const calculatedImageSettings = getImageSettings(\n     cells,\n     size,\n     margin,\n     imageSettings\n   );\n \n   let image = null;\n   if (imageSettings != null && calculatedImageSettings != null) {\n     if (calculatedImageSettings.excavation != null) {\n       cells = excavateModules(cells, calculatedImageSettings.excavation);\n     }\n \n     image = (\n       <image\n         xlinkHref={imageSettings.src}\n         height={calculatedImageSettings.h}\n         width={calculatedImageSettings.w}\n         x={calculatedImageSettings.x + margin}\n         y={calculatedImageSettings.y + margin}\n         preserveAspectRatio=\"none\"\n       />\n     );\n   }\n \n   // Drawing strategy: instead of a rect per module, we're going to create a\n   // single path for the dark modules and layer that on top of a light rect,\n   // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n   // way faster than DOM ops.\n   // For level 1, 441 nodes -> 2\n   // For level 40, 31329 -> 2\n   const fgPath = generatePath(cells, margin);\n \n   return (\n     <svg\n       height={size}\n       width={size}\n       viewBox={`0 0 ${numCells} ${numCells}`}\n       ref={forwardedRef}\n       {...otherProps}>\n       <path\n         fill={bgColor}\n         d={`M0,0 h${numCells}v${numCells}H0z`}\n         shapeRendering=\"crispEdges\"\n       />\n       <path fill={fgColor} d={fgPath} shapeRendering=\"crispEdges\" />\n       {image}\n     </svg>\n   );\n });\n \n type RootProps =\n   | (QRPropsSVG & {renderAs: 'svg'})\n   | (QRPropsCanvas & {renderAs?: 'canvas'});\n const QRCode = React.forwardRef(function QRCode(\n   props: RootProps,\n   forwardedRef: React.ForwardedRef<HTMLCanvasElement | SVGSVGElement>\n ) {\n   const {renderAs, ...otherProps} = props;\n   if (renderAs === 'svg') {\n     return (\n       <QRCodeSVG\n         ref={forwardedRef as React.ForwardedRef<SVGSVGElement>}\n         {...(otherProps as QRPropsSVG)}\n       />\n     );\n   }\n   return (\n     <QRCodeCanvas\n       ref={forwardedRef as React.ForwardedRef<HTMLCanvasElement>}\n       {...(otherProps as QRPropsCanvas)}\n     />\n   );\n });\n \n export {QRCode as default, QRCodeCanvas, QRCodeSVG};\n "],"mappings":"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"}