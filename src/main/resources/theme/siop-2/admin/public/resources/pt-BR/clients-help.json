{
  "clientType": "'OpenID connect' permite aos Clientes verificarem a identidade do usuário final baseado na autenticação realizada por um servidor de Autorização. 'SAML' permite cenários de autenticação e autorização web-based incluindo cross-domain single sign-on (SSO) e utiliza tokens de segurança contendo assertions para trafegar informações.",
  "serviceAccount": "Permite autenticar este cliente no Keycloak e recuperar tokens de acesso dedicados para este cliente. Em termos da especificações OAuth2, habilita suporte para 'Client Credentials Grants' para este cliente.",
  "authorization": "Enable/Disable fine-grained authorization support for a client",
  "directAccess": "Habilita o suporte para concessões de acesso direto (Direct Access Grants), o que significa que o cliente tem acesso ao nome de usuário/senha e negocia diretamente com o servidor Keycloak pelo token de acesso. Em termos de especificações OAuth2, habilita suporte de \"Resource Owner Password Credentials Grant\" para este cliente.",
  "standardFlow": "Isto habilita a autenticação baseada em redirecionamento com código de autorização padrão do OpenID Connect. Em termos de especificações OpenID Connect ou OAuth2, isto habilita suporte ao 'Fluxo de Código de Autorização' para este cliente.",
  "implicitFlow": "Isto habilita suporte a autenticação baseada em redirecionamento sem código de autorização. Em tempos de especificações OpenID Connect ou OAuth2, isto habilita suporte do 'Fluxo Implícito' para este cliente.",
  "rootURL": "URL raiz adicionada à URLs relativas",
  "validRedirectURIs": "Padrão de URI válido para onde um navegador pode redirecionar depois de um login bem-sucedido ou sair. Wildcards simples são permitidos, por exemplo 'http://example.com/*'. Caminhos relativos podem ser especificados também, ex: /my/relative/path/*. Caminhos relativos são relativos à URL raiz do cliente, ou se nenhum for especificado a URL raiz do servidor é usado. Para SAML, é necessário definir padrões de URI válidos se você está contando com a URL do serviço consumidor incorporada com a solicitação de login.",
  "nameIdFormat": "O formato de Name ID para utilizar como assunto.",
  "forceNameIdFormat": "Ignora o NameID de assunto solicitado e utiliza o configurado no console de administração.",
  "forcePostBinding": "Sempre utilizar POST para respostas.",
  "includeAuthnStatement": "Deve ser adicionado um statement especificando o método e timestamp nas respostas de login?",
  "signDocuments": "Devem os documentos SAML serem assinados pelo realm?",
  "signAssertions": "Devem as asserções dentro dos documentos SAML serem assinadas? Esta configuração não é necessária se o documento já está sendo assinado.",
  "signatureAlgorithm": "O algoritmo de assinatura a ser utilizado para assinar documentos.",
  "canonicalization": "Canonicalization Method para assinaturas XML.",
  "webOrigins": "Permitir origens CORS. Para permitir todas as URIs de redirecionamento de origem válidas adicionar '+'. Para permitir todas as origens adicionar '*'.",
  "homeURL": "URL padrão para utilizar quando o servidor de autenticação necessita redirecionar ou linkar para o cliente.",
  "adminURL": "URL para a inteface administrativa do cliente. Defina este valor se o cliente suporta a API do adaptador REST. Esta API rest permite que o servidor de autenticação envie políticas de revogação e outras tarefas administrativas. Geralmente este valor é definido apontando para a URL base do cliente.",
  "client": "Select the client making this authorization request. If not provided, authorization requests would be done based on the client you are in.",
  "clientId": "Especifica o ID referenciado em URI e tokens. Por exemplo 'meu-cliente'. Para SAML também representa o valor do emissor esperado dos authn requests",
  "selectUser": "Select an user whose identity is going to be used to query permissions from the server.",
  "roles": "Select the roles you want to associate with the selected user.",
  "contextualAttributes": "Any attribute provided by a running environment or execution context.",
  "applyToResourceType": "Specifies if this permission would be applied to all resources with a given type. In this case, this permission will be evaluated for all instances of a given resource type.",
  "resources": "Specifies that this permission must be applied to a specific resource instance.",
  "scopesSelect": "Define que esta permissões deve ser aplicada para um ou mais escopos.",
  "clientName": "Especifica o nome de exibição do cliente. Por exemplo 'Meu Cliente'. Também aceita chaves para valores localizados. Por exemplo: ${meu_cliente}",
  "description": "Especifica a descrição do cliente. Por exemplo 'Meu cliente para TimeSheets'. Também aceita chaves para valores localizados. Por exemplo: ${meu_cliente_descricao}",
  "loginTheme": "Selecione o tema para páginas de login, OTP, grant, cadastro e recuperar senha.",
  "encryptAssertions": "Devem as asserções SAML serem encriptadas com a chave pública do cliente usando AES?",
  "clientSignature": "O cliente irá assinar os pedidos e respostas saml? E eles devem ser validados?",
  "expiration": "Especifica por quanto tempo o token deve ser válido",
  "count": "Especifica quantos clientes podem ser criados usando o token",
  "client-authenticator-type": "Autenticador de Cliente usado para autenticar este cliente ao servidor Keycloak",
  "registration-access-token": "O token de acesso para registro provê acesso aos cliente para o serviço de registro cliente.",
  "nodeReRegistrationTimeout": "Intervalo para especificar o tempo máximo para nós clientes de cluster registrados se re-registrarem. Se os nós do cluster não enviarem solicitações de re-registro dentro deste intervalo eles serão deregistrados do Keycloak.",
  "idpInitiatedSsoUrlName": "Nome do fragmento URL para referenciar o cliente quando você deseja um SSO iniciado por IDP. Deixar este campo vazio irá desabilitar SSO iniciado por IDP. A URL que você irá referenciar do seu browser será: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}",
  "idpInitiatedSsoRelayState": "O estado de Relay que você deseja enviar com um pedido SAML quando você deseja realizar SSO iniciado por IDP.",
  "masterSamlProcessingUrl": "Se configurado, esta URL será utilizada para todos os bindings do \"SP's Assertion Consumer\" e \"Single Logout Services\". Ela pode ser sobreescriva idnvidualmente para cada ligação e serviço na Configuração Detalhada do Endpoint SAML.",
  "accessTokenLifespan": "Tempo máximo antes que um token de acesso expire. Recomenda-se que este valor seja menor em relação ao tempo de inativação do inativação do SSO.",
  "assertionConsumerServicePostBindingURL": "URL de ligação SAML via post para as asserções de consumidor de serviços do cliente (respostas de login). Você pode deixar este campo em branco se você não tiver uma URL para esta ligação.",
  "assertionConsumerServiceRedirectBindingURL": "URL de ligação SAML de redirecionamento para as asserções de consumidor de serviços do cliente (respostas de login). Você pode deixar este campo em branco se você não tiver uma URL para esta ligação.",
  "logoutServicePostBindingURL": "URL de conexão POST para o serviço de logout",
  "logoutServiceRedirectBindingURL": "URL de ligação SAML de redirecionamento  para o serviço de logout único do cliente. Voce pode deixar este campo em branco s e estiver usando uma ligação diferente.",
  "frontchannelLogout": "Quando marcado, o logout requer um redirecionamento do browser para o cliente. Caso contrário o servidor executo uma invocação em background para o logout.",
  "browserFlow": "Select the flow you want to use for browser authentication.",
  "directGrant": "Select the flow you want to use for direct grant authentication.",
  "certificate": "Certificado do cliente para validar JWT emitidos pelo cliente e assinados pela chave privada do cliente da sua keystore.",
  "archiveFormat": "Keystore Java ou arquivo em formato PKCS12.",
  "keyAlias": "Alias do arquivo para sua chave privada e certificado.",
  "keyPassword": "Senha para acessar a chave privada no certificado.",
  "storePassword": "Senha para acessar o arquivo em si.",
  "consentRequired": "Se habilitado os usuários devem consentir com o acesso ao cliente.",
  "import": "Import a JSON file containing authorization settings for this resource server.",
  "policyEnforcementMode": "The policy enforcement mode dictates how policies are enforced when evaluating authorization requests. 'Enforcing' means requests are denied by default even when there is no policy associated with a given resource. 'Permissive' means requests are allowed even when there is no policy associated with a given resource. 'Disabled' completely disables the evaluation of policies and allow access to any resource.",
  "allowRemoteResourceManagement": "Should resources be managed remotely by the resource server? If false, resources can only be managed from this admin console.",
  "resourceName": "An unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.",
  "type": "The type of this resource. It can be used to group different resource instances with the same type.",
  "uris": "An URI that can also be used to uniquely identify this resource.",
  "scopes": "The scopes associated with this resource.",
  "fullScopeAllowed": "Permite a você desabilitar todas as restrições.",
  "resetActions": "Set of actions to execute when sending the user a Reset Actions Email. 'Verify email' sends an email to the user to verify their email address. 'Update profile' requires user to enter in new personal information. 'Update password' requires user to enter in a new password. 'Configure OTP' requires setup of a mobile password generator.",
  "scopeName": "An unique name for this scope. The name can be used to uniquely identify a scope, useful when querying for a specific scope.",
  "policy-name": "The name of this policy.",
  "policy-description": "A description for this policy.",
  "policyDecisionStagey": "The decision strategy dictates how the policies associated with a given policy are evaluated and how a final decision is obtained. 'Affirmative' means that at least one policy must evaluate to a positive decision in order to the overall decision be also positive. 'Unanimous' means that all policies must evaluate to a positive decision in order to the overall decision be also positive. 'Consensus' means that the number of positive decisions must be greater than the number of negative decisions. If the number of positive and negative is the same, the final decision will be negative.",
  "applyPolicy": "Specifies all the policies that must be applied to the scopes defined by this policy or permission.",
  "policyGroups": "Specifies which user(s) are allowed by this policy.",
  "policyRoles": "Especifica quais role(s) do *cliente* são permitidos por esta política.",
  "startTime": "Defines the time before which the policy MUST NOT be granted. Only granted if current date/time is after or equal to this value.",
  "expireTime": "Defines the time after which the policy MUST NOT be granted. Only granted if current date/time is before or equal to this value.",
  "policyCode": "The JavaScript code providing the conditions for this policy.",
  "logic": "The logic dictates how the policy decision should be made. If 'Positive', the resulting effect (permit or deny) obtained during the evaluation of this policy will be used to perform a decision. If 'Negative', the resulting effect will be negated, in other words, a permit becomes a deny and vice-versa.",
  "permissionName": "The name of this permission.",
  "permissionDescription": "A description for this permission.",
  "permissionType": "Specifies that this permission must be applied to all resources instances of a given type."
}