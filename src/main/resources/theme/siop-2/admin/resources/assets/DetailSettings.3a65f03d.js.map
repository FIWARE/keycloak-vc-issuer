{"version":3,"file":"DetailSettings.3a65f03d.js","sources":["../../src/identity-providers/add/AdvancedSettings.tsx","../../src/identity-providers/add/ExtendedNonDiscoverySettings.tsx","../../src/identity-providers/add/ReqAuthnConstraintsSettings.tsx","../../src/identity-providers/add/DetailSettings.tsx"],"sourcesContent":["import {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport type AuthenticationFlowRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/authenticationFlowRepresentation\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport type { FieldProps } from \"../component/FormGroupField\";\nimport { SwitchField } from \"../component/SwitchField\";\nimport { TextField } from \"../component/TextField\";\n\nconst LoginFlow = ({\n  field,\n  label,\n  defaultValue,\n}: FieldProps & { defaultValue: string }) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { control } = useFormContext();\n\n  const { adminClient } = useAdminClient();\n  const [flows, setFlows] = useState<AuthenticationFlowRepresentation[]>();\n  const [open, setOpen] = useState(false);\n\n  useFetch(\n    () => adminClient.authenticationManagement.getFlows(),\n    (flows) =>\n      setFlows(flows.filter((flow) => flow.providerId === \"basic-flow\")),\n    []\n  );\n\n  return (\n    <FormGroup\n      label={t(label)}\n      labelIcon={\n        <HelpItem\n          helpText={`identity-providers-help:${label}`}\n          fieldLabelId={`identity-providers:${label}`}\n        />\n      }\n      fieldId={label}\n    >\n      <Controller\n        name={field}\n        defaultValue={defaultValue}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId={label}\n            required\n            onToggle={() => setOpen(!open)}\n            onSelect={(_, value) => {\n              field.onChange(value as string);\n              setOpen(false);\n            }}\n            selections={field.value || t(\"common:none\")}\n            variant={SelectVariant.single}\n            aria-label={t(label)}\n            isOpen={open}\n          >\n            {[\n              ...(defaultValue === \"\"\n                ? [\n                    <SelectOption key=\"empty\" value=\"\">\n                      {t(\"common:none\")}\n                    </SelectOption>,\n                  ]\n                : []),\n              ...(flows?.map((option) => (\n                <SelectOption\n                  selected={option.alias === field.value}\n                  key={option.id}\n                  value={option.alias}\n                >\n                  {option.alias}\n                </SelectOption>\n              )) || []),\n            ]}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n\nconst syncModes = [\"import\", \"legacy\", \"force\"];\ntype AdvancedSettingsProps = { isOIDC: boolean; isSAML: boolean };\n\nexport const AdvancedSettings = ({ isOIDC, isSAML }: AdvancedSettingsProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { control } = useFormContext();\n  const [syncModeOpen, setSyncModeOpen] = useState(false);\n  return (\n    <>\n      {!isOIDC && !isSAML && (\n        <TextField field=\"config.defaultScope\" label=\"scopes\" />\n      )}\n      <SwitchField field=\"storeToken\" label=\"storeTokens\" fieldType=\"boolean\" />\n      {(isSAML || isOIDC) && (\n        <SwitchField\n          field=\"addReadTokenRoleOnCreate\"\n          label=\"storedTokensReadable\"\n          fieldType=\"boolean\"\n        />\n      )}\n      {!isOIDC && !isSAML && (\n        <>\n          <SwitchField\n            field=\"config.acceptsPromptNoneForwardFromClient\"\n            label=\"acceptsPromptNone\"\n          />\n          <SwitchField field=\"config.disableUserInfo\" label=\"disableUserInfo\" />\n        </>\n      )}\n      <SwitchField field=\"trustEmail\" label=\"trustEmail\" fieldType=\"boolean\" />\n      <SwitchField\n        field=\"linkOnly\"\n        label=\"accountLinkingOnly\"\n        fieldType=\"boolean\"\n      />\n      <SwitchField field=\"config.hideOnLoginPage\" label=\"hideOnLoginPage\" />\n\n      <LoginFlow\n        field=\"firstBrokerLoginFlowAlias\"\n        label=\"firstBrokerLoginFlowAlias\"\n        defaultValue=\"fist broker login\"\n      />\n      <LoginFlow\n        field=\"postBrokerLoginFlowAlias\"\n        label=\"postBrokerLoginFlowAlias\"\n        defaultValue=\"\"\n      />\n\n      <FormGroup\n        className=\"pf-u-pb-3xl\"\n        label={t(\"syncMode\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:syncMode\"\n            fieldLabelId=\"identity-providers:syncMode\"\n          />\n        }\n        fieldId=\"syncMode\"\n      >\n        <Controller\n          name=\"config.syncMode\"\n          defaultValue={syncModes[0].toUpperCase()}\n          control={control}\n          render={({ field }) => (\n            <Select\n              toggleId=\"syncMode\"\n              required\n              direction=\"up\"\n              onToggle={() => setSyncModeOpen(!syncModeOpen)}\n              onSelect={(_, value) => {\n                field.onChange(value as string);\n                setSyncModeOpen(false);\n              }}\n              selections={t(`syncModes.${field.value.toLowerCase()}`)}\n              variant={SelectVariant.single}\n              aria-label={t(\"syncMode\")}\n              isOpen={syncModeOpen}\n            >\n              {syncModes.map((option) => (\n                <SelectOption\n                  selected={option === field.value}\n                  key={option}\n                  value={option.toUpperCase()}\n                >\n                  {t(`syncModes.${option}`)}\n                </SelectOption>\n              ))}\n            </Select>\n          )}\n        />\n      </FormGroup>\n    </>\n  );\n};\n","import {\n  ExpandableSection,\n  Form,\n  FormGroup,\n  NumberInput,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { FormGroupField } from \"../component/FormGroupField\";\nimport { SwitchField } from \"../component/SwitchField\";\nimport { TextField } from \"../component/TextField\";\n\nconst promptOptions = {\n  unspecified: \"\",\n  none: \"none\",\n  consent: \"consent\",\n  login: \"login\",\n  select_account: \"select_account\",\n};\n\nexport const ExtendedNonDiscoverySettings = () => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { control } = useFormContext();\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [promptOpen, setPromptOpen] = useState(false);\n\n  return (\n    <ExpandableSection\n      toggleText={t(\"advanced\")}\n      onToggle={() => setIsExpanded(!isExpanded)}\n      isExpanded={isExpanded}\n    >\n      <Form isHorizontal>\n        <SwitchField label=\"passLoginHint\" field=\"config.loginHint\" />\n        <SwitchField label=\"passMaxAge\" field=\"config.passMaxAge\" />\n        <SwitchField label=\"passCurrentLocale\" field=\"config.uiLocales\" />\n        <SwitchField\n          field=\"config.backchannelSupported\"\n          label=\"backchannelLogout\"\n        />\n        <SwitchField field=\"config.disableUserInfo\" label=\"disableUserInfo\" />\n        <TextField field=\"config.defaultScope\" label=\"scopes\" />\n        <FormGroupField label=\"prompt\">\n          <Controller\n            name=\"config.prompt\"\n            defaultValue=\"\"\n            control={control}\n            render={({ field }) => (\n              <Select\n                toggleId=\"prompt\"\n                required\n                onToggle={() => setPromptOpen(!promptOpen)}\n                onSelect={(_, value) => {\n                  field.onChange(value as string);\n                  setPromptOpen(false);\n                }}\n                selections={field.value || t(`prompts.unspecified`)}\n                variant={SelectVariant.single}\n                aria-label={t(\"prompt\")}\n                isOpen={promptOpen}\n              >\n                {Object.entries(promptOptions).map(([key, val]) => (\n                  <SelectOption\n                    selected={val === field.value}\n                    key={key}\n                    value={val}\n                  >\n                    {t(`prompts.${key}`)}\n                  </SelectOption>\n                ))}\n              </Select>\n            )}\n          />\n        </FormGroupField>\n        <SwitchField\n          field=\"config.acceptsPromptNoneForwardFromClient\"\n          label=\"acceptsPromptNone\"\n        />\n        <FormGroup\n          label={t(\"allowedClockSkew\")}\n          labelIcon={\n            <HelpItem\n              helpText={\"identity-providers-help:allowedClockSkew\"}\n              fieldLabelId=\"identity-providers:allowedClockSkew\"\n            />\n          }\n          fieldId=\"allowedClockSkew\"\n        >\n          <Controller\n            name=\"config.allowedClockSkew\"\n            defaultValue={0}\n            control={control}\n            render={({ field }) => {\n              const v = Number(field.value);\n              return (\n                <NumberInput\n                  data-testid=\"allowedClockSkew\"\n                  inputName=\"allowedClockSkew\"\n                  min={0}\n                  max={2147483}\n                  value={v}\n                  readOnly\n                  onPlus={() => field.onChange(v + 1)}\n                  onMinus={() => field.onChange(v - 1)}\n                  onChange={(event) => {\n                    const value = Number(\n                      (event.target as HTMLInputElement).value\n                    );\n                    field.onChange(value < 0 ? 0 : value);\n                  }}\n                />\n              );\n            }}\n          />\n        </FormGroup>\n        <TextField field=\"config.forwardParameters\" label=\"forwardParameters\" />\n      </Form>\n    </ExpandableSection>\n  );\n};\n","import {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\n\nconst comparisonValues = [\"exact\", \"minimum\", \"maximum\", \"better\"];\n\nexport const ReqAuthnConstraints = () => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { control } = useFormContext();\n  const [comparisonOpen, setComparisonOpen] = useState(false);\n  return (\n    <>\n      <FormGroup\n        label={t(\"comparison\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:comparison\"\n            fieldLabelId=\"identity-providers:comparison\"\n          />\n        }\n        fieldId=\"comparison\"\n      >\n        <Controller\n          name=\"config.authnContextComparisonType\"\n          defaultValue={comparisonValues[0]}\n          control={control}\n          render={({ field }) => (\n            <Select\n              toggleId=\"comparison\"\n              required\n              direction=\"up\"\n              onToggle={(isExpanded) => setComparisonOpen(isExpanded)}\n              onSelect={(_, value) => {\n                field.onChange(value.toString());\n                setComparisonOpen(false);\n              }}\n              selections={field.value}\n              variant={SelectVariant.single}\n              aria-label={t(\"comparison\")}\n              isOpen={comparisonOpen}\n            >\n              {comparisonValues.map((option) => (\n                <SelectOption\n                  selected={option === field.value}\n                  key={option}\n                  value={option}\n                >\n                  {t(option)}\n                </SelectOption>\n              ))}\n            </Select>\n          )}\n        />\n      </FormGroup>\n      <FormGroup\n        label={t(\"authnContextClassRefs\")}\n        fieldId=\"kc-authnContextClassRefs\"\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:authnContextClassRefs\"\n            fieldLabelId=\"authnContextClassRefs\"\n          />\n        }\n      >\n        <MultiLineInput\n          name=\"config.authnContextClassRefs\"\n          aria-label={t(\"identify-providers:authnContextClassRefs\")}\n          addButtonLabel=\"identity-providers:addAuthnContextClassRef\"\n          data-testid=\"classref-field\"\n        />\n      </FormGroup>\n      <FormGroup\n        label={t(\"authnContextDeclRefs\")}\n        fieldId=\"kc-authnContextDeclRefs\"\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:authnContextDeclRefs\"\n            fieldLabelId=\"authnContextDeclRefs\"\n          />\n        }\n      >\n        <MultiLineInput\n          name=\"config.authnContextDeclRefs\"\n          aria-label={t(\"identify-providers:authnContextDeclRefs\")}\n          addButtonLabel=\"identity-providers:addAuthnContextDeclRef\"\n          data-testid=\"declref-field\"\n        />\n      </FormGroup>\n    </>\n  );\n};\n","import type IdentityProviderMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderMapperRepresentation\";\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  Divider,\n  DropdownItem,\n  Form,\n  PageSection,\n  Tab,\n  TabTitleText,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { ListEmptyState } from \"../../components/list-empty-state/ListEmptyState\";\nimport { PermissionsTab } from \"../../components/permission-tab/PermissionTab\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../../components/routable-tabs/RoutableTabs\";\nimport { ScrollForm } from \"../../components/scroll-form/ScrollForm\";\nimport { KeycloakDataTable } from \"../../components/table-toolbar/KeycloakDataTable\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { toUpperCase } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { ExtendedFieldsForm } from \"../component/ExtendedFieldsForm\";\nimport { toIdentityProviderAddMapper } from \"../routes/AddMapper\";\nimport { toIdentityProviderEditMapper } from \"../routes/EditMapper\";\nimport {\n  IdentityProviderParams,\n  IdentityProviderTab,\n  toIdentityProvider,\n} from \"../routes/IdentityProvider\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { AdvancedSettings } from \"./AdvancedSettings\";\nimport { DescriptorSettings } from \"./DescriptorSettings\";\nimport { DiscoverySettings } from \"./DiscoverySettings\";\nimport { ExtendedNonDiscoverySettings } from \"./ExtendedNonDiscoverySettings\";\nimport { GeneralSettings } from \"./GeneralSettings\";\nimport { OIDCAuthentication } from \"./OIDCAuthentication\";\nimport { OIDCGeneralSettings } from \"./OIDCGeneralSettings\";\nimport { ReqAuthnConstraints } from \"./ReqAuthnConstraintsSettings\";\nimport { SamlGeneralSettings } from \"./SamlGeneralSettings\";\n\ntype HeaderProps = {\n  onChange: (value: boolean) => void;\n  value: boolean;\n  save: () => void;\n  toggleDeleteDialog: () => void;\n};\n\ntype IdPWithMapperAttributes = IdentityProviderMapperRepresentation & {\n  name: string;\n  category?: string;\n  helpText?: string;\n  type: string;\n  mapperId: string;\n};\n\nconst Header = ({ onChange, value, save, toggleDeleteDialog }: HeaderProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { alias: displayName } = useParams<{ alias: string }>();\n  const { adminClient } = useAdminClient();\n  const [provider, setProvider] = useState<IdentityProviderRepresentation>();\n\n  useFetch(\n    () => adminClient.identityProviders.findOne({ alias: displayName }),\n    (fetchedProvider) => {\n      if (!fetchedProvider) {\n        throw new Error(t(\"common:notFound\"));\n      }\n      setProvider(fetchedProvider);\n    },\n    []\n  );\n\n  const [toggleDisableDialog, DisableConfirm] = useConfirmDialog({\n    titleKey: \"identity-providers:disableProvider\",\n    messageKey: t(\"disableConfirm\", { provider: displayName }),\n    continueButtonLabel: \"common:disable\",\n    onConfirm: () => {\n      onChange(!value);\n      save();\n    },\n  });\n\n  return (\n    <>\n      <DisableConfirm />\n      <ViewHeader\n        titleKey={toUpperCase(\n          provider\n            ? provider.displayName\n              ? provider.displayName\n              : provider.providerId!\n            : \"\"\n        )}\n        divider={false}\n        dropdownItems={[\n          <DropdownItem key=\"delete\" onClick={() => toggleDeleteDialog()}>\n            {t(\"common:delete\")}\n          </DropdownItem>,\n        ]}\n        isEnabled={value}\n        onToggle={(value) => {\n          if (!value) {\n            toggleDisableDialog();\n          } else {\n            onChange(value);\n            save();\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default function DetailSettings() {\n  const { t } = useTranslation(\"identity-providers\");\n  const { alias, providerId } = useParams<IdentityProviderParams>();\n\n  const form = useForm<IdentityProviderRepresentation>();\n  const { handleSubmit, getValues, reset } = form;\n  const [provider, setProvider] = useState<IdentityProviderRepresentation>();\n  const [selectedMapper, setSelectedMapper] =\n    useState<IdPWithMapperAttributes>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const [key, setKey] = useState(0);\n  const { profileInfo } = useServerInfo();\n  const refresh = () => setKey(key + 1);\n\n  const MapperLink = ({ name, mapperId }: IdPWithMapperAttributes) => (\n    <Link\n      to={toIdentityProviderEditMapper({\n        realm,\n        alias,\n        providerId: provider?.providerId!,\n        id: mapperId,\n      })}\n    >\n      {name}\n    </Link>\n  );\n\n  useFetch(\n    () => adminClient.identityProviders.findOne({ alias }),\n    (fetchedProvider) => {\n      if (!fetchedProvider) {\n        throw new Error(t(\"common:notFound\"));\n      }\n\n      reset(fetchedProvider);\n      setProvider(fetchedProvider);\n\n      if (fetchedProvider.config!.authnContextClassRefs) {\n        form.setValue(\n          \"config.authnContextClassRefs\",\n          JSON.parse(fetchedProvider.config?.authnContextClassRefs)\n        );\n      }\n\n      if (fetchedProvider.config!.authnContextDeclRefs) {\n        form.setValue(\n          \"config.authnContextDeclRefs\",\n          JSON.parse(fetchedProvider.config?.authnContextDeclRefs)\n        );\n      }\n    },\n    []\n  );\n\n  const toTab = (tab: IdentityProviderTab) =>\n    toIdentityProvider({\n      realm,\n      alias,\n      providerId,\n      tab,\n    });\n\n  const useTab = (tab: IdentityProviderTab) => useRoutableTab(toTab(tab));\n\n  const settingsTab = useTab(\"settings\");\n  const mappersTab = useTab(\"mappers\");\n  const permissionsTab = useTab(\"permissions\");\n\n  const save = async (savedProvider?: IdentityProviderRepresentation) => {\n    const p = savedProvider || getValues();\n    if (p.config?.authnContextClassRefs)\n      p.config.authnContextClassRefs = JSON.stringify(\n        p.config.authnContextClassRefs\n      );\n    if (p.config?.authnContextDeclRefs)\n      p.config.authnContextDeclRefs = JSON.stringify(\n        p.config.authnContextDeclRefs\n      );\n\n    try {\n      await adminClient.identityProviders.update(\n        { alias },\n        {\n          ...p,\n          config: { ...provider?.config, ...p.config },\n          alias,\n          providerId,\n        }\n      );\n      addAlert(t(\"updateSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"identity-providers:updateError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"identity-providers:deleteProvider\",\n    messageKey: t(\"identity-providers:deleteConfirm\", { provider: alias }),\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.identityProviders.del({ alias: alias });\n        addAlert(t(\"deletedSuccess\"), AlertVariant.success);\n        navigate(toIdentityProviders({ realm }));\n      } catch (error) {\n        addError(\"identity-providers:deleteErrorError\", error);\n      }\n    },\n  });\n\n  const [toggleDeleteMapperDialog, DeleteMapperConfirm] = useConfirmDialog({\n    titleKey: \"identity-providers:deleteProviderMapper\",\n    messageKey: t(\"identity-providers:deleteMapperConfirm\", {\n      mapper: selectedMapper?.name,\n    }),\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.identityProviders.delMapper({\n          alias: alias,\n          id: selectedMapper?.mapperId!,\n        });\n        addAlert(t(\"deleteMapperSuccess\"), AlertVariant.success);\n        refresh();\n        navigate(\n          toIdentityProvider({ providerId, alias, tab: \"mappers\", realm })\n        );\n      } catch (error) {\n        addError(\"identity-providers:deleteErrorError\", error);\n      }\n    },\n  });\n\n  if (!provider) {\n    return <KeycloakSpinner />;\n  }\n\n  const isOIDC = provider.providerId!.includes(\"oidc\");\n  const isSAML = provider.providerId!.includes(\"saml\");\n\n  const loader = async () => {\n    const [loaderMappers, loaderMapperTypes] = await Promise.all([\n      adminClient.identityProviders.findMappers({ alias }),\n      adminClient.identityProviders.findMapperTypes({ alias }),\n    ]);\n\n    const components = loaderMappers.map((loaderMapper) => {\n      const mapperType = Object.values(loaderMapperTypes).find(\n        (loaderMapperType) =>\n          loaderMapper.identityProviderMapper! === loaderMapperType.id!\n      );\n\n      const result: IdPWithMapperAttributes = {\n        ...mapperType,\n        name: loaderMapper.name!,\n        type: mapperType?.name!,\n        mapperId: loaderMapper.id!,\n      };\n\n      return result;\n    });\n\n    return components;\n  };\n\n  const sections = [\n    {\n      title: t(\"generalSettings\"),\n      panel: (\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(save)}\n        >\n          {!isOIDC && !isSAML && (\n            <>\n              <GeneralSettings create={false} id={alias} />\n              <ExtendedFieldsForm providerId={alias} />\n            </>\n          )}\n          {isOIDC && <OIDCGeneralSettings id={alias} />}\n          {isSAML && <SamlGeneralSettings id={alias} isAliasReadonly />}\n        </FormAccess>\n      ),\n    },\n    {\n      title: t(\"oidcSettings\"),\n      isHidden: !isOIDC,\n      panel: (\n        <>\n          <DiscoverySettings readOnly={false} />\n          <Form isHorizontal className=\"pf-u-py-lg\">\n            <Divider />\n            <OIDCAuthentication create={false} />\n          </Form>\n          <ExtendedNonDiscoverySettings />\n        </>\n      ),\n    },\n    {\n      title: t(\"samlSettings\"),\n      isHidden: !isSAML,\n      panel: <DescriptorSettings readOnly={false} />,\n    },\n    {\n      title: t(\"reqAuthnConstraints\"),\n      isHidden: !isSAML,\n      panel: (\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(save)}\n        >\n          <ReqAuthnConstraints />\n        </FormAccess>\n      ),\n    },\n    {\n      title: t(\"advancedSettings\"),\n      panel: (\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(save)}\n        >\n          <AdvancedSettings isOIDC={isOIDC!} isSAML={isSAML!} />\n\n          <ActionGroup className=\"keycloak__form_actions\">\n            <Button data-testid={\"save\"} type=\"submit\">\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              data-testid={\"revert\"}\n              variant=\"link\"\n              onClick={() => {\n                reset();\n              }}\n            >\n              {t(\"common:revert\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      ),\n    },\n  ];\n\n  return (\n    <FormProvider {...form}>\n      <DeleteConfirm />\n      <DeleteMapperConfirm />\n      <Controller\n        name=\"enabled\"\n        control={form.control}\n        defaultValue={true}\n        render={({ field }) => (\n          <Header\n            value={field.value || false}\n            onChange={field.onChange}\n            save={save}\n            toggleDeleteDialog={toggleDeleteDialog}\n          />\n        )}\n      />\n\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <RoutableTabs isBox defaultLocation={toTab(\"settings\")}>\n          <Tab\n            id=\"settings\"\n            title={<TabTitleText>{t(\"common:settings\")}</TabTitleText>}\n            {...settingsTab}\n          >\n            <ScrollForm className=\"pf-u-px-lg\" sections={sections} />\n          </Tab>\n          <Tab\n            id=\"mappers\"\n            data-testid=\"mappers-tab\"\n            title={<TabTitleText>{t(\"common:mappers\")}</TabTitleText>}\n            {...mappersTab}\n          >\n            <KeycloakDataTable\n              emptyState={\n                <ListEmptyState\n                  message={t(\"identity-providers:noMappers\")}\n                  instructions={t(\"identity-providers:noMappersInstructions\")}\n                  primaryActionText={t(\"identity-providers:addMapper\")}\n                  onPrimaryAction={() =>\n                    navigate(\n                      toIdentityProviderAddMapper({\n                        realm,\n                        alias: alias!,\n                        providerId: provider.providerId!,\n                        tab: \"mappers\",\n                      })\n                    )\n                  }\n                />\n              }\n              loader={loader}\n              key={key}\n              ariaLabelKey=\"identity-providers:mappersList\"\n              searchPlaceholderKey=\"identity-providers:searchForMapper\"\n              toolbarItem={\n                <ToolbarItem>\n                  <Button\n                    id=\"add-mapper-button\"\n                    component={(props) => (\n                      <Link\n                        {...props}\n                        to={toIdentityProviderAddMapper({\n                          realm,\n                          alias: alias!,\n                          providerId: provider.providerId!,\n                          tab: \"mappers\",\n                        })}\n                      />\n                    )}\n                    data-testid=\"addMapper\"\n                  >\n                    {t(\"addMapper\")}\n                  </Button>\n                </ToolbarItem>\n              }\n              columns={[\n                {\n                  name: \"name\",\n                  displayKey: \"common:name\",\n                  cellRenderer: MapperLink,\n                },\n                {\n                  name: \"category\",\n                  displayKey: \"common:category\",\n                },\n                {\n                  name: \"type\",\n                  displayKey: \"common:type\",\n                },\n              ]}\n              actions={[\n                {\n                  title: t(\"common:delete\"),\n                  onRowClick: (mapper) => {\n                    setSelectedMapper(mapper);\n                    toggleDeleteMapperDialog();\n                  },\n                },\n              ]}\n            />\n          </Tab>\n          {!profileInfo?.disabledFeatures?.includes(\n            \"ADMIN_FINE_GRAINED_AUTHZ\"\n          ) && (\n            <Tab\n              id=\"permissions\"\n              data-testid=\"permissionsTab\"\n              title={<TabTitleText>{t(\"common:permissions\")}</TabTitleText>}\n              {...permissionsTab}\n            >\n              <PermissionsTab id={alias} type=\"identityProviders\" />\n            </Tab>\n          )}\n        </RoutableTabs>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["LoginFlow","field","label","defaultValue","t","useTranslation","control","useFormContext","adminClient","useAdminClient","flows","setFlows","useState","open","setOpen","useFetch","authenticationManagement","getFlows","filter","flow","providerId","FormGroup","HelpItem","Controller","Select","_","value","onChange","SelectVariant","single","SelectOption","map","option","_jsx","alias","id","syncModes","AdvancedSettings","isOIDC","isSAML","syncModeOpen","setSyncModeOpen","_Fragment","TextField","SwitchField","toUpperCase","toLowerCase","promptOptions","unspecified","none","consent","login","select_account","ExtendedNonDiscoverySettings","isExpanded","setIsExpanded","promptOpen","setPromptOpen","ExpandableSection","Form","FormGroupField","Object","entries","key","val","v","Number","NumberInput","event","target","comparisonValues","ReqAuthnConstraints","comparisonOpen","setComparisonOpen","toString","MultiLineInput","Header","save","toggleDeleteDialog","displayName","useParams","provider","setProvider","identityProviders","findOne","fetchedProvider","Error","toggleDisableDialog","DisableConfirm","useConfirmDialog","titleKey","messageKey","continueButtonLabel","onConfirm","ViewHeader","DropdownItem","DetailSettings","form","useForm","handleSubmit","getValues","reset","selectedMapper","setSelectedMapper","addAlert","addError","useAlerts","navigate","useNavigate","realm","useRealm","setKey","profileInfo","useServerInfo","refresh","MapperLink","name","mapperId","Link","toIdentityProviderEditMapper","config","authnContextClassRefs","setValue","JSON","parse","authnContextDeclRefs","toTab","tab","toIdentityProvider","useTab","useRoutableTab","settingsTab","mappersTab","permissionsTab","savedProvider","p","stringify","update","AlertVariant","success","error","DeleteConfirm","continueButtonVariant","ButtonVariant","danger","del","toIdentityProviders","toggleDeleteMapperDialog","DeleteMapperConfirm","mapper","delMapper","KeycloakSpinner","includes","loader","loaderMappers","loaderMapperTypes","Promise","all","findMappers","findMapperTypes","components","loaderMapper","mapperType","values","find","identityProviderMapper","loaderMapperType","result","type","sections","title","panel","FormAccess","GeneralSettings","ExtendedFieldsForm","OIDCGeneralSettings","SamlGeneralSettings","isHidden","DiscoverySettings","_jsxs","Divider","OIDCAuthentication","DescriptorSettings","ActionGroup","Button","FormProvider","PageSection","RoutableTabs","Tab","TabTitleText","ScrollForm","KeycloakDataTable","ListEmptyState","toIdentityProviderAddMapper","ToolbarItem","props","displayKey","cellRenderer","onRowClick","disabledFeatures","PermissionsTab"],"mappings":"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"}