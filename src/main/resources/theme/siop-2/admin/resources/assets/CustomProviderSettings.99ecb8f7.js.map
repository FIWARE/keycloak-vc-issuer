{"version":3,"file":"CustomProviderSettings.99ecb8f7.js","sources":["../../src/user-federation/custom/SyncSettings.tsx","../../src/user-federation/custom/CustomProviderSettings.tsx"],"sourcesContent":["import { FormGroup, Switch } from \"@patternfly/react-core\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\n\nexport const SyncSettings = () => {\n  const { t } = useTranslation(\"user-federation\");\n  const { control, register, watch } = useFormContext();\n  const watchPeriodicSync = watch(\"config.fullSyncPeriod\", \"-1\");\n  const watchChangedSync = watch(\"config.changedSyncPeriod\", \"-1\");\n\n  return (\n    <>\n      <FormGroup\n        label={t(\"periodicFullSync\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"user-federation-help:periodicFullSyncHelp\"\n            fieldLabelId=\"user-federation:periodicFullSync\"\n          />\n        }\n        fieldId=\"kc-periodic-full-sync\"\n        hasNoPaddingTop\n      >\n        <Controller\n          name=\"config.fullSyncPeriod\"\n          defaultValue=\"-1\"\n          control={control}\n          render={({ field }) => (\n            <Switch\n              id=\"kc-periodic-full-sync\"\n              data-testid=\"periodic-full-sync\"\n              onChange={(value) => {\n                field.onChange(value ? \"604800\" : \"-1\");\n              }}\n              isChecked={field.value !== \"-1\"}\n              label={t(\"common:on\")}\n              labelOff={t(\"common:off\")}\n              aria-label={t(\"periodicFullSync\")}\n            />\n          )}\n        />\n      </FormGroup>\n      {watchPeriodicSync !== \"-1\" && (\n        <FormGroup\n          hasNoPaddingTop\n          label={t(\"fullSyncPeriod\")}\n          labelIcon={\n            <HelpItem\n              helpText=\"user-federation-help:fullSyncPeriodHelp\"\n              fieldLabelId=\"user-federation:fullSyncPeriod\"\n            />\n          }\n          fieldId=\"kc-full-sync-period\"\n        >\n          <KeycloakTextInput\n            type=\"number\"\n            min={-1}\n            defaultValue=\"604800\"\n            id=\"kc-full-sync-period\"\n            data-testid=\"full-sync-period\"\n            {...register(\"config.fullSyncPeriod\")}\n          />\n        </FormGroup>\n      )}\n      <FormGroup\n        label={t(\"periodicChangedUsersSync\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"user-federation-help:periodicChangedUsersSyncHelp\"\n            fieldLabelId=\"user-federation:periodicChangedUsersSync\"\n          />\n        }\n        fieldId=\"kc-periodic-changed-users-sync\"\n        hasNoPaddingTop\n      >\n        <Controller\n          name=\"config.changedSyncPeriod\"\n          defaultValue=\"-1\"\n          control={control}\n          render={({ field }) => (\n            <Switch\n              id=\"kc-periodic-changed-users-sync\"\n              data-testid=\"periodic-changed-users-sync\"\n              onChange={(value) => {\n                field.onChange(value ? \"86400\" : \"-1\");\n              }}\n              isChecked={field.value !== \"-1\"}\n              label={t(\"common:on\")}\n              labelOff={t(\"common:off\")}\n              aria-label={t(\"periodicChangedUsersSync\")}\n            />\n          )}\n        />\n      </FormGroup>\n      {watchChangedSync !== \"-1\" && (\n        <FormGroup\n          label={t(\"changedUsersSyncPeriod\")}\n          labelIcon={\n            <HelpItem\n              helpText=\"user-federation-help:changedUsersSyncHelp\"\n              fieldLabelId=\"user-federation:changedUsersSyncPeriod\"\n            />\n          }\n          fieldId=\"kc-changed-users-sync-period\"\n          hasNoPaddingTop\n        >\n          <KeycloakTextInput\n            type=\"number\"\n            min={-1}\n            defaultValue=\"86400\"\n            id=\"kc-changed-users-sync-period\"\n            data-testid=\"changed-users-sync-period\"\n            {...register(\"config.changedSyncPeriod\")}\n          />\n        </FormGroup>\n      )}\n    </>\n  );\n};\n","import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  FormGroup,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { DynamicComponents } from \"../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport type { CustomUserFederationRouteParams } from \"../routes/CustomUserFederation\";\nimport { toUserFederation } from \"../routes/UserFederation\";\nimport { ExtendedHeader } from \"../shared/ExtendedHeader\";\nimport { SettingsCache } from \"../shared/SettingsCache\";\nimport { SyncSettings } from \"./SyncSettings\";\n\nimport \"./custom-provider-settings.css\";\n\nexport default function CustomProviderSettings() {\n  const { t } = useTranslation(\"user-federation\");\n  const { id, providerId } = useParams<CustomUserFederationRouteParams>();\n  const navigate = useNavigate();\n  const form = useForm<ComponentRepresentation>({\n    mode: \"onChange\",\n  });\n  const {\n    register,\n    reset,\n    setValue,\n    handleSubmit,\n    formState: { errors, isDirty },\n  } = form;\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const { realm: realmName } = useRealm();\n  const [parentId, setParentId] = useState(\"\");\n\n  const provider = (\n    useServerInfo().componentTypes?.[\n      \"org.keycloak.storage.UserStorageProvider\"\n    ] || []\n  ).find((p) => p.id === providerId);\n\n  useFetch(\n    async () => {\n      if (id) {\n        return await adminClient.components.findOne({ id });\n      }\n      return undefined;\n    },\n    (fetchedComponent) => {\n      if (fetchedComponent) {\n        convertToFormValues(fetchedComponent, setValue);\n      } else if (id) {\n        throw new Error(t(\"common:notFound\"));\n      }\n    },\n    []\n  );\n\n  useFetch(\n    () =>\n      adminClient.realms.findOne({\n        realm: realmName,\n      }),\n    (realm) => setParentId(realm?.id!),\n    []\n  );\n\n  const save = async (component: ComponentRepresentation) => {\n    const saveComponent = convertFormValuesToObject({\n      ...component,\n      config: Object.fromEntries(\n        Object.entries(component.config || {}).map(([key, value]) => [\n          key,\n          Array.isArray(value) ? value : [value],\n        ])\n      ),\n      providerId,\n      providerType: \"org.keycloak.storage.UserStorageProvider\",\n      parentId,\n    });\n\n    try {\n      if (!id) {\n        await adminClient.components.create(saveComponent);\n        navigate(toUserFederation({ realm: realmName }));\n      } else {\n        await adminClient.components.update({ id }, saveComponent);\n      }\n      reset({ ...component });\n      addAlert(t(!id ? \"createSuccess\" : \"saveSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(`user-federation:${!id ? \"createError\" : \"saveError\"}`, error);\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      <ExtendedHeader provider={providerId} save={() => handleSubmit(save)()} />\n      <PageSection variant=\"light\">\n        <FormAccess\n          role=\"manage-realm\"\n          isHorizontal\n          className=\"keycloak__user-federation__custom-form\"\n          onSubmit={handleSubmit(save)}\n        >\n          <FormGroup\n            label={t(\"uiDisplayName\")}\n            labelIcon={\n              <HelpItem\n                helpText=\"user-federation-help:uiDisplayNameHelp\"\n                fieldLabelId=\"user-federation:uiDisplayName\"\n              />\n            }\n            helperTextInvalid={t(\"validateName\")}\n            validated={errors.name ? \"error\" : \"default\"}\n            fieldId=\"kc-ui-display-name\"\n            isRequired\n          >\n            <KeycloakTextInput\n              isRequired\n              id=\"kc-ui-display-name\"\n              data-testid=\"ui-name\"\n              validated={errors.name ? \"error\" : \"default\"}\n              {...register(\"name\", {\n                required: true,\n              })}\n            />\n          </FormGroup>\n          <FormProvider {...form}>\n            <DynamicComponents properties={provider?.properties || []} />\n            {provider?.metadata.synchronizable && <SyncSettings />}\n          </FormProvider>\n          <SettingsCache form={form} unWrap />\n          <ActionGroup>\n            <Button\n              isDisabled={!isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"custom-save\"\n            >\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              component={(props) => (\n                <Link {...props} to={toUserFederation({ realm: realmName })} />\n              )}\n              data-testid=\"custom-cancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["SyncSettings","t","useTranslation","control","register","watch","useFormContext","watchPeriodicSync","watchChangedSync","_Fragment","_jsx","FormGroup","HelpItem","Controller","field","Switch","value","onChange","KeycloakTextInput","CustomProviderSettings","id","providerId","useParams","navigate","useNavigate","form","useForm","mode","reset","setValue","handleSubmit","formState","errors","isDirty","adminClient","useAdminClient","addAlert","addError","useAlerts","realm","realmName","useRealm","parentId","setParentId","useState","provider","useServerInfo","componentTypes","find","p","useFetch","components","findOne","fetchedComponent","convertToFormValues","Error","realms","save","component","saveComponent","convertFormValuesToObject","config","Object","fromEntries","entries","map","key","Array","isArray","providerType","update","create","toUserFederation","AlertVariant","success","error","FormProvider","ExtendedHeader","PageSection","FormAccess","name","required","_jsxs","DynamicComponents","properties","metadata","synchronizable","SettingsCache","ActionGroup","Button","props","Link"],"mappings":"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"}