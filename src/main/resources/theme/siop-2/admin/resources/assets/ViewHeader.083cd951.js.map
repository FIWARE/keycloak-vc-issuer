{"version":3,"file":"ViewHeader.083cd951.js","sources":["../../../../node_modules/@patternfly/react-styles/css/layouts/Level/level.mjs","../../../../node_modules/@patternfly/react-core/dist/esm/layouts/Level/Level.js","../../../../node_modules/@patternfly/react-core/dist/esm/layouts/Level/LevelItem.js","../../src/components/external-link/FormattedLink.tsx","../../src/components/view-header/ViewHeader.tsx"],"sourcesContent":["import './level.css';\nexport default {\n  \"level\": \"pf-l-level\",\n  \"modifiers\": {\n    \"gutter\": \"pf-m-gutter\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Level/level';\nexport const Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = __rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.level, hasGutter && styles.modifiers.gutter, className) }), children));\n};\nLevel.displayName = 'Level';\n//# sourceMappingURL=Level.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const LevelItem = (_a) => {\n    var { children = null } = _a, props = __rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nLevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import { AnchorHTMLAttributes } from \"react\";\nimport { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\nimport type { IFormatter, IFormatterValueType } from \"@patternfly/react-table\";\n\nexport type FormattedLinkProps = AnchorHTMLAttributes<HTMLAnchorElement> & {\n  isInline?: boolean;\n};\n\nexport const FormattedLink = ({\n  title,\n  href,\n  isInline,\n  ...rest\n}: FormattedLinkProps) => {\n  return (\n    <a\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      className={isInline ? \"pf-m-link pf-m-inline\" : \"\"}\n      {...rest}\n    >\n      {title ? title : href}{\" \"}\n      {href?.startsWith(\"http\") && <ExternalLinkAltIcon />}\n    </a>\n  );\n};\n\nexport const formattedLinkTableCell =\n  (): IFormatter => (data?: IFormatterValueType) => {\n    return (\n      data ? <FormattedLink href={data.toString()} /> : undefined\n    ) as object;\n  };\n","import {\n  Badge,\n  Button,\n  Divider,\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  Level,\n  LevelItem,\n  PageSection,\n  Switch,\n  Text,\n  TextContent,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport {\n  ReactElement,\n  ReactNode,\n  useState,\n  isValidElement,\n  Fragment,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormattedLink } from \"../external-link/FormattedLink\";\nimport { useHelp } from \"../help-enabler/HelpHeader\";\nimport { HelpItem } from \"../help-enabler/HelpItem\";\nimport \"../../help-urls\";\n\nexport type ViewHeaderProps = {\n  titleKey: string;\n  className?: string;\n  badges?: ViewHeaderBadge[];\n  isDropdownDisabled?: boolean;\n  subKey?: string | ReactNode;\n  actionsDropdownId?: string;\n  helpUrl?: string | undefined;\n  dropdownItems?: ReactElement[];\n  lowerDropdownItems?: any;\n  lowerDropdownMenuTitle?: any;\n  lowerButton?: any;\n  isEnabled?: boolean;\n  onToggle?: (value: boolean) => void;\n  divider?: boolean;\n  helpTextKey?: string;\n  isReadOnly?: boolean;\n};\n\nexport type ViewHeaderBadge = {\n  id?: string;\n  text?: string | ReactNode;\n  readonly?: boolean;\n};\n\nexport const ViewHeader = ({\n  actionsDropdownId,\n  className,\n  titleKey,\n  badges,\n  isDropdownDisabled,\n  subKey,\n  helpUrl,\n  dropdownItems,\n  lowerDropdownMenuTitle,\n  lowerDropdownItems,\n  lowerButton,\n  isEnabled = true,\n  onToggle,\n  divider = true,\n  helpTextKey,\n  isReadOnly = false,\n}: ViewHeaderProps) => {\n  const { t, i18n } = useTranslation();\n  const { enabled } = useHelp();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isLowerDropdownOpen, setIsLowerDropdownOpen] = useState(false);\n\n  const onDropdownToggle = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  const onLowerDropdownToggle = () => {\n    setIsLowerDropdownOpen(!isLowerDropdownOpen);\n  };\n\n  const toKey = (value: string) => value.replace(/\\s/g, \"-\");\n\n  return (\n    <>\n      <PageSection variant=\"light\">\n        <Level hasGutter>\n          <LevelItem>\n            <Level>\n              <LevelItem>\n                <TextContent className=\"pf-u-mr-sm\">\n                  <Text className={className} component=\"h1\">\n                    {i18n.exists(titleKey) ? t(titleKey) : titleKey}\n                  </Text>\n                </TextContent>\n              </LevelItem>\n              {badges && (\n                <LevelItem>\n                  {badges.map((badge, index) => (\n                    <Fragment key={index}>\n                      {!isValidElement(badge.text) && (\n                        <Fragment key={badge.text as string}>\n                          <Badge data-testid={badge.id} isRead={badge.readonly}>\n                            {badge.text}\n                          </Badge>{\" \"}\n                        </Fragment>\n                      )}\n                      {isValidElement(badge.text) && badge.text}{\" \"}\n                    </Fragment>\n                  ))}\n                </LevelItem>\n              )}\n            </Level>\n          </LevelItem>\n          <LevelItem>\n            <Toolbar className=\"pf-u-p-0\">\n              <ToolbarContent>\n                {onToggle && (\n                  <ToolbarItem>\n                    <Switch\n                      id={`${toKey(titleKey)}-switch`}\n                      data-testid={`${titleKey}-switch`}\n                      label={t(\"common:enabled\")}\n                      labelOff={t(\"common:disabled\")}\n                      className=\"pf-u-mr-lg\"\n                      isDisabled={isReadOnly}\n                      isChecked={isEnabled}\n                      aria-label={t(\"common:enabled\")}\n                      onChange={(value) => {\n                        onToggle(value);\n                      }}\n                    />\n                    {helpTextKey && (\n                      <HelpItem\n                        helpText={t(helpTextKey)}\n                        fieldLabelId={`${toKey(titleKey)}-switch`}\n                      />\n                    )}\n                  </ToolbarItem>\n                )}\n                {dropdownItems && (\n                  <ToolbarItem>\n                    <Dropdown\n                      position={DropdownPosition.right}\n                      toggle={\n                        <DropdownToggle\n                          isDisabled={isDropdownDisabled}\n                          id={actionsDropdownId}\n                          onToggle={onDropdownToggle}\n                        >\n                          {t(\"common:action\")}\n                        </DropdownToggle>\n                      }\n                      isOpen={isDropdownOpen}\n                      dropdownItems={dropdownItems}\n                      data-testid=\"action-dropdown\"\n                    />\n                  </ToolbarItem>\n                )}\n              </ToolbarContent>\n            </Toolbar>\n          </LevelItem>\n        </Level>\n        {enabled && (\n          <TextContent id=\"view-header-subkey\">\n            <Text>\n              {isValidElement(subKey)\n                ? subKey\n                : subKey\n                ? t(subKey as string)\n                : \"\"}\n              {helpUrl && (\n                <FormattedLink\n                  title={t(\"common:learnMore\")}\n                  href={helpUrl}\n                  isInline\n                  className=\"pf-u-ml-md\"\n                />\n              )}\n            </Text>\n          </TextContent>\n        )}\n        {lowerDropdownItems && (\n          <Dropdown\n            className=\"keycloak__user-federation__dropdown\"\n            toggle={\n              <DropdownToggle\n                onToggle={() => onLowerDropdownToggle()}\n                isPrimary\n                id=\"ufToggleId\"\n              >\n                {t(lowerDropdownMenuTitle)}\n              </DropdownToggle>\n            }\n            isOpen={isLowerDropdownOpen}\n            dropdownItems={lowerDropdownItems}\n          />\n        )}\n        {lowerButton && (\n          <Button\n            variant={lowerButton.variant}\n            onClick={lowerButton.onClick}\n            data-testid=\"viewHeader-lower-btn\"\n          >\n            {lowerButton.lowerButtonTitle}\n          </Button>\n        )}\n      </PageSection>\n      {divider && <Divider component=\"div\" />}\n    </>\n  );\n};\n"],"names":["styles","Level","_a","hasGutter","className","children","props","__rest","_jsx","Object","assign","css","level","modifiers","gutter","displayName","LevelItem","FormattedLink","title","href","isInline","rest","startsWith","ExternalLinkAltIcon","formattedLinkTableCell","data","toString","undefined","ViewHeader","actionsDropdownId","titleKey","badges","isDropdownDisabled","subKey","helpUrl","dropdownItems","lowerDropdownMenuTitle","lowerDropdownItems","lowerButton","isEnabled","onToggle","divider","helpTextKey","isReadOnly","t","i18n","useTranslation","enabled","useHelp","isDropdownOpen","setDropdownOpen","useState","isLowerDropdownOpen","setIsLowerDropdownOpen","onDropdownToggle","onLowerDropdownToggle","toKey","value","replace","_Fragment","_jsxs","PageSection","TextContent","Text","exists","map","badge","index","Fragment","isValidElement","text","Badge","id","readonly","Toolbar","ToolbarContent","ToolbarItem","Switch","HelpItem","Dropdown","DropdownPosition","right","DropdownToggle","Button","variant","onClick","lowerButtonTitle","Divider"],"mappings":"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"}