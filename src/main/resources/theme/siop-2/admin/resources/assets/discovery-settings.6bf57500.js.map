{"version":3,"file":"discovery-settings.6bf57500.js","sources":["../../src/identity-providers/component/FormGroupField.tsx","../../src/identity-providers/component/SwitchField.tsx","../../src/identity-providers/component/TextField.tsx"],"sourcesContent":["import { FormGroup } from \"@patternfly/react-core\";\nimport { PropsWithChildren } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\n\nexport type FieldProps = { label: string; field: string; isReadOnly?: boolean };\nexport type FormGroupFieldProps = { label: string };\n\nexport const FormGroupField = ({\n  label,\n  children,\n}: PropsWithChildren<FormGroupFieldProps>) => {\n  const { t } = useTranslation(\"identity-providers\");\n  return (\n    <FormGroup\n      label={t(label)}\n      fieldId={label}\n      labelIcon={\n        <HelpItem\n          helpText={`identity-providers-help:${label}`}\n          fieldLabelId={`identity-providers:${label}`}\n        />\n      }\n    >\n      {children}\n    </FormGroup>\n  );\n};\n","import { Switch } from \"@patternfly/react-core\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { FieldProps, FormGroupField } from \"./FormGroupField\";\n\ntype FieldType = \"boolean\" | \"string\";\n\ntype SwitchFieldProps = FieldProps & {\n  fieldType?: FieldType;\n};\n\nexport const SwitchField = ({\n  label,\n  field,\n  fieldType = \"string\",\n  isReadOnly = false,\n}: SwitchFieldProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { control } = useFormContext();\n  return (\n    <FormGroupField label={label}>\n      <Controller\n        name={field}\n        defaultValue={fieldType === \"string\" ? \"false\" : false}\n        control={control}\n        render={({ field }) => (\n          <Switch\n            id={label}\n            label={t(\"common:on\")}\n            labelOff={t(\"common:off\")}\n            isChecked={\n              fieldType === \"string\"\n                ? field.value === \"true\"\n                : (field.value as boolean)\n            }\n            onChange={(value) =>\n              field.onChange(fieldType === \"string\" ? \"\" + value : value)\n            }\n            isDisabled={isReadOnly}\n            aria-label={label}\n          />\n        )}\n      />\n    </FormGroupField>\n  );\n};\n","import { useFormContext } from \"react-hook-form\";\n\nimport { FieldProps, FormGroupField } from \"./FormGroupField\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\n\nexport const TextField = ({ label, field, isReadOnly = false }: FieldProps) => {\n  const { register } = useFormContext();\n  return (\n    <FormGroupField label={label}>\n      <KeycloakTextInput\n        id={label}\n        data-testid={label}\n        isReadOnly={isReadOnly}\n        {...register(field)}\n      />\n    </FormGroupField>\n  );\n};\n"],"names":["FormGroupField","label","children","t","useTranslation","FormGroup","HelpItem","SwitchField","field","fieldType","isReadOnly","control","useFormContext","Controller","Switch","value","onChange","TextField","register","KeycloakTextInput"],"mappings":"qPASO,MAAMA,EAAiB,CAAC,CAC7BC,MAAAA,EACAC,SAAAA,CACsC,IAAM,CACtC,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EACjD,SACGC,EAAS,CACR,MAAOF,EAAEF,CAAK,EACd,QAASA,EACT,YACGK,EAAQ,CACP,SAAW,2BAA0BL,IACrC,aAAe,sBAAqBA,GAAAA,CAEvC,EAAA,SAAAC,CAAA,CAGS,CAEhB,EChBaK,EAAc,CAAC,CAC1BN,MAAAA,EACAO,MAAAA,EACAC,UAAAA,EAAY,SACZC,WAAAA,EAAa,EACG,IAAM,CAChB,KAAA,CAAEP,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAC3C,CAAEO,QAAAA,GAAYC,EAAgB,EACpC,SACGZ,EAAc,CAAC,MAAAC,EAAa,WAC1BY,EAAU,CACT,KAAML,EACN,aAAcC,IAAc,SAAW,QAAU,GACjD,QAAAE,EACA,OAAQ,CAAC,CAAEH,MAAAA,CAAAA,MACRM,EAAM,CACL,GAAIb,EACJ,MAAOE,EAAE,WAAW,EACpB,SAAUA,EAAE,YAAY,EACxB,UACEM,IAAc,SACVD,EAAMO,QAAU,OACfP,EAAMO,MAEb,YACEP,EAAMQ,SAASP,IAAc,SAAW,GAAKM,EAAQA,CAAK,EAE5D,WAAYL,EACZ,aAAYT,CAAAA,CAAM,CAAA,CAEpB,CAAA,CAEW,CAErB,ECzCagB,EAAY,CAAC,CAAEhB,MAAAA,EAAOO,MAAAA,EAAOE,WAAAA,EAAa,EAAkB,IAAM,CACvE,KAAA,CAAEQ,SAAAA,GAAaN,EAAgB,EACrC,SACGZ,EAAc,CAAC,MAAAC,EAAa,WAC1BkB,EAAiB,CAChB,GAAIlB,EACJ,cAAaA,EACb,WAAAS,EAAuB,GACnBQ,EAASV,CAAK,CAAA,CAAC,CAAA,CAEN,CAErB"}