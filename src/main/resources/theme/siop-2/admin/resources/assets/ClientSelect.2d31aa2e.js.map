{"version":3,"file":"ClientSelect.2d31aa2e.js","sources":["../../src/components/client/ClientSelect.tsx"],"sourcesContent":["import {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type { ClientQuery } from \"@keycloak/keycloak-admin-client/lib/resources/clients\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport type { ComponentProps } from \"../dynamic/components\";\nimport { HelpItem } from \"../help-enabler/HelpItem\";\n\ntype ClientSelectProps = ComponentProps & {\n  namespace: string;\n  required?: boolean;\n};\n\nexport const ClientSelect = ({\n  name,\n  label,\n  helpText,\n  defaultValue,\n  namespace,\n  isDisabled = false,\n  required = false,\n}: ClientSelectProps) => {\n  const { t } = useTranslation(namespace);\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [clients, setClients] = useState<ClientRepresentation[]>([]);\n  const [search, setSearch] = useState(\"\");\n\n  const { adminClient } = useAdminClient();\n\n  useFetch(\n    () => {\n      const params: ClientQuery = {\n        max: 20,\n      };\n      if (search) {\n        params.clientId = search;\n        params.search = true;\n      }\n      return adminClient.clients.find(params);\n    },\n    (clients) => setClients(clients),\n    [search]\n  );\n\n  const convert = (clients: ClientRepresentation[]) => [\n    <SelectOption key=\"empty\" value=\"\">\n      {t(\"common:none\")}\n    </SelectOption>,\n    ...clients.map((option) => (\n      <SelectOption key={option.id} value={option.clientId} />\n    )),\n  ];\n\n  return (\n    <FormGroup\n      label={t(label!)}\n      isRequired={required}\n      labelIcon={\n        <HelpItem\n          helpText={t(helpText!)}\n          fieldLabelId={`${namespace}:${label}`}\n        />\n      }\n      fieldId={name!}\n      validated={errors[name!] ? \"error\" : \"default\"}\n      helperTextInvalid={t(\"common:required\")}\n    >\n      <Controller\n        name={name!}\n        defaultValue={defaultValue || \"\"}\n        control={control}\n        rules={required ? { required: true } : {}}\n        render={({ field }) => (\n          <Select\n            toggleId={name}\n            variant={SelectVariant.typeahead}\n            onToggle={(open) => setOpen(open)}\n            isOpen={open}\n            isDisabled={isDisabled}\n            selections={field.value}\n            onFilter={(_, value) => {\n              setSearch(value);\n              return convert(clients);\n            }}\n            onSelect={(_, value) => {\n              field.onChange(value.toString());\n              setOpen(false);\n            }}\n            aria-label={t(label!)}\n          >\n            {convert(clients)}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n"],"names":["ClientSelect","name","label","helpText","defaultValue","namespace","isDisabled","required","t","useTranslation","control","formState","errors","useFormContext","open","setOpen","useState","clients","setClients","search","setSearch","adminClient","useAdminClient","useFetch","params","max","clientId","find","convert","SelectOption","map","option","id","FormGroup","HelpItem","Controller","field","Select","SelectVariant","typeahead","value","_","onChange","toString"],"mappings":"kQAqBO,MAAMA,EAAe,CAAC,CAC3BC,KAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAC,WAAAA,EAAa,GACbC,SAAAA,EAAW,EACM,IAAM,CACjB,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAeJ,CAAS,EAChC,CACJK,QAAAA,EACAC,UAAW,CAAEC,OAAAA,CAAO,GAClBC,EAAgB,EAEd,CAACC,EAAMC,CAAO,EAAIC,mBAAS,EAAK,EAChC,CAACC,EAASC,CAAU,EAAIF,EAAAA,QAAAA,SAAiC,CAAE,CAAA,EAC3D,CAACG,EAAQC,CAAS,EAAIJ,mBAAS,EAAE,EAEjC,CAAEK,YAAAA,GAAgBC,EAAgB,EAExCC,EACE,IAAM,CACJ,MAAMC,EAAsB,CAC1BC,IAAK,EAAA,EAEP,OAAIN,IACFK,EAAOE,SAAWP,EAClBK,EAAOL,OAAS,IAEXE,EAAYJ,QAAQU,KAAKH,CAAM,CAAA,EAEvCP,GAAYC,EAAWD,CAAO,EAC/B,CAACE,CAAM,CAAC,EAGV,MAAMS,EAAWX,GAAoC,GAClDY,EAAY,CAAa,MAAM,GAAE,SAC/BrB,EAAE,aAAa,CAAA,EADA,OAAO,EAGzB,GAAGS,EAAQa,IAAKC,KACbF,EAAY,CAAiB,MAAOE,EAAOL,QAAAA,EAAzBK,EAAOC,EAAE,CAC7B,CAAC,EAGJ,SACGC,EAAS,CACR,MAAOzB,EAAEN,CAAM,EACf,WAAYK,EACZ,YACG2B,EAAQ,CACP,SAAU1B,EAAEL,CAAS,EACrB,aAAe,GAAEE,KAAaH,GAAAA,CAEjC,EACD,QAASD,EACT,UAAWW,EAAOX,GAAS,QAAU,UACrC,kBAAmBO,EAAE,iBAAiB,EAAE,WAEvC2B,EAAU,CACT,KAAAlC,EACA,aAAcG,GAAgB,GAC9B,QAAAM,EACA,MAAOH,EAAW,CAAEA,SAAU,EAAA,EAAS,CAAC,EACxC,OAAQ,CAAC,CAAE6B,MAAAA,CAAAA,MACRC,EAAM,CACL,SAAUpC,EACV,QAASqC,EAAcC,UACvB,SAAWzB,GAASC,EAAQD,CAAI,EAChC,OAAQA,EACR,WAAAR,EACA,WAAY8B,EAAMI,MAClB,SAAU,CAACC,EAAGD,KACZpB,EAAUoB,CAAK,EACRZ,EAAQX,CAAO,GAExB,SAAU,CAACwB,EAAGD,IAAU,CAChBE,EAAAA,SAASF,EAAMG,SAAU,CAAA,EAC/B5B,EAAQ,EAAK,CACf,EACA,aAAYP,EAAEN,CAAM,EAAE,SAErB0B,EAAQX,CAAO,CAAA,CAAC,CAAA,CAEnB,CAAA,CAEM,CAEhB"}