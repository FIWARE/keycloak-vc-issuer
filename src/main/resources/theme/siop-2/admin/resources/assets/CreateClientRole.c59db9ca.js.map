{"version":3,"file":"CreateClientRole.c59db9ca.js","sources":["../../src/clients/roles/CreateClientRole.tsx"],"sourcesContent":["import type RoleRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { AttributeForm } from \"../../components/key-value-form/AttributeForm\";\nimport { RoleForm } from \"../../components/role-form/RoleForm\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toClient } from \"../routes/Client\";\nimport { toClientRole } from \"../routes/ClientRole\";\nimport { NewRoleParams } from \"../routes/NewRole\";\n\nexport default function CreateClientRole() {\n  const { t } = useTranslation(\"roles\");\n  const form = useForm<AttributeForm>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const { clientId } = useParams<NewRoleParams>();\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const onSubmit: SubmitHandler<AttributeForm> = async (formValues) => {\n    const role: RoleRepresentation = {\n      ...formValues,\n      name: formValues.name?.trim(),\n      attributes: {},\n    };\n\n    try {\n      await adminClient.clients.createRole({\n        id: clientId,\n        ...role,\n      });\n\n      const createdRole = await adminClient.clients.findRole({\n        id: clientId!,\n        roleName: role.name!,\n      });\n\n      addAlert(t(\"roleCreated\"), AlertVariant.success);\n      navigate(\n        toClientRole({\n          realm,\n          clientId: clientId!,\n          id: createdRole.id!,\n          tab: \"details\",\n        })\n      );\n    } catch (error) {\n      addError(\"roles:roleCreateError\", error);\n    }\n  };\n\n  return (\n    <RoleForm\n      form={form}\n      onSubmit={onSubmit}\n      cancelLink={toClient({\n        realm,\n        clientId: clientId!,\n        tab: \"roles\",\n      })}\n      role=\"manage-clients\"\n      editMode={false}\n    />\n  );\n}\n"],"names":["CreateClientRole","t","useTranslation","form","useForm","mode","navigate","useNavigate","clientId","useParams","adminClient","useAdminClient","realm","useRealm","addAlert","addError","useAlerts","RoleForm","formValues","role","name","trim","attributes","clients","createRole","id","createdRole","findRole","roleName","AlertVariant","success","toClientRole","tab","error","toClient"],"mappings":"0eAeA,SAAwBA,GAAmB,CACnC,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,OAAO,EAC9BC,EAAOC,EAAuB,CAAEC,KAAM,UAAA,CAAY,EAClDC,EAAWC,IACX,CAAEC,SAAAA,GAAaC,EAA0B,EACzC,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,MAAAA,GAAUC,EAAU,EACtB,CAAEC,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EAkC1C,SACGC,EAAQ,CACP,KAAAd,EACA,SAnC2C,MAAOe,GAAe,CACnE,MAAMC,EAA2B,CAC/B,GAAGD,EACHE,KAAMF,EAAWE,MAAMC,KAAM,EAC7BC,WAAY,CAAC,CAAA,EAGX,GAAA,CACIZ,MAAAA,EAAYa,QAAQC,WAAW,CACnCC,GAAIjB,EACJ,GAAGW,CAAAA,CACJ,EAED,MAAMO,EAAc,MAAMhB,EAAYa,QAAQI,SAAS,CACrDF,GAAIjB,EACJoB,SAAUT,EAAKC,IAAAA,CAChB,EAEDN,EAASb,EAAE,aAAa,EAAG4B,EAAaC,OAAO,EAC/CxB,EACEyB,EAAa,CACXnB,MAAAA,EACAJ,SAAAA,EACAiB,GAAIC,EAAYD,GAChBO,IAAK,SACN,CAAA,CAAC,QAEGC,GACPlB,EAAS,wBAAyBkB,CAAK,CACzC,CAAA,EAOE,WAAYC,EAAS,CACnBtB,MAAAA,EACAJ,SAAAA,EACAwB,IAAK,OAAA,CACN,EACD,KAAK,iBACL,SAAU,EAAA,CACV,CAEN"}