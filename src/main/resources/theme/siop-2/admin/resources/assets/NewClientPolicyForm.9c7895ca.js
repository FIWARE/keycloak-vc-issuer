import{u as O,az as le,r as y,aZ as ne,j as i,K as ae,q as b,h as r,F as C,L as De,l as ve,aA as xe,ax as Te,g as Ne,ad as $,aX as k,cL as T,cK as N,P as we,aw as w,b3 as H,c_ as Ie,c$ as Le,G as _,cO as Ke,ao as Ae}from"./index.2ecf13ca.js";import{u as Ve,C as Fe}from"./index.esm.68aaf060.js";import{u as I}from"./ConfirmDialog.b43fd344.js";import{F as Ee}from"./FormAccess.7ed5d8eb.js";import{H as L}from"./HelpItem.49be9c4e.js";import{K as Re}from"./KeycloakTextArea.2947a089.js";import{K as Be}from"./KeycloakTextInput.97e36976.js";import{V as Me}from"./ViewHeader.67577dd4.js";import{u as $e}from"./useParams.921239aa.js";import{K as He}from"./KeycloakDataTable.5c9a6c7c.js";import{L as Oe}from"./ListEmptyState.94d606ed.js";import{M as Ge,a as je}from"./Modal.2c72168d.js";/* empty css                               */import{a as J,A as qe}from"./FormGroup.24d2e56a.js";import{F as Q,a as K}from"./FlexItem.2ee8dfc9.js";import{T as A,a as V}from"./Text.441b2f8e.js";import{P as U}from"./plus-circle-icon.f1969120.js";import{e as W,D as Y,a as ee,c as ie,d as te}from"./DataListItemRow.7402b99a.js";import{T as oe}from"./trash-icon.91474498.js";import"./copy-icon.06155c15.js";import"./GridItem.a22d8cac.js";import"./Td.ff2a9f66.js";import"./star-icon.648ddb2a.js";import"./check.51c67984.js";import"./grip-vertical-icon.6efe1939.js";import"./Checkbox.56efba4a.js";import"./EmptyStateBody.25bf6e38.js";import"./TableToolbar.f167c244.js";import"./EmptyStateSecondaryActions.3ed74a6a.js";import"./data-list.f7ff2ea7.js";const ze=t=>{const{t:n}=O("roles"),{adminClient:P}=le(),[u,p]=y.exports.useState([]),[a,x]=y.exports.useState();ne(()=>P.clientPolicies.listProfiles({includeGlobalProfiles:!0}),s=>{const D=s.globalProfiles?.map(S=>({...S,global:!0})),g=s.profiles?.map(S=>({...S,global:!1}));x([...D??[],...g??[]])},[]);const F=async()=>a?.filter(s=>!t.allProfiles.includes(s.name))??[];if(!a)return i(ae,{});const E=({name:s,global:D})=>r(C,{children:[s," ",D&&i(De,{color:"blue",children:n("realm-settings:global")})]});return i(Ge,{"data-testid":"addClientProfile",title:n("realm-settings:addClientProfile"),isOpen:t.open,onClose:t.toggleDialog,variant:je.large,actions:[i(b,{"data-testid":"add-client-profile-button",variant:"primary",isDisabled:!u.length,onClick:()=>{t.toggleDialog(),t.onConfirm(u)},children:n("common:add")},"add"),i(b,{variant:"link",onClick:()=>{t.toggleDialog()},children:n("common:cancel")},"cancel")],children:i(He,{loader:F,ariaLabelKey:"realm-settings:profilesList",searchPlaceholderKey:"realm-settings:searchProfile",canSelectAll:!0,onSelect:s=>{p([...s])},columns:[{name:"name",displayKey:"realm-settings:clientProfileName",cellRenderer:E},{name:"description",displayKey:"common:description"}],emptyState:i(Oe,{hasIcon:!0,message:n("noRoles"),instructions:n("noRolesInstructions"),primaryActionText:n("createRole")})})})},Xe={name:"",description:"",conditions:[],enabled:!0,profiles:[]};function vi(){const{t}=O("realm-settings"),{realm:n}=ve(),{addAlert:P,addError:u}=xe(),{adminClient:p}=le(),[a,x]=y.exports.useState(),[F,E]=y.exports.useState([]),[s,D]=y.exports.useState(),[g,S]=y.exports.useState(!1),[R,se]=y.exports.useState(),[G,re]=y.exports.useState(!1),[B,ce]=y.exports.useState(),{policyName:c}=$e(),h=Te(),d=Ve({mode:"onChange",defaultValues:Xe}),{handleSubmit:de}=d,M=d.getValues(),me=({save:e,onChange:o,value:l})=>{const{t:f}=O("realm-settings"),[m,Se]=I({titleKey:"realm-settings:disablePolicyConfirmTitle",messageKey:"realm-settings:disablePolicyConfirm",continueButtonLabel:"common:disable",onConfirm:()=>{o(!l),e()}});return a?r(C,{children:[i(Se,{}),i(Pe,{}),i(Me,{titleKey:g||c?c:"realm-settings:createPolicy",divider:!0,dropdownItems:g||c?[i(Ae,{value:"delete",onClick:()=>{ue()},"data-testid":"deleteClientPolicyDropdown",children:f("deleteClientPolicy")},"delete")]:void 0,isEnabled:l,onToggle:Z=>{Z?(o(Z),e()):m()}})]}):i(ae,{})};ne(async()=>{const[e,o]=await Promise.all([p.clientPolicies.listPolicies(),p.clientPolicies.listProfiles({includeGlobalProfiles:!0})]);return{policies:e,profiles:o}},({policies:e,profiles:o})=>{const l=e.policies?.find(m=>m.name===c),f=[...o.globalProfiles??[],...o.profiles??[]];x(e.policies??[]),l&&(pe(l),E(f),D(l),S(!0))},[]);const pe=e=>{d.reset(e)},j=(a||[]).filter(e=>e.name===c),q=j[0]?.conditions||[],v=j[0]?.profiles||[],fe=Ne().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],z=async()=>{const e=d.getValues(),o={...e,profiles:[],conditions:[]},l=()=>a?.some(m=>m.name===o.name)?a?.map(m=>m.name===o.name?o:m):e.name!==c?a?.filter(m=>m.name!==c).concat(e):a?.concat(e);try{await p.clientPolicies.updatePolicy({policies:l()}),P(t(c?"realm-settings:updateClientPolicySuccess":"realm-settings:createClientPolicySuccess"),k.success),h(N({realm:n,policyName:e.name})),S(!0)}catch(f){u("realm-settings:createClientPolicyError",f)}},[ue,Pe]=I({titleKey:t("deleteClientPolicyConfirmTitle"),messageKey:t("deleteClientPolicyConfirm",{policyName:c}),continueButtonLabel:t("delete"),continueButtonVariant:$.danger,onConfirm:async()=>{const e=a?.filter(o=>o.name!==c);try{await p.clientPolicies.updatePolicy({policies:e}),P(t("deleteClientPolicySuccess"),k.success),h(T({realm:n,tab:"policies"}))}catch(o){u(t("deleteClientPolicyError"),o)}}}),[Ce,ye]=I({titleKey:t("deleteClientPolicyConditionConfirmTitle"),messageKey:t("deleteClientPolicyConditionConfirm",{condition:R?.name}),continueButtonLabel:t("delete"),continueButtonVariant:$.danger,onConfirm:async()=>{if(R?.name){s?.conditions?.splice(R.idx,1);try{await p.clientPolicies.updatePolicy({policies:a}),P(t("deleteConditionSuccess"),k.success),h(N({realm:n,policyName:M.name}))}catch(e){u(t("deleteConditionError"),e)}}else{const e=a?.filter(o=>o.name!==c);try{await p.clientPolicies.updatePolicy({policies:e}),P(t("deleteClientSuccess"),k.success),h(T({realm:n,tab:"policies"}))}catch(o){u(t("deleteClientError"),o)}}}}),[ge,he]=I({titleKey:t("deleteClientPolicyProfileConfirmTitle"),messageKey:t("deleteClientPolicyProfileConfirm",{profileName:B?.name,policyName:c}),continueButtonLabel:t("delete"),continueButtonVariant:$.danger,onConfirm:async()=>{if(B?.name){s?.profiles?.splice(B.idx,1);try{await p.clientPolicies.updatePolicy({policies:a}),P(t("deleteClientPolicyProfileSuccess"),k.success),h(N({realm:n,policyName:M.name}))}catch(e){u(t("deleteClientPolicyProfileError"),e)}}else{const e=a?.filter(o=>o.name!==c);try{await p.clientPolicies.updatePolicy({policies:e}),P(t("deleteClientSuccess"),k.success),h(T({realm:n,tab:"policies"}))}catch(o){u(t("deleteClientError"),o)}}}}),be=()=>{s?.name!==void 0&&d.setValue("name",s.name),s?.description!==void 0&&d.setValue("description",s.description)},X=()=>{re(!G)},ke=async e=>{const o={...s,profiles:v.concat(e),conditions:s?.conditions},l=a?.findIndex(m=>o.name===m.name);if(l===void 0||l===-1)return;const f=[...(a||[]).slice(0,l),o,...(a||[]).slice(l+1)];try{await p.clientPolicies.updatePolicy({policies:f}),x(f),h(N({realm:n,policyName:M.name})),P(t("realm-settings:addClientProfileSuccess"),k.success)}catch(m){u("realm-settings:addClientProfileError",m)}};return r(C,{children:[i(ye,{}),i(he,{}),i(ze,{onConfirm:e=>{ke(e.map(o=>o.name))},allProfiles:v,open:G,toggleDialog:X}),i(Fe,{name:"enabled",defaultValue:!0,control:d.control,render:({field:e})=>i(me,{value:e.value,onChange:e.onChange,realmName:n,save:z})}),i(we,{variant:"light",children:r(Ee,{onSubmit:de(z),isHorizontal:!0,role:"view-realm",className:"pf-u-mt-lg",children:[i(J,{label:t("common:name"),fieldId:"kc-client-profile-name",isRequired:!0,helperTextInvalid:d.formState.errors.name?.message,validated:d.formState.errors.name?w.error:w.default,children:i(Be,{id:"kc-client-profile-name","data-testid":"client-policy-name",validated:d.formState.errors.name?w.error:w.default,...d.register("name",{required:{value:!0,message:t("common:required")},validate:e=>a?.some(o=>o.name===e)?t("createClientProfileNameHelperText").toString():!0})})}),i(J,{label:t("common:description"),fieldId:"kc-description",children:i(Re,{"aria-label":t("description"),id:"kc-client-policy-description","data-testid":"client-policy-description",...d.register("description")})}),r(qe,{children:[i(b,{variant:"primary",type:"submit","data-testid":"saveCreatePolicy",isDisabled:!d.formState.isValid,children:t("common:save")}),i(b,{id:"cancelCreatePolicy",variant:"link",onClick:()=>g||c?be():h(T({realm:n,tab:"policies"})),"data-testid":"cancelCreatePolicy",children:t(g?"common:reload":"common:cancel")})]}),(g||d.formState.isSubmitted)&&r(C,{children:[r(Q,{children:[i(K,{children:r(A,{className:"kc-conditions",component:V.h1,children:[t("conditions"),i(L,{helpText:"realm-settings-help:conditions",fieldLabelId:"realm-settings:conditions"})]})}),i(K,{align:{default:"alignRight"},children:i(b,{id:"addCondition",component:e=>i(H,{...e,to:Ie({realm:n,policyName:c})}),variant:"link",className:"kc-addCondition","data-testid":"addCondition",icon:i(U,{}),children:t("realm-settings:addCondition")})})]}),q.length>0?i(W,{"aria-label":t("conditions"),isCompact:!0,children:q.map((e,o)=>i(Y,{"aria-labelledby":"conditions-list-item",id:e.condition,"data-testid":"conditions-list-item",children:i(ee,{"data-testid":"conditions-list-row",children:i(ie,{dataListCells:[r(te,{"data-testid":"condition-type",children:[Object.keys(e.configuration).length!==0?i(H,{"data-testid":`${e.condition}-condition-link`,to:Le({realm:n,conditionName:e.condition,policyName:c}),className:"kc-condition-link",children:e.condition},e.condition):e.condition,fe?.map(l=>l.id===e.condition&&r(C,{children:[i(L,{helpText:l.helpText,fieldLabelId:e.condition}),i(b,{variant:"link",isInline:!0,icon:i(oe,{className:"kc-conditionType-trash-icon","data-testid":`delete-${e.condition}-condition`,onClick:()=>{Ce(),se({idx:o,name:l.id})}})})]}))]},`name-${o}`)]})})},`list-item-${o}`))}):r(C,{children:[i(_,{}),i(A,{className:"kc-emptyConditions",component:V.h6,children:t("realm-settings:emptyConditions")})]})]}),(g||d.formState.isSubmitted)&&r(C,{children:[r(Q,{children:[i(K,{children:r(A,{className:"kc-client-profiles",component:V.h1,children:[t("clientProfiles"),i(L,{helpText:"realm-settings-help:clientProfiles",fieldLabelId:"realm-settings:clientProfiles"})]})}),i(K,{align:{default:"alignRight"},children:i(b,{id:"addClientProfile",variant:"link",className:"kc-addClientProfile","data-testid":"addClientProfile",icon:i(U,{}),onClick:X,children:t("realm-settings:addClientProfile")})})]}),v.length>0?i(W,{"aria-label":t("profiles"),isCompact:!0,children:v.map((e,o)=>i(Y,{"aria-labelledby":`${e}-profile-list-item`,id:`${e}-profile-list-item`,"data-testid":"profile-list-item",children:i(ee,{"data-testid":"profile-list-row",children:i(ie,{dataListCells:[r(te,{"data-testid":"profile-name",children:[e&&i(H,{"data-testid":"profile-name-link",to:Ke({realm:n,profileName:e}),className:"kc-profile-link",children:e},e),v.filter(l=>l===e).map(l=>r(C,{children:[i(L,{helpText:F.find(f=>l===f.name)?.description,fieldLabelId:e}),i(b,{variant:"link",isInline:!0,icon:i(oe,{className:"kc-conditionType-trash-icon","data-testid":"deleteClientProfileDropdown",onClick:()=>{ge(),ce({idx:o,name:l})}})})]}))]},"name")]})})},e))}):r(C,{children:[i(_,{}),i(A,{className:"kc-emptyClientProfiles",component:V.h6,children:t("realm-settings:emptyProfiles")})]})]})]})})]})}export{vi as default};
//# sourceMappingURL=NewClientPolicyForm.9c7895ca.js.map
