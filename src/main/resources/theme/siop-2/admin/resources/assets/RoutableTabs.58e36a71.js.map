{"version":3,"file":"RoutableTabs.58e36a71.js","sources":["../../src/components/routable-tabs/RoutableTabs.tsx"],"sourcesContent":["import {\n  TabProps,\n  Tabs,\n  TabsComponent,\n  TabsProps,\n} from \"@patternfly/react-core\";\nimport {\n  Children,\n  isValidElement,\n  JSXElementConstructor,\n  ReactElement,\n} from \"react\";\nimport { Path, useHref, useLocation } from \"react-router-dom\";\n\n// TODO: Remove the custom 'children' props and type once the following issue has been resolved:\n// https://github.com/patternfly/patternfly-react/issues/6766\ntype ChildElement = ReactElement<TabProps, JSXElementConstructor<TabProps>>;\ntype Child = ChildElement | boolean | null | undefined;\n\n// TODO: Figure out why we need to omit 'ref' from the props.\ntype RoutableTabsProps = {\n  children: Child | Child[];\n  defaultLocation?: Partial<Path>;\n} & Omit<\n  TabsProps,\n  \"ref\" | \"activeKey\" | \"defaultActiveKey\" | \"component\" | \"children\"\n>;\n\nexport const RoutableTabs = ({\n  children,\n  defaultLocation,\n  ...otherProps\n}: RoutableTabsProps) => {\n  const { pathname } = useLocation();\n\n  // Extract event keys from children.\n  const eventKeys = Children.toArray(children)\n    .filter((child): child is ChildElement => isValidElement(child))\n    .map((child) => child.props.eventKey.toString());\n\n  // Determine if there is an exact match.\n  const exactMatch = eventKeys.find((eventKey) => eventKey === pathname);\n\n  // Determine which event keys at least partially match the current path, then sort them so the nearest match ends up on top.\n  const nearestMatch = eventKeys\n    .filter((eventKey) => pathname.includes(eventKey))\n    .sort((a, b) => a.length - b.length)\n    .pop();\n\n  return (\n    <Tabs\n      activeKey={\n        exactMatch ?? nearestMatch ?? defaultLocation?.pathname ?? pathname\n      }\n      component={TabsComponent.nav}\n      inset={{\n        default: \"insetNone\",\n        xl: \"insetLg\",\n        \"2xl\": \"inset2xl\",\n      }}\n      {...otherProps}\n    >\n      {children}\n    </Tabs>\n  );\n};\n\nexport const useRoutableTab = (to: Partial<Path>) => ({\n  eventKey: to.pathname ?? \"\",\n  href: useHref(to),\n});\n"],"names":["RoutableTabs","children","defaultLocation","otherProps","pathname","useLocation","eventKeys","Children","toArray","filter","child","isValidElement","map","props","eventKey","toString","exactMatch","find","nearestMatch","includes","sort","a","b","length","pop","Tabs","TabsComponent","nav","default","xl","useRoutableTab","to","href","useHref"],"mappings":"2GA4BO,MAAMA,EAAe,CAAC,CAC3BC,SAAAA,EACAC,gBAAAA,KACGC,CACc,IAAM,CACjB,KAAA,CAAEC,SAAAA,GAAaC,EAAa,EAG5BC,EAAYC,EAAAA,QAAAA,SAASC,QAAQP,CAAQ,EACxCQ,OAAQC,GAAiCC,EAAAA,QAAAA,eAAeD,CAAK,CAAC,EAC9DE,IAAKF,GAAUA,EAAMG,MAAMC,SAASC,UAAU,EAG3CC,EAAaV,EAAUW,KAAMH,GAAaA,IAAaV,CAAQ,EAG/Dc,EAAeZ,EAClBG,UAAqBL,EAASe,SAASL,CAAQ,CAAC,EAChDM,KAAK,CAACC,EAAGC,IAAMD,EAAEE,OAASD,EAAEC,MAAM,EAClCC,MAEH,SACGC,EAAI,CACH,UACET,GAAcE,GAAgBhB,GAAiBE,UAAYA,EAE7D,UAAWsB,EAAcC,IACzB,MAAO,CACLC,QAAS,YACTC,GAAI,UACJ,MAAO,UACT,EAAE,GACE1B,EAAU,SAAAF,CAAA,CAGT,CAEX,EAEa6B,EAAkBC,IAAuB,CACpDjB,SAAUiB,EAAG3B,UAAY,GACzB4B,KAAMC,EAAQF,CAAE,CAClB"}