{"version":3,"file":"KeycloakTextInput.97e36976.js","sources":["../../src/components/keycloak-text-input/KeycloakTextInput.tsx"],"sourcesContent":["import { TextInput, TextInputProps } from \"@patternfly/react-core\";\nimport { ComponentProps, forwardRef, HTMLProps } from \"react\";\n\n// PatternFly changes the signature of the 'onChange' handler for input elements.\n// This causes issues with React Hook Form as it expects the default signature for an input element.\n// So we have to create this wrapper component that takes care of converting these signatures for us.\n\nexport type KeycloakTextInputProps = Omit<\n  ComponentProps<typeof TextInput>,\n  \"onChange\"\n> &\n  Pick<HTMLProps<HTMLInputElement>, \"onChange\">;\n\nexport const KeycloakTextInput = forwardRef<\n  HTMLInputElement,\n  KeycloakTextInputProps\n>(({ onChange, ...props }, ref) => {\n  const onChangeForward: TextInputProps[\"onChange\"] = (_, event) =>\n    onChange?.(event);\n\n  return <TextInput {...props} ref={ref} onChange={onChangeForward} />;\n});\n\n// We need to fake the displayName to match what PatternFly expects.\n// This is because PatternFly uses it to filter children in certain aspects.\n// This is a stupid approach, but it's not like we can change that.\nKeycloakTextInput.displayName = \"TextInput\";\n"],"names":["KeycloakTextInput","forwardRef","onChange","props","ref","TextInput","_","event","onChangeForward","displayName"],"mappings":"uDAaaA,MAAAA,EAAoBC,qBAG/B,CAAC,CAAEC,SAAAA,KAAaC,CAAM,EAAGC,MAIjBC,EAAS,CAAA,GAAKF,EAAO,IAAAC,EAAU,SAHa,CAACE,EAAGC,IACtDL,IAAWK,CAAK,CAE+BC,CAAmB,CACrE,EAKDR,EAAkBS,YAAc"}