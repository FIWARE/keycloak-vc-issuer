{"version":3,"file":"KeycloakTextArea.2947a089.js","sources":["../../src/components/keycloak-text-area/KeycloakTextArea.tsx"],"sourcesContent":["import { TextArea, TextAreaProps } from \"@patternfly/react-core\";\nimport { ComponentProps, forwardRef, HTMLProps } from \"react\";\n\n// PatternFly changes the signature of the 'onChange' handler for textarea elements.\n// This causes issues with React Hook Form as it expects the default signature for a textarea element.\n// So we have to create this wrapper component that takes care of converting these signatures for us.\n\nexport type KeycloakTextAreaProps = Omit<\n  ComponentProps<typeof TextArea>,\n  \"onChange\"\n> &\n  Pick<HTMLProps<HTMLTextAreaElement>, \"onChange\">;\n\nexport const KeycloakTextArea = forwardRef<\n  HTMLTextAreaElement,\n  KeycloakTextAreaProps\n>(({ onChange, ...props }, ref) => {\n  const onChangeForward: TextAreaProps[\"onChange\"] = (_, event) =>\n    onChange?.(event);\n\n  return <TextArea {...props} ref={ref} onChange={onChangeForward} />;\n});\n\n// We need to fake the displayName to match what PatternFly expects.\n// This is because PatternFly uses it to filter children in certain aspects.\n// This is a stupid approach, but it's not like we can change that.\nKeycloakTextArea.displayName = \"TextArea\";\n"],"names":["KeycloakTextArea","forwardRef","onChange","props","ref","TextArea","_","event","onChangeForward","displayName"],"mappings":"uDAaaA,MAAAA,EAAmBC,qBAG9B,CAAC,CAAEC,SAAAA,KAAaC,CAAM,EAAGC,MAIjBC,EAAQ,CAAA,GAAKF,EAAO,IAAAC,EAAU,SAHa,CAACE,EAAGC,IACrDL,IAAWK,CAAK,CAE8BC,CAAmB,CACpE,EAKDR,EAAiBS,YAAc"}