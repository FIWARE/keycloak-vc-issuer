{"version":3,"file":"EditClientScope.1eb69b67.js","sources":["../../src/client-scopes/EditClientScope.tsx"],"sourcesContent":["import ClientScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientScopeRepresentation\";\nimport type ProtocolMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/protocolMapperRepresentation\";\nimport type { RoleMappingPayload } from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport type { ProtocolMapperTypeRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/serverInfoRepesentation\";\nimport {\n  AlertVariant,\n  ButtonVariant,\n  DropdownItem,\n  PageSection,\n  Tab,\n  TabTitleText,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAlerts } from \"../components/alert/Alerts\";\n\nimport {\n  AllClientScopes,\n  changeScope,\n  ClientScope,\n  ClientScopeDefaultOptionalType,\n} from \"../components/client-scope/ClientScopeTypes\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { KeycloakSpinner } from \"../components/keycloak-spinner/KeycloakSpinner\";\nimport { RoleMapping, Row } from \"../components/role-mapping/RoleMapping\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../components/routable-tabs/RoutableTabs\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../context/auth/AdminClient\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { convertFormValuesToObject } from \"../util\";\nimport { useParams } from \"../utils/useParams\";\nimport { MapperList } from \"./details/MapperList\";\nimport { ScopeForm } from \"./details/ScopeForm\";\nimport {\n  ClientScopeParams,\n  ClientScopeTab,\n  toClientScope,\n} from \"./routes/ClientScope\";\nimport { toMapper } from \"./routes/Mapper\";\n\nexport default function EditClientScope() {\n  const { t } = useTranslation(\"client-scopes\");\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { adminClient } = useAdminClient();\n  const { id } = useParams<ClientScopeParams>();\n  const { addAlert, addError } = useAlerts();\n  const [clientScope, setClientScope] =\n    useState<ClientScopeDefaultOptionalType>();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  useFetch(\n    async () => {\n      const clientScope = await adminClient.clientScopes.findOne({ id });\n\n      if (!clientScope) {\n        throw new Error(t(\"common:notFound\"));\n      }\n\n      return {\n        ...clientScope,\n        type: await determineScopeType(clientScope),\n      };\n    },\n    (clientScope) => {\n      setClientScope(clientScope);\n    },\n    [key, id]\n  );\n\n  async function determineScopeType(clientScope: ClientScopeRepresentation) {\n    const defaultScopes =\n      await adminClient.clientScopes.listDefaultClientScopes();\n    const hasDefaultScope = defaultScopes.find(\n      (defaultScope) => defaultScope.name === clientScope.name\n    );\n\n    if (hasDefaultScope) {\n      return ClientScope.default;\n    }\n\n    const optionalScopes =\n      await adminClient.clientScopes.listDefaultOptionalClientScopes();\n    const hasOptionalScope = optionalScopes.find(\n      (optionalScope) => optionalScope.name === clientScope.name\n    );\n\n    return hasOptionalScope ? ClientScope.optional : AllClientScopes.none;\n  }\n\n  const useTab = (tab: ClientScopeTab) =>\n    useRoutableTab(\n      toClientScope({\n        realm,\n        id,\n        tab,\n      })\n    );\n\n  const settingsTab = useTab(\"settings\");\n  const mappersTab = useTab(\"mappers\");\n  const scopeTab = useTab(\"scope\");\n\n  const onSubmit = async (formData: ClientScopeDefaultOptionalType) => {\n    const clientScope = convertFormValuesToObject({\n      ...formData,\n      name: formData.name?.trim().replace(/ /g, \"_\"),\n    });\n\n    try {\n      await adminClient.clientScopes.update({ id }, clientScope);\n      await changeScope(adminClient, { ...clientScope, id }, clientScope.type);\n\n      addAlert(t(\"updateSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"client-scopes:updateError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: t(\"deleteClientScope\", {\n      count: 1,\n      name: clientScope?.name,\n    }),\n    messageKey: \"client-scopes:deleteConfirm\",\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.clientScopes.del({ id });\n        addAlert(t(\"deletedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"client-scopes:deleteError\", error);\n      }\n    },\n  });\n\n  const assignRoles = async (rows: Row[]) => {\n    try {\n      const realmRoles = rows\n        .filter((row) => row.client === undefined)\n        .map((row) => row.role as RoleMappingPayload)\n        .flat();\n      await adminClient.clientScopes.addRealmScopeMappings(\n        {\n          id,\n        },\n        realmRoles\n      );\n      await Promise.all(\n        rows\n          .filter((row) => row.client !== undefined)\n          .map((row) =>\n            adminClient.clientScopes.addClientScopeMappings(\n              {\n                id,\n                client: row.client!.id!,\n              },\n              [row.role as RoleMappingPayload]\n            )\n          )\n      );\n      addAlert(t(\"roleMappingUpdatedSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"client-scopes:roleMappingUpdatedError\", error);\n    }\n  };\n\n  const addMappers = async (\n    mappers: ProtocolMapperTypeRepresentation | ProtocolMapperRepresentation[]\n  ): Promise<void> => {\n    if (!Array.isArray(mappers)) {\n      const mapper = mappers as ProtocolMapperTypeRepresentation;\n      navigate(\n        toMapper({\n          realm,\n          id: clientScope!.id!,\n          mapperId: mapper.id!,\n        })\n      );\n    } else {\n      try {\n        await adminClient.clientScopes.addMultipleProtocolMappers(\n          { id: clientScope!.id! },\n          mappers as ProtocolMapperRepresentation[]\n        );\n        refresh();\n        addAlert(t(\"common:mappingCreatedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"common:mappingCreatedError\", error);\n      }\n    }\n  };\n\n  const onDelete = async (mapper: ProtocolMapperRepresentation) => {\n    try {\n      await adminClient.clientScopes.delProtocolMapper({\n        id: clientScope!.id!,\n        mapperId: mapper.id!,\n      });\n      addAlert(t(\"common:mappingDeletedSuccess\"), AlertVariant.success);\n      refresh();\n    } catch (error) {\n      addError(\"common:mappingDeletedError\", error);\n    }\n    return true;\n  };\n\n  if (!clientScope) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={clientScope.name!}\n        dropdownItems={[\n          <DropdownItem key=\"delete\" onClick={toggleDeleteDialog}>\n            {t(\"common:delete\")}\n          </DropdownItem>,\n        ]}\n        badges={[{ text: clientScope.protocol }]}\n        divider={false}\n      />\n\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <RoutableTabs isBox>\n          <Tab\n            id=\"settings\"\n            data-testid=\"settings\"\n            title={<TabTitleText>{t(\"common:settings\")}</TabTitleText>}\n            {...settingsTab}\n          >\n            <PageSection variant=\"light\">\n              <ScopeForm save={onSubmit} clientScope={clientScope} />\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"mappers\"\n            data-testid=\"mappers\"\n            title={<TabTitleText>{t(\"common:mappers\")}</TabTitleText>}\n            {...mappersTab}\n          >\n            <MapperList\n              model={clientScope}\n              onAdd={addMappers}\n              onDelete={onDelete}\n              detailLink={(id) =>\n                toMapper({ realm, id: clientScope.id!, mapperId: id! })\n              }\n            />\n          </Tab>\n          <Tab\n            id=\"scope\"\n            data-testid=\"scopeTab\"\n            title={<TabTitleText>{t(\"scope\")}</TabTitleText>}\n            {...scopeTab}\n          >\n            <RoleMapping\n              id={clientScope.id!}\n              name={clientScope.name!}\n              type=\"clientScopes\"\n              save={assignRoles}\n            />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["EditClientScope","t","useTranslation","navigate","useNavigate","realm","useRealm","adminClient","useAdminClient","id","useParams","addAlert","addError","useAlerts","clientScope","setClientScope","useState","key","setKey","refresh","useFetch","clientScopes","findOne","Error","type","determineScopeType","listDefaultClientScopes","find","defaultScope","name","ClientScope","default","listDefaultOptionalClientScopes","optionalScope","optional","AllClientScopes","none","useTab","tab","useRoutableTab","toClientScope","settingsTab","mappersTab","scopeTab","onSubmit","formData","convertFormValuesToObject","trim","replace","update","changeScope","AlertVariant","success","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","titleKey","count","messageKey","continueButtonLabel","continueButtonVariant","ButtonVariant","danger","onConfirm","del","assignRoles","rows","realmRoles","filter","row","client","undefined","map","role","flat","addRealmScopeMappings","Promise","all","addClientScopeMappings","addMappers","mappers","Array","isArray","addMultipleProtocolMappers","mapper","toMapper","mapperId","onDelete","delProtocolMapper","_Fragment","_jsx","ViewHeader","DropdownItem","text","protocol","PageSection","RoutableTabs","Tab","TabTitleText","ScopeForm","MapperList","RoleMapping","KeycloakSpinner"],"mappings":"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"}