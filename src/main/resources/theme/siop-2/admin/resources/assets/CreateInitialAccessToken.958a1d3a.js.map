{"version":3,"file":"CreateInitialAccessToken.958a1d3a.js","sources":["../../src/clients/initial-access/AccessTokenDialog.tsx","../../src/clients/initial-access/CreateInitialAccessToken.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport {\n  Alert,\n  AlertVariant,\n  ClipboardCopy,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\n\ntype AccessTokenDialogProps = {\n  token: string;\n  toggleDialog: () => void;\n};\n\nexport const AccessTokenDialog = ({\n  token,\n  toggleDialog,\n}: AccessTokenDialogProps) => {\n  const { t } = useTranslation(\"clients\");\n  return (\n    <Modal\n      title={t(\"initialAccessTokenDetails\")}\n      isOpen={true}\n      onClose={toggleDialog}\n      variant={ModalVariant.medium}\n    >\n      <Alert\n        title={t(\"copyInitialAccessToken\")}\n        isInline\n        variant={AlertVariant.warning}\n      />\n      <Form className=\"pf-u-mt-md\">\n        <FormGroup label={t(\"initialAccessToken\")} fieldId=\"initialAccessToken\">\n          <ClipboardCopy id=\"initialAccessToken\" isReadOnly>\n            {token}\n          </ClipboardCopy>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  FormGroup,\n  NumberInput,\n  PageSection,\n} from \"@patternfly/react-core\";\n\nimport type ClientInitialAccessPresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientInitialAccessPresentation\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { TimeSelector } from \"../../components/time-selector/TimeSelector\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { AccessTokenDialog } from \"./AccessTokenDialog\";\nimport { toClients } from \"../routes/Clients\";\n\nexport default function CreateInitialAccessToken() {\n  const { t } = useTranslation(\"clients\");\n  const {\n    handleSubmit,\n    control,\n    formState: { isValid, errors },\n  } = useForm({ mode: \"onChange\" });\n\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const navigate = useNavigate();\n  const [token, setToken] = useState(\"\");\n\n  const save = async (clientToken: ClientInitialAccessPresentation) => {\n    try {\n      const access = await adminClient.realms.createClientsInitialAccess(\n        { realm },\n        clientToken\n      );\n      setToken(access.token!);\n    } catch (error) {\n      addError(\"clients:tokenSaveError\", error);\n    }\n  };\n\n  return (\n    <>\n      {token && (\n        <AccessTokenDialog\n          token={token}\n          toggleDialog={() => {\n            setToken(\"\");\n            addAlert(t(\"tokenSaveSuccess\"), AlertVariant.success);\n            navigate(toClients({ realm, tab: \"initial-access-token\" }));\n          }}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"clients:createToken\"\n        subKey=\"clients-help:createToken\"\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          role=\"create-client\"\n          onSubmit={handleSubmit(save)}\n        >\n          <FormGroup\n            label={t(\"expiration\")}\n            fieldId=\"expiration\"\n            labelIcon={\n              <HelpItem\n                helpText=\"clients-help:expiration\"\n                fieldLabelId=\"clients:expiration\"\n              />\n            }\n            helperTextInvalid={t(\"expirationValueNotValid\")}\n            validated={errors.expiration ? \"error\" : \"default\"}\n          >\n            <Controller\n              name=\"expiration\"\n              defaultValue={86400}\n              control={control}\n              rules={{ min: 1 }}\n              render={({ field }) => (\n                <TimeSelector\n                  data-testid=\"expiration\"\n                  value={field.value}\n                  onChange={field.onChange}\n                  min={1}\n                  validated={errors.expiration ? \"error\" : \"default\"}\n                />\n              )}\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"count\")}\n            fieldId=\"count\"\n            labelIcon={\n              <HelpItem\n                helpText=\"clients-help:count\"\n                fieldLabelId=\"clients:count\"\n              />\n            }\n          >\n            <Controller\n              name=\"count\"\n              defaultValue={1}\n              control={control}\n              render={({ field }) => (\n                <NumberInput\n                  data-testid=\"count\"\n                  inputName=\"count\"\n                  inputAriaLabel={t(\"count\")}\n                  min={1}\n                  value={field.value}\n                  onPlus={() => field.onChange(field.value + 1)}\n                  onMinus={() => field.onChange(field.value - 1)}\n                  onChange={(event) => {\n                    const value = Number(\n                      (event.target as HTMLInputElement).value\n                    );\n                    field.onChange(value < 1 ? 1 : value);\n                  }}\n                />\n              )}\n            />\n          </FormGroup>\n          <ActionGroup>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"save\"\n              isDisabled={!isValid}\n            >\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              data-testid=\"cancel\"\n              variant=\"link\"\n              component={(props) => (\n                <Link\n                  {...props}\n                  to={toClients({ realm, tab: \"initial-access-token\" })}\n                />\n              )}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["AccessTokenDialog","token","toggleDialog","t","useTranslation","Modal","ModalVariant","medium","_jsx","Alert","AlertVariant","warning","Form","FormGroup","ClipboardCopy","CreateInitialAccessToken","handleSubmit","control","formState","isValid","errors","useForm","mode","adminClient","useAdminClient","realm","useRealm","addAlert","addError","useAlerts","navigate","useNavigate","setToken","useState","_Fragment","success","toClients","tab","ViewHeader","PageSection","FormAccess","clientToken","access","realms","createClientsInitialAccess","error","HelpItem","expiration","Controller","min","field","TimeSelector","value","onChange","NumberInput","event","Number","target","_jsxs","ActionGroup","Button","props","Link"],"mappings":"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"}