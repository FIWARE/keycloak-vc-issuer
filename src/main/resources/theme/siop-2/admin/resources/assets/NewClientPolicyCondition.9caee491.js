import{u as q,aA as K,ax as L,l as R,r as c,by as X,g as Z,az as _,aZ as J,j as n,P as M,h as v,q as x,cK as b,aX as Q}from"./index.2ecf13ca.js";import{u as U,C as W,F as Y}from"./index.esm.68aaf060.js";import{D as tt}from"./DynamicComponents.16b222ec.js";import{F as it}from"./FormAccess.7ed5d8eb.js";import{H as ot}from"./HelpItem.49be9c4e.js";import{F as et}from"./FormPanel.3fe898ae.js";import{c as A}from"./camelCase.4ebb1015.js";import{a as nt,A as rt}from"./FormGroup.24d2e56a.js";import{S as st,b as at,a as ct}from"./Select.5d6f6214.js";import"./ClientSelect.95a4ec0e.js";import"./FileUpload.005327fa.js";import"./CodeEditor.0b7c4c70.js";import"./copy-icon.06155c15.js";import"./EmptyStateBody.25bf6e38.js";import"./EmptyStateSecondaryActions.3ed74a6a.js";import"./GroupPickerDialog.38947607.js";import"./ListEmptyState.94d606ed.js";import"./TableToolbar.f167c244.js";import"./plus-circle-icon.f1969120.js";import"./DataListItemRow.7402b99a.js";import"./data-list.f7ff2ea7.js";import"./grip-vertical-icon.6efe1939.js";import"./Modal.2c72168d.js";import"./ActionListItem.c90af00f.js";import"./FlexItem.2ee8dfc9.js";import"./minus-circle-icon.e9e185f2.js";import"./MultiLineInput.7867bd1a.js";import"./PasswordInput.4caf2dff.js";import"./KeycloakTextInput.97e36976.js";import"./useToggle.97c716af.js";import"./AddRoleMappingModal.c7175fba.js";import"./KeycloakDataTable.5c9a6c7c.js";import"./Td.ff2a9f66.js";import"./star-icon.648ddb2a.js";import"./check.51c67984.js";import"./Checkbox.56efba4a.js";import"./useLocaleSort.377bcdf5.js";import"./resource.09062762.js";import"./joinPath.69b856b1.js";import"./filter-icon.f568e30b.js";import"./ConfirmDialog.b43fd344.js";import"./KeycloakTextArea.2947a089.js";import"./GridItem.a22d8cac.js";import"./CardHeader.2467be54.js";import"./Card.3271e4cd.js";import"./CardTitle.ab8f9378.js";import"./CardBody.8e0a3a4b.js";import"./capitalize.ba62b65f.js";function ei(){const{t:o}=q("realm-settings"),{addAlert:F,addError:I}=K(),f=L(),{realm:C}=R(),[D,g]=c.exports.useState(!1),[N,y]=c.exports.useState([]),[k,w]=c.exports.useState([]),[V,j]=c.exports.useState(),[l,B]=c.exports.useState(""),[h,P]=c.exports.useState([]),{policyName:d,conditionName:i}=X(),E=Z(),m=U(),S=E.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],{adminClient:T}=_(),H=s=>{m.reset({config:s.configuration||{}})};J(()=>T.clientPolicies.listPolicies(),s=>{if(y(s.policies??[]),i){const r=s.policies?.find(t=>t.name===d)?.conditions?.find(t=>t.condition===i),p=S?.find(t=>t.id===i);j(r),P(p?.properties),H(r)}},[]);const O=async s=>{const e=s.config,r=()=>h.reduce((t,a)=>(t[a.name]=e[a.name],t),{}),p=N.map(t=>{if(t.name!==d)return t;let a=t.conditions??[];if(i){const z={condition:V?.condition,configuration:r()},u=a.findIndex($=>i===$.condition);if(u===-1)return;const G=[...a.slice(0,u),z,...a.slice(u+1)];return{...t,conditions:G}}return a=a.concat({condition:k[0].condition,configuration:r()}),{...t,conditions:a}});try{await T.clientPolicies.updatePolicy({policies:p}),y(p),f(b({realm:C,policyName:d})),F(o(i?"realm-settings:updateClientConditionSuccess":"realm-settings:createClientConditionSuccess"),Q.success)}catch(t){I("realm-settings:createClientConditionError",t)}};return n(M,{variant:"light",children:n(et,{className:"kc-login-screen",title:o(i?"editCondition":"addCondition"),children:v(it,{isHorizontal:!0,role:"manage-realm",className:"pf-u-mt-lg",onSubmit:m.handleSubmit(O),children:[n(nt,{label:o("conditionType"),fieldId:"conditionType",labelIcon:n(ot,{helpText:l?`realm-settings-help:${A(l.replace(/-/g," "))}`:"realm-settings-help:conditions",fieldLabelId:"realm-settings:conditionType"}),children:n(W,{name:"conditions",defaultValue:"any-client",control:m.control,render:({field:s})=>n(st,{placeholderText:o("selectACondition"),className:"kc-conditionType-select","data-testid":"conditionType-select",toggleId:"provider",isDisabled:!!i,onToggle:e=>g(e),onSelect:(e,r)=>{s.onChange(r),P(r.properties),B(r.id),w([{condition:r.id}]),g(!1)},selections:i||l,variant:at.single,"aria-label":o("conditionType"),isOpen:D,children:S?.map(e=>n(ct,{selected:e.id===s.value,description:o(`realm-settings-help:${A(e.id.replace(/-/g," "))}`),value:e,children:e.id},e.id))})})}),n(Y,{...m,children:n(tt,{properties:h})}),v(rt,{children:[n(x,{variant:"primary",type:"submit","data-testid":"addCondition-saveBtn",isDisabled:l===""&&!i,children:o(i?"common:save":"common:add")}),n(x,{variant:"link","data-testid":"addCondition-cancelBtn",onClick:()=>f(b({realm:C,policyName:d})),children:o("common:cancel")})]})]})})})}export{ei as default};
//# sourceMappingURL=NewClientPolicyCondition.9caee491.js.map
