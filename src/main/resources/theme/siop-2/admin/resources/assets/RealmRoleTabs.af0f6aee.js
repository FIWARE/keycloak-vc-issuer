import{ax as q,l as z,u as G,az as X,R as fe,j as e,P as J,h as g,q as f,bE as k,bD as he,V as ye,r as T,g as ge,aA as ve,aZ as Ce,bK as j,cf as Ae,ad as $,aX as D,ao as I,K as we,F as ke,bM as H,cg as _,ch as Te,ci as De,cj as Ie,c4 as Ne,ck as Ke}from"./index.7cbfb18a.js";import{u as Fe,b as Q}from"./index.esm.1e7ace95.js";import{u as Z}from"./ConfirmDialog.4dc691c5.js";import{A as Se}from"./AttributeForm.fbcfddd0.js";import{P as Ee}from"./PermissionTab.418d47cd.js";import{R as xe}from"./RoleForm.f7d64a1e.js";import{A as Be,R as Pe}from"./AddRoleMappingModal.c8e6830c.js";import{R as Me,u as Ve}from"./RoutableTabs.58e36a71.js";import{V as Le}from"./ViewHeader.083cd951.js";import{u as Y}from"./useParams.3f76335e.js";import{L as Oe}from"./ListEmptyState.fef0510e.js";import{K as Ue}from"./KeycloakDataTable.ae870e97.js";import{P as We}from"./HelpItem.719382e8.js";import{Q as je}from"./question-circle-icon.7590ca7d.js";import{T as h,a as y}from"./Tabs.fae3d04f.js";import"./Modal.11970fe7.js";import"./FormAccess.3a7ea209.js";import"./copy-icon.dbf95270.js";import"./FormGroup.60c77f60.js";import"./GridItem.63e5e367.js";import"./KeyValueInput.21e1d12c.js";import"./KeycloakTextInput.9afb01cd.js";import"./FlexItem.ae9c1d3c.js";import"./minus-circle-icon.c093f419.js";import"./ActionListItem.65cb5d9a.js";import"./plus-circle-icon.aa8a939a.js";import"./useLocaleSort.b8a659bb.js";import"./Trans.a8d0351e.js";import"./Card.37028a42.js";import"./CardTitle.d8222cf8.js";import"./CardBody.4fff68f7.js";import"./Td.1e0c90e7.js";import"./star-icon.a6efdd26.js";import"./check.51c67984.js";import"./grip-vertical-icon.7e109111.js";import"./Checkbox.7d63c785.js";import"./KeycloakTextArea.d98120cb.js";import"./resource.2cd5a37e.js";import"./joinPath.69b856b1.js";import"./filter-icon.a9b0a5f3.js";import"./Text.28ece842.js";import"./TableToolbar.51ae2a5f.js";import"./EmptyStateSecondaryActions.511adeb0.js";import"./EmptyStateBody.1533f3a6.js";import"./plus-icon.f70ae4c8.js";import"./MenuList.22670a64.js";const $e=()=>{const o=q(),{realm:n}=z(),{t:r}=G("roles"),{id:N,clientId:K}=Y(),{adminClient:d}=X(),i=async(c,v)=>{const l=await d.roles.findOneById({id:N});if(!l)throw new Error(r("common:notFound"));return l.clientRole?d.clients.findUsersWithRole({roleName:l.name,id:K,first:c,max:v}):d.roles.findUsersWithRole({name:l.name,first:c,max:v})},{enabled:a}=fe();return e(J,{"data-testid":"users-page",variant:"light",children:e(Ue,{isPaginated:!0,loader:i,ariaLabelKey:"roles:roleList",searchPlaceholderKey:"",toolbarItem:a&&e(We,{"aria-label":"Basic popover",position:"bottom",bodyContent:g("div",{children:[r("roles:whoWillAppearPopoverText"),e(f,{className:"kc-groups-link",variant:"link",onClick:()=>o(`/${n}/groups`),children:r("common:groups")}),r("or"),g(f,{className:"kc-users-link",variant:"link",onClick:()=>o(`/${n}/users`),children:[r("users"),"."]})]}),footerContent:r("roles:whoWillAppearPopoverFooterText"),children:e(f,{variant:"link",className:"kc-who-will-appear-button",icon:e(je,{}),children:r("roles:whoWillAppearLinkText")},"who-will-appear-button")}),emptyState:e(Oe,{hasIcon:!0,message:r("noDirectUsers"),instructions:g("div",{children:[r("noUsersEmptyStateDescription"),e(f,{className:"kc-groups-link-empty-state",variant:"link",onClick:()=>o(`/${n}/groups`),children:r("common:groups")}),r("or"),e(f,{className:"kc-users-link-empty-state",variant:"link",onClick:()=>o(`/${n}/users`),children:r("users")}),r("noUsersEmptyStateDescriptionContinued")]})}),columns:[{name:"username",displayKey:"roles:userName",cellFormatters:[k()]},{name:"email",displayKey:"roles:email",cellFormatters:[k()]},{name:"lastName",displayKey:"roles:lastName",cellFormatters:[k()]},{name:"firstName",displayKey:"roles:firstName",cellFormatters:[he(),k()]}]})})};function Mt(){const{t:o}=G("roles"),n=Fe({mode:"onChange"}),{control:r,reset:N,setValue:K}=n,d=q(),{adminClient:i}=X(),{id:a,clientId:c}=Y(),{pathname:v}=ye(),{realm:l}=z(),[S,ee]=T.exports.useState(0),[te,E]=T.exports.useState(),{profileInfo:oe}=ge(),x=()=>ee(S+1),{addAlert:C,addError:A}=ve(),[B,P]=T.exports.useState(!1),se=t=>{const{attributes:s,...p}=t;return{attributes:Ke(s),...p}},m=Q({control:r,defaultValue:void 0,name:"name"}),M=Q({control:r,defaultValue:!1,name:"composite"}),[F,re]=T.exports.useState();Ce(async()=>{const[t,s]=await Promise.all([i.realms.findOne({realm:l}),i.roles.findOneById({id:a})]);return{realm:t,role:s}},({realm:t,role:s})=>{if(!t||!s)throw new Error(o("common:notFound"));const p=se(s);N(p),E(p.attributes),re(t)},[S]);const V=async t=>{try{const{attributes:s,...p}=t,R=p;R.name=R.name?.trim(),R.attributes=Te(s),c?await i.clients.updateRole({id:c,roleName:t.name},R):await i.roles.updateById({id:a},R),E(s),C(o("roleSaveSuccess"),D.success)}catch(s){A("roles:roleSaveError",s)}},L=j(Ae.path),u=j(De.path),ae=()=>{if(L)return _({realm:l});if(u)return H({realm:l,clientId:u.params.clientId,tab:"roles"});throw new Error("Roles overview route could not be determined.")},w=t=>{if(L)return Ie({realm:l,id:a,tab:t});if(u)return Ne({realm:l,id:a,clientId:u.params.clientId,tab:t});throw new Error("Route could not be determined.")},b=t=>Ve(w(t)),le=b("details"),ie=b("associated-roles"),ne=b("attributes"),ce=b("users-in-role"),me=b("permissions"),[O,de]=Z({titleKey:"roles:roleDeleteConfirm",messageKey:o("roles:roleDeleteConfirmDialog",{selectedRoleName:m||o("createRole")}),continueButtonLabel:"common:delete",continueButtonVariant:$.danger,onConfirm:async()=>{try{c?await i.clients.delRole({id:c,roleName:m}):await i.roles.delById({id:a}),C(o("roleDeletedSuccess"),D.success),d(ae())}catch(t){A("roles:roleDeleteError",t)}}}),ue=v.includes("associated-roles")?[e(I,{component:"button",onClick:()=>pe(),children:o("roles:removeAllAssociatedRoles")},"delete-all-associated"),e(I,{component:"button",onClick:()=>{O()},children:o("deleteRole")},"delete-role")]:[e(I,{"data-testid":"add-roles",component:"button",onClick:()=>Re(),children:o("addAssociatedRolesText")},"toggle-modal"),e(I,{component:"button",onClick:()=>O(),children:o("deleteRole")},"delete-role")],[pe,be]=Z({titleKey:o("roles:removeAllAssociatedRoles")+"?",messageKey:o("roles:removeAllAssociatedRolesConfirmDialog",{name:m||o("createRole")}),continueButtonLabel:"common:delete",continueButtonVariant:$.danger,onConfirm:async()=>{try{const t=await i.roles.getCompositeRoles({id:a});await i.roles.delCompositeRoles({id:a},t),C(o("compositeRoleOff"),D.success,o("compositesRemovedAlertDescription")),d(w("details")),x()}catch(t){A("roles:roleDeleteError",t)}}}),Re=()=>{P(!B)},U=async t=>{try{await i.roles.createComposite({roleId:a,realm:F.realm},t),x(),d(w("associated-roles")),C(o("addAssociatedRolesSuccess"),D.success)}catch(s){A("roles:addAssociatedRolesError",s)}},W=t=>F?.defaultRole.name===t;return F?g(ke,{children:[e(de,{}),e(be,{}),B&&e(Be,{id:a,type:"roles",name:m,onAssign:t=>U(t.map(s=>s.role)),onClose:()=>P(!1)}),e(Le,{titleKey:m,badges:[{id:"composite-role-badge",text:M?o("composite"):"",readonly:!0}],actionsDropdownId:"roles-actions-dropdown",dropdownItems:ue,divider:!1}),e(J,{variant:"light",className:"pf-u-p-0",children:g(Me,{isBox:!0,mountOnEnter:!0,defaultLocation:w("details"),children:[e(h,{title:e(y,{children:o("common:details")}),...le,children:e(xe,{form:n,onSubmit:V,role:u?"manage-clients":"manage-realm",cancelLink:u?H({realm:l,clientId:c,tab:"roles"}):_({realm:l}),editMode:!0})}),M&&e(h,{"data-testid":"associatedRolesTab",title:e(y,{children:o("associatedRolesText")}),...ie,children:e(Pe,{name:m,id:a,type:"roles",isManager:!0,save:t=>U(t.map(s=>s.role))})}),!W(m)&&e(h,{"data-testid":"attributesTab",className:"kc-attributes-tab",title:e(y,{children:o("common:attributes")}),...ne,children:e(Se,{form:n,save:V,reset:()=>K("attributes",te,{shouldDirty:!1})})}),!W(m)&&e(h,{title:e(y,{children:o("usersInRole")}),...ce,children:e($e,{"data-cy":"users-in-role-tab"})}),!oe?.disabledFeatures?.includes("ADMIN_FINE_GRAINED_AUTHZ")&&e(h,{title:e(y,{children:o("common:permissions")}),...me,children:e(Ee,{id:a,type:"roles"})})]})})]}):e(we,{})}export{Mt as default};
//# sourceMappingURL=RealmRoleTabs.af0f6aee.js.map
