import{u as V,az as $,aA as G,r as u,ad as H,aX as Q,h as T,F as K,j as n,bD as W,bE as q,ah as X,q as D,am as J,aG as Y,ao as Z}from"./index.2ecf13ca.js";import{K as N}from"./KeycloakDataTable.5c9a6c7c.js";import{u as ee}from"./useLocaleSort.377bcdf5.js";import{g as te,a as se}from"./resource.09062762.js";import{L as U}from"./ListEmptyState.94d606ed.js";import{F as oe}from"./filter-icon.f568e30b.js";import{M as ne,a as le}from"./Modal.2c72168d.js";import{c as B}from"./HelpItem.49be9c4e.js";import{u as ie}from"./ConfirmDialog.b43fd344.js";import{ag as ae}from"./Td.ff2a9f66.js";import{C as re}from"./Checkbox.56efba4a.js";const j={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},O={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listAvailableRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},F={groups:j,users:j,clientScopes:O,clients:O,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},ce=(t,e)=>t[e],S=(t,e,s,...o)=>ce(t,e)[s](...o),me=(t,e,s,o)=>o.map(a=>{const l={id:a.role.id,name:a.role.name},r=F[e]?.delete[a.client?0:1];return S(t,e,r,{id:s,clientUniqueId:a.client?.id,client:a.client?.id,roles:[l]},[l])}),pe=async(t,e,s)=>{const o=F[e].listEffective[0],a=S(t,e,o,{id:s});if(e!=="roles")return a;const l=await a;return{clientMappings:await Promise.all(l.filter(i=>i.clientRole).map(async i=>{const f=await t.clients.findOne({id:i.containerId});return i.containerId=f?.clientId,{...f,mappings:[i]}})),realmMappings:l.filter(i=>!i.clientRole)}},de=async(t,e,s)=>{const o=F[e].listEffective[1];if(e!=="roles")return(await S(t,e,o,{id:s})).map(r=>({role:r}));const a=await S(t,e,o,{id:s}),l=await Promise.all(a.filter(r=>r.composite).map(r=>S(t,e,o,{id:r.id})));return[...a,...l.flat()].map(r=>({role:r}))},ge=async(t,e,s)=>{const o=F[e].listAvailable[1];return(await S(t,e,o,s)).map(a=>({role:a}))};const ue=(t,e,s)=>[...s?t.map(o=>({...o,role:{...o.role,isInherited:!1}})):e.map(o=>({...o,role:{...o.role,isInherited:t.find(a=>a.role.id===o.role.id)===void 0}}))],_=({role:t,client:e})=>T(K,{children:[e?.clientId&&n(X,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:e.clientId}),t.name]}),ke=({name:t,id:e,type:s,isManager:o=!0,save:a})=>{const{t:l}=V(s),{adminClient:r}=$(),{addAlert:i,addError:f}=G(),[M,b]=u.exports.useState(0),d=()=>b(M+1),[y,I]=u.exports.useState(!0),[E,C]=u.exports.useState(!1),[v,A]=u.exports.useState([]),w=async c=>{await a(c),d()},L=async()=>{let c=[],R=[];y||(c=await de(r,s,e),R=(await te({adminClient:r,type:s,id:e})).map(m=>({client:{clientId:m.client,id:m.clientId},role:{id:m.id,name:m.role,description:m.description}})));const h=await pe(r,s,e),p=h.realmMappings?.map(m=>({role:m}))||[],x=Object.values(h.clientMappings||{}).map(m=>m.mappings.map(z=>({client:{clientId:m.client,...m},role:z}))).flat();return[...ue([...p,...x],[...R,...c],y)]},[k,P]=ie({titleKey:"clients:removeMappingTitle",messageKey:l("clients:removeMappingConfirm",{count:v.length}),continueButtonLabel:"common:remove",continueButtonVariant:H.danger,onConfirm:async()=>{try{await Promise.all(me(r,s,e,v)),i(l("clients:clientScopeRemoveSuccess"),Q.success),d()}catch(c){f("clients:clientScopeRemoveError",c)}}}),g=()=>o?T(K,{children:[n(B,{children:n(D,{"data-testid":"assignRole",onClick:()=>C(!0),children:l("common:assignRole")})}),n(B,{children:n(D,{variant:"link","data-testid":"unAssignRole",onClick:k,isDisabled:v.length===0,children:l("common:unAssignRole")})})]}):n("span",{});return T(K,{children:[E&&n(fe,{id:e,type:s,name:t,onAssign:w,onClose:()=>C(!1)}),n(P,{}),n(N,{"data-testid":"assigned-roles",loader:L,canSelectAll:!0,onSelect:c=>A(c),searchPlaceholderKey:"clients:searchByName",ariaLabelKey:"clients:clientScopeList",isRowDisabled:c=>c.role.isInherited||!1,toolbarItem:T(K,{children:[n(B,{children:n(re,{label:l("common:hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:y,onChange:c=>{I(c),d()}})}),n(g,{})]}),actions:o?[{title:l("common:unAssignRole"),onRowClick:async c=>(A([c]),k(),!1)}]:[],columns:[{name:"role.name",displayKey:l("common:name"),transforms:[ae(30)],cellRenderer:_},{name:"role.isInherited",displayKey:l("common:inherent"),cellFormatters:[W(),q()]},{name:"role.description",displayKey:l("common:description"),cellFormatters:[q()]}],emptyState:n(U,{message:l("noRoles"),instructions:l("noRolesInstructions"),primaryActionText:l("common:assignRole"),onPrimaryAction:()=>C(!0)})},`${e}${M}`)]})},fe=({id:t,name:e,type:s,isRadio:o=!1,isLDAPmapper:a,onAssign:l,onClose:r})=>{const{t:i}=V(s),{adminClient:f}=$(),[M,b]=u.exports.useState(!1),[d,y]=u.exports.useState("roles"),[I,E]=u.exports.useState([]),[C,v]=u.exports.useState(0),A=()=>v(C+1),w=ee(),L=({role:{name:g}})=>g?.toUpperCase(),k=async(g,c,R)=>{const h={first:g,max:c};R&&(h.search=R);const p=await ge(f,s,{...h,id:t});return w(p,L).map(m=>({role:m.role,id:m.role.id}))},P=async(g,c,R)=>{const h=await se({adminClient:f,id:t,type:s,first:g||0,max:c||10,search:R});return w(h.map(p=>({client:{clientId:p.client,id:p.clientId},role:{id:p.id,name:p.role,description:p.description},id:p.id})),({client:{clientId:p},role:{name:x}})=>`${p}${x}`)};return n(ne,{variant:le.large,title:a?i("common:assignRole"):i("common:assignRolesTo",{client:e}),isOpen:!0,onClose:r,actions:[n(D,{"data-testid":"assign",isDisabled:I.length===0,variant:"primary",onClick:()=>{l(I),r()},children:i("common:assign")},"confirm"),n(D,{"data-testid":"cancel",variant:"link",onClick:r,children:i("common:cancel")},"cancel")],children:n(N,{onSelect:g=>E([...g]),searchPlaceholderKey:"clients:searchByRoleName",isPaginated:d==="clients",searchTypeComponent:n(B,{children:n(J,{onSelect:()=>{y(d==="roles"?"clients":"roles"),b(!1),A()},"data-testid":"filter-type-dropdown",toggle:n(Y,{onToggle:b,icon:n(oe,{}),children:i(d==="roles"?"common:filterByRoles":"common:filterByClients")}),isOpen:M,dropdownItems:[n(Z,{"data-testid":d,children:i(d==="roles"?"common:filterByClients":"common:filterByRoles")},"filter-type")]})}),canSelectAll:!0,isRadio:o,loader:d==="roles"?k:P,ariaLabelKey:"clients:roles",columns:[{name:"name",cellRenderer:_},{name:"role.description",displayKey:"common:description"}],emptyState:n(U,{message:i("noRoles"),instructions:i("common:noRealmRolesToAssign"),secondaryActions:[{text:i("common:filterByClients"),onClick:()=>{y("clients"),A()}}]})},C)})};export{fe as A,ke as R,_ as S};
//# sourceMappingURL=AddRoleMappingModal.c7175fba.js.map
