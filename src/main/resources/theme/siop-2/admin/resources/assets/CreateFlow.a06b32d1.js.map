{"version":3,"file":"CreateFlow.a06b32d1.js","sources":["../../src/authentication/form/FlowType.tsx","../../src/authentication/form/CreateFlow.tsx"],"sourcesContent":["import AuthenticationFlowRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/authenticationFlowRepresentation\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\n\nconst TYPES = [\"basic-flow\", \"client-flow\"] as const;\n\nexport const FlowType = () => {\n  const { t } = useTranslation(\"authentication\");\n  const { control } = useFormContext<AuthenticationFlowRepresentation>();\n  const [open, setOpen] = useState(false);\n\n  return (\n    <FormGroup\n      label={t(\"flowType\")}\n      labelIcon={\n        <HelpItem\n          helpText=\"authentication-help:topLevelFlowType\"\n          fieldLabelId=\"authentication:flowType\"\n        />\n      }\n      fieldId=\"flowType\"\n    >\n      <Controller\n        name=\"providerId\"\n        defaultValue={TYPES[0]}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId=\"flowType\"\n            onToggle={setOpen}\n            onSelect={(_, value) => {\n              field.onChange(value.toString());\n              setOpen(false);\n            }}\n            selections={t(`top-level-flow-type.${field.value}`)}\n            variant={SelectVariant.single}\n            aria-label={t(\"flowType\")}\n            isOpen={open}\n          >\n            {TYPES.map((type) => (\n              <SelectOption\n                key={type}\n                selected={type === field.value}\n                value={type}\n              >\n                {t(`top-level-flow-type.${type}`)}\n              </SelectOption>\n            ))}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type AuthenticationFlowRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/authenticationFlowRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toAuthentication } from \"../routes/Authentication\";\nimport { toFlow } from \"../routes/Flow\";\nimport { FlowType } from \"./FlowType\";\nimport { NameDescription } from \"./NameDescription\";\n\nexport default function CreateFlow() {\n  const { t } = useTranslation(\"authentication\");\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { adminClient } = useAdminClient();\n  const { addAlert } = useAlerts();\n  const form = useForm<AuthenticationFlowRepresentation>();\n  const { handleSubmit } = form;\n\n  const onSubmit = async (formValues: AuthenticationFlowRepresentation) => {\n    const flow = { ...formValues, builtIn: false, topLevel: true };\n\n    try {\n      const { id } = await adminClient.authenticationManagement.createFlow(\n        flow\n      );\n      addAlert(t(\"flowCreatedSuccess\"), AlertVariant.success);\n      navigate(\n        toFlow({\n          realm,\n          id: id!,\n          usedBy: \"notInUse\",\n        })\n      );\n    } catch (error: any) {\n      addAlert(\n        t(\"flowCreateError\", {\n          error: error.response?.data?.errorMessage || error,\n        }),\n        AlertVariant.danger\n      );\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey=\"authentication:createFlow\"\n        subKey=\"authentication-help:createFlow\"\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <NameDescription />\n            <FlowType />\n            <ActionGroup>\n              <Button data-testid=\"create\" type=\"submit\">\n                {t(\"common:create\")}\n              </Button>\n              <Button\n                data-testid=\"cancel\"\n                variant=\"link\"\n                component={(props) => (\n                  <Link {...props} to={toAuthentication({ realm })}></Link>\n                )}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["TYPES","FlowType","t","useTranslation","control","useFormContext","open","setOpen","useState","FormGroup","HelpItem","Controller","field","Select","_","value","onChange","toString","SelectVariant","single","map","type","SelectOption","CreateFlow","navigate","useNavigate","realm","useRealm","adminClient","useAdminClient","addAlert","useAlerts","form","useForm","handleSubmit","_Fragment","_jsx","ViewHeader","PageSection","FormProvider","FormAccess","formValues","flow","builtIn","topLevel","id","authenticationManagement","createFlow","AlertVariant","success","toFlow","usedBy","error","response","data","errorMessage","danger","NameDescription","ActionGroup","Button","props","Link","toAuthentication"],"mappings":"wtBAaA,MAAMA,EAAQ,CAAC,aAAc,aAAa,EAE7BC,EAAW,IAAM,CACtB,KAAA,CAAEC,CAAAA,EAAMC,EAAe,gBAAgB,EACvC,CAAEC,QAAAA,GAAYC,EAAkD,EAChE,CAACC,EAAMC,CAAO,EAAIC,mBAAS,EAAK,EAEtC,SACGC,EAAS,CACR,MAAOP,EAAE,UAAU,EACnB,YACGQ,EAAQ,CACP,SAAS,uCACT,aAAa,yBAAA,CAEhB,EACD,QAAQ,WAAU,WAEjBC,EAAU,CACT,KAAK,aACL,aAAcX,EAAM,GACpB,QAAAI,EACA,OAAQ,CAAC,CAAEQ,MAAAA,CAAAA,MACRC,EAAM,CACL,SAAS,WACT,SAAUN,EACV,SAAU,CAACO,EAAGC,IAAU,CAChBC,EAAAA,SAASD,EAAME,SAAU,CAAA,EAC/BV,EAAQ,EAAK,CACf,EACA,WAAYL,EAAG,uBAAsBU,EAAMG,OAAO,EAClD,QAASG,EAAcC,OACvB,aAAYjB,EAAE,UAAU,EACxB,OAAQI,EAAK,SAEZN,EAAMoB,IAAKC,KACTC,EAAY,CAEX,SAAUD,IAAST,EAAMG,MACzB,MAAOM,EAAK,SAEXnB,EAAG,uBAAsBmB,GAAM,CAAC,EAJ5BA,CAAI,CAMZ,CAAA,CAAC,CAAA,CAEJ,CAAA,CAEM,CAEhB,ECzCA,SAAwBE,IAAa,CAC7B,KAAA,CAAErB,CAAAA,EAAMC,EAAe,gBAAgB,EACvCqB,EAAWC,IACX,CAAEC,MAAAA,GAAUC,EAAU,EACtB,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,SAAAA,GAAaC,EAAW,EAC1BC,EAAOC,IACP,CAAEC,aAAAA,CAAiBF,EAAAA,EA2BzB,SACEG,EAAA,CAAA,SAAA,CACEC,EAACC,EAAU,CACT,SAAS,4BACT,OAAO,gCAAA,CACP,EACFD,EAACE,EAAW,CAAC,QAAQ,QAAO,WACzBC,EAAY,CAAA,GAAKP,EAAI,WACnBQ,EAAU,CACT,aAAY,GACZ,KAAK,uBACL,SAAUN,EApCH,MAAOO,GAAiD,CACvE,MAAMC,EAAO,CAAE,GAAGD,EAAYE,QAAS,GAAOC,SAAU,EAAA,EAEpD,GAAA,CACI,KAAA,CAAEC,GAAAA,CAAO,EAAA,MAAMjB,EAAYkB,yBAAyBC,WACxDL,CAAI,EAENZ,EAAS5B,EAAE,oBAAoB,EAAG8C,EAAaC,OAAO,EACtDzB,EACE0B,EAAO,CACLxB,MAAAA,EACAmB,GAAAA,EACAM,OAAQ,UACT,CAAA,CAAC,QAEGC,GACPtB,EACE5B,EAAE,kBAAmB,CACnBkD,MAAOA,EAAMC,UAAUC,MAAMC,cAAgBH,CAAAA,CAC9C,EACDJ,EAAaQ,MAAM,CAEvB,CAAA,CAcuC,EAAE,SAEjC,CAACpB,EAAAqB,EAAkB,EAAA,EACnBrB,EAACnC,EAAQ,CAAA,CAAA,IACRyD,EAAW,CAAA,SAAA,CACVtB,EAACuB,EAAM,CAAC,cAAY,SAAS,KAAK,SAAQ,SACvCzD,EAAE,eAAe,CAAA,CACX,EACTkC,EAACuB,EAAM,CACL,cAAY,SACZ,QAAQ,OACR,UACEC,GAAAxB,EAACyB,EAAI,CAAA,GAAKD,EAAO,GAAIE,EAAiB,CAAEpC,MAAAA,CAAAA,CAAO,CAAA,CAC/C,EAAA,SAEDxB,EAAE,eAAe,CAAA,CACX,CAAA,CAAA,CACG,CAAA,CAAA,CAAA,CAAA,CACH,CAAA,CAEH,CAAA,CAAA,CACb,CAEP"}