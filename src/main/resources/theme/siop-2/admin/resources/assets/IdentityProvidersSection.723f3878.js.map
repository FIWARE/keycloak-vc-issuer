{"version":3,"file":"IdentityProvidersSection.723f3878.js","sources":["../../../../node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownGroup.js","../../../../node_modules/lodash-es/_arrayAggregator.js","../../../../node_modules/lodash-es/_baseAggregator.js","../../../../node_modules/lodash-es/_createAggregator.js","../../../../node_modules/lodash-es/groupBy.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/cube-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/facebook-square-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/github-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/gitlab-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/google-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/linkedin-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/openshift-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/stack-overflow-icon.js","../../../../node_modules/@patternfly/react-icons/dist/esm/icons/twitter-icon.js","../../src/identity-providers/icons/FontAwesomeIcon.tsx","../../src/identity-providers/ProviderIconMapper.tsx","../../src/identity-providers/ManageOrderDialog.tsx","../../src/identity-providers/IdentityProvidersSection.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nexport const DropdownGroup = (_a) => {\n    var { children = null, className = '', label = '' } = _a, props = __rest(_a, [\"children\", \"className\", \"label\"]);\n    return (React.createElement(DropdownContext.Consumer, null, ({ sectionClass, sectionTitleClass, sectionComponent }) => {\n        const SectionComponent = sectionComponent;\n        return (React.createElement(SectionComponent, Object.assign({ className: css(sectionClass, className) }, props),\n            label && (React.createElement(\"h1\", { className: css(sectionTitleClass), \"aria-hidden\": true }, label)),\n            React.createElement(\"ul\", { role: \"none\" }, children)));\n    }));\n};\nDropdownGroup.displayName = 'DropdownGroup';\n//# sourceMappingURL=DropdownGroup.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import { createIcon } from '../createIcon';\n\nexport const CubeIconConfig = {\n  name: 'CubeIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CubeIcon = createIcon(CubeIconConfig);\n\nexport default CubeIcon;","import { createIcon } from '../createIcon';\n\nexport const FacebookSquareIconConfig = {\n  name: 'FacebookSquareIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FacebookSquareIcon = createIcon(FacebookSquareIconConfig);\n\nexport default FacebookSquareIcon;","import { createIcon } from '../createIcon';\n\nexport const GithubIconConfig = {\n  name: 'GithubIcon',\n  height: 512,\n  width: 496,\n  svgPath: 'M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GithubIcon = createIcon(GithubIconConfig);\n\nexport default GithubIcon;","import { createIcon } from '../createIcon';\n\nexport const GitlabIconConfig = {\n  name: 'GitlabIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GitlabIcon = createIcon(GitlabIconConfig);\n\nexport default GitlabIcon;","import { createIcon } from '../createIcon';\n\nexport const GoogleIconConfig = {\n  name: 'GoogleIcon',\n  height: 512,\n  width: 488,\n  svgPath: 'M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GoogleIcon = createIcon(GoogleIconConfig);\n\nexport default GoogleIcon;","import { createIcon } from '../createIcon';\n\nexport const LinkedinIconConfig = {\n  name: 'LinkedinIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LinkedinIcon = createIcon(LinkedinIconConfig);\n\nexport default LinkedinIcon;","import { createIcon } from '../createIcon';\n\nexport const OpenshiftIconConfig = {\n  name: 'OpenshiftIcon',\n  height: 100,\n  width: 100,\n  svgPath: 'M145.7,45.3l-16.1,5.8c0.2,2.6,0.6,5.1,1.3,7.6l15.3-5.6C145.7,50.6,145.5,47.9,145.7,45.3M216.7,27.5c-1.1-2.3-2.4-4.5-3.9-6.6l-16.1,5.8c1.9,1.9,3.4,4.1,4.7,6.4L216.7,27.5zM181.4,23c3.3,1.6,6.2,3.7,8.7,6.2l16.1-5.8c-4.4-6.2-10.5-11.5-17.9-14.9c-22.9-10.7-50.3-0.7-61,22.2c-3.5,7.4-4.8,15.3-4.1,23l16.1-5.8c0.3-3.5,1.1-7,2.7-10.3C148.7,22.5,166.4,16,181.4,23M131.9,58.4l-15.3,5.6c1.4,5.6,3.8,10.8,7.2,15.5l16-5.8C135.8,69.4,133,64.1,131.9,58.4M198.5,52.3c-0.3,3.5-1.1,7-2.7,10.3C188.8,77.5,171,84,156.1,77c-3.3-1.6-6.3-3.7-8.7-6.2l-16,5.8c4.4,6.2,10.5,11.5,17.9,14.9c22.9,10.7,50.3,0.7,61-22.2c3.5-7.4,4.7-15.3,4.1-22.9L198.5,52.3zM202.4,32.7l-15.3,5.6c2.8,5.1,4.2,10.9,3.7,16.8l16-5.8C206.5,43.5,204.9,37.9,202.4,32.7',\n  yOffset: 0,\n  xOffset: 116,\n};\n\nexport const OpenshiftIcon = createIcon(OpenshiftIconConfig);\n\nexport default OpenshiftIcon;","import { createIcon } from '../createIcon';\n\nexport const StackOverflowIconConfig = {\n  name: 'StackOverflowIcon',\n  height: 512,\n  width: 384,\n  svgPath: 'M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const StackOverflowIcon = createIcon(StackOverflowIconConfig);\n\nexport default StackOverflowIcon;","import { createIcon } from '../createIcon';\n\nexport const TwitterIconConfig = {\n  name: 'TwitterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TwitterIcon = createIcon(TwitterIconConfig);\n\nexport default TwitterIcon;","import environment from \"../../environment\";\n\ntype FontAwesomeIconProps = {\n  icon: \"bitbucket\" | \"microsoft\" | \"instagram\" | \"paypal\";\n};\n\nexport const FontAwesomeIcon = ({ icon }: FontAwesomeIconProps) => {\n  const styles = { style: { height: \"2em\", width: \"2em\" } };\n  switch (icon) {\n    case \"bitbucket\":\n      return (\n        <img\n          src={environment.resourceUrl + \"/bitbucket-brands.svg\"}\n          {...styles}\n        />\n      );\n    case \"microsoft\":\n      return (\n        <img\n          src={environment.resourceUrl + \"/microsoft-brands.svg\"}\n          {...styles}\n        />\n      );\n    case \"instagram\":\n      return (\n        <img\n          src={environment.resourceUrl + \"/instagram-brands.svg\"}\n          {...styles}\n        />\n      );\n    case \"paypal\":\n      return (\n        <img src={environment.resourceUrl + \"/paypal-brands.svg\"} {...styles} />\n      );\n    default:\n      return null;\n  }\n};\n","import {\n  CubeIcon,\n  FacebookSquareIcon,\n  GithubIcon,\n  GitlabIcon,\n  GoogleIcon,\n  LinkedinIcon,\n  OpenshiftIcon,\n  StackOverflowIcon,\n  TwitterIcon,\n} from \"@patternfly/react-icons\";\nimport type { SVGIconProps } from \"@patternfly/react-icons/dist/js/createIcon\";\n\nimport { FontAwesomeIcon } from \"./icons/FontAwesomeIcon\";\n\ntype ProviderIconMapperProps = {\n  provider: { [index: string]: string };\n};\n\nexport const ProviderIconMapper = ({ provider }: ProviderIconMapperProps) => {\n  const defaultProps: SVGIconProps = { size: \"lg\" };\n  switch (provider.id) {\n    case \"github\":\n      return <GithubIcon {...defaultProps} />;\n    case \"facebook\":\n      return <FacebookSquareIcon {...defaultProps} />;\n    case \"gitlab\":\n      return <GitlabIcon {...defaultProps} />;\n    case \"google\":\n      return <GoogleIcon {...defaultProps} />;\n    case \"linkedin\":\n      return <LinkedinIcon {...defaultProps} />;\n\n    case \"openshift-v3\":\n    case \"openshift-v4\":\n      return <OpenshiftIcon {...defaultProps} />;\n    case \"stackoverflow\":\n      return <StackOverflowIcon {...defaultProps} />;\n    case \"twitter\":\n      return <TwitterIcon {...defaultProps} />;\n    case \"microsoft\":\n    case \"bitbucket\":\n    case \"instagram\":\n    case \"paypal\":\n      return <FontAwesomeIcon icon={provider.id} />;\n    default:\n      return <CubeIcon {...defaultProps} />;\n  }\n};\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { sortBy } from \"lodash-es\";\nimport {\n  Button,\n  ButtonVariant,\n  DataList,\n  DataListCell,\n  DataListControl,\n  DataListDragButton,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n} from \"@patternfly/react-core\";\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { useAdminClient } from \"../context/auth/AdminClient\";\nimport { useAlerts } from \"../components/alert/Alerts\";\n\ntype ManageOrderDialogProps = {\n  providers: IdentityProviderRepresentation[];\n  onClose: () => void;\n};\n\nexport const ManageOrderDialog = ({\n  providers,\n  onClose,\n}: ManageOrderDialogProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [alias, setAlias] = useState(\"\");\n  const [liveText, setLiveText] = useState(\"\");\n  const [order, setOrder] = useState(\n    providers.map((provider) => provider.alias!)\n  );\n\n  const onDragStart = (id: string) => {\n    setAlias(id);\n    setLiveText(t(\"common:onDragStart\", { item: id }));\n  };\n\n  const onDragMove = () => {\n    setLiveText(t(\"common:onDragMove\", { item: alias }));\n  };\n\n  const onDragCancel = () => {\n    setLiveText(t(\"common:onDragCancel\"));\n  };\n\n  const onDragFinish = (providerOrder: string[]) => {\n    setLiveText(t(\"common:onDragFinish\", { list: providerOrder }));\n    setOrder(providerOrder);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title={t(\"manageDisplayOrder\")}\n      isOpen={true}\n      onClose={onClose}\n      actions={[\n        <Button\n          id=\"modal-confirm\"\n          data-testid=\"confirm\"\n          key=\"confirm\"\n          onClick={async () => {\n            const updates = order.map((alias, index) => {\n              const provider = providers.find((p) => p.alias === alias)!;\n              provider.config!.guiOrder = index;\n              return adminClient.identityProviders.update({ alias }, provider);\n            });\n\n            try {\n              await Promise.all(updates);\n              addAlert(t(\"orderChangeSuccess\"));\n            } catch (error) {\n              addError(\"identity-providers:orderChangeError\", error);\n            }\n\n            onClose();\n          }}\n        >\n          {t(\"common:save\")}\n        </Button>,\n        <Button\n          id=\"modal-cancel\"\n          data-testid=\"cancel\"\n          key=\"cancel\"\n          variant={ButtonVariant.link}\n          onClick={onClose}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <TextContent className=\"pf-u-pb-lg\">\n        <Text>{t(\"orderDialogIntro\")}</Text>\n      </TextContent>\n\n      <DataList\n        aria-label={t(\"manageOrderTableAria\")}\n        data-testid=\"manageOrderDataList\"\n        isCompact\n        onDragFinish={onDragFinish}\n        onDragStart={onDragStart}\n        onDragMove={onDragMove}\n        onDragCancel={onDragCancel}\n        itemOrder={order}\n      >\n        {sortBy(providers, \"config.guiOrder\", \"alias\").map((provider) => (\n          <DataListItem\n            aria-label={provider.alias}\n            id={provider.alias}\n            key={provider.alias}\n          >\n            <DataListItemRow>\n              <DataListControl>\n                <DataListDragButton aria-label={t(\"common-help:dragHelp\")} />\n              </DataListControl>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell\n                    key={provider.alias}\n                    data-testid={provider.alias}\n                  >\n                    {provider.alias}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        ))}\n      </DataList>\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </Modal>\n  );\n};\n","import { Fragment, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { sortBy, groupBy } from \"lodash-es\";\nimport {\n  AlertVariant,\n  Badge,\n  Button,\n  ButtonVariant,\n  CardTitle,\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownToggle,\n  Gallery,\n  PageSection,\n  Spinner,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\n\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useFetch, useAdminClient } from \"../context/auth/AdminClient\";\nimport { KeycloakDataTable } from \"../components/table-toolbar/KeycloakDataTable\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport { upperCaseFormatter } from \"../util\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ProviderIconMapper } from \"./ProviderIconMapper\";\nimport { ManageOrderDialog } from \"./ManageOrderDialog\";\nimport { toIdentityProvider } from \"./routes/IdentityProvider\";\nimport { toIdentityProviderCreate } from \"./routes/IdentityProviderCreate\";\nimport helpUrls from \"../help-urls\";\nimport { ClickableCard } from \"../components/keycloak-card/ClickableCard\";\n\nexport default function IdentityProvidersSection() {\n  const { t } = useTranslation(\"identity-providers\");\n  const identityProviders = groupBy(\n    useServerInfo().identityProviders,\n    \"groupName\"\n  );\n  const { realm } = useRealm();\n  const navigate = useNavigate();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  const [addProviderOpen, setAddProviderOpen] = useState(false);\n  const [manageDisplayDialog, setManageDisplayDialog] = useState(false);\n  const [providers, setProviders] =\n    useState<IdentityProviderRepresentation[]>();\n  const [selectedProvider, setSelectedProvider] =\n    useState<IdentityProviderRepresentation>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  useFetch(\n    async () => {\n      const provider = await adminClient.realms.findOne({ realm });\n      if (!provider) {\n        throw new Error(t(\"common:notFound\"));\n      }\n      return provider.identityProviders!;\n    },\n    (providers) => {\n      setProviders(sortBy(providers, [\"config.guiOrder\", \"alias\"]));\n    },\n    [key]\n  );\n\n  const DetailLink = (identityProvider: IdentityProviderRepresentation) => (\n    <Link\n      key={identityProvider.providerId}\n      to={toIdentityProvider({\n        realm,\n        providerId: identityProvider.providerId!,\n        alias: identityProvider.alias!,\n        tab: \"settings\",\n      })}\n    >\n      {identityProvider.displayName || identityProvider.alias}\n      {!identityProvider.enabled && (\n        <Badge\n          key={`${identityProvider.providerId}-disabled`}\n          isRead\n          className=\"pf-u-ml-sm\"\n        >\n          {t(\"common:disabled\")}\n        </Badge>\n      )}\n    </Link>\n  );\n\n  const navigateToCreate = (providerId: string) =>\n    navigate(\n      toIdentityProviderCreate({\n        realm,\n        providerId,\n      })\n    );\n\n  const identityProviderOptions = () =>\n    Object.keys(identityProviders).map((group) => (\n      <DropdownGroup key={group} label={group}>\n        {sortBy(identityProviders[group], \"name\").map((provider) => (\n          <DropdownItem\n            key={provider.id}\n            value={provider.id}\n            component={\n              <Link\n                to={toIdentityProviderCreate({\n                  realm,\n                  providerId: provider.id,\n                })}\n                data-testid={provider.id}\n              >\n                {provider.name}\n              </Link>\n            }\n          />\n        ))}\n      </DropdownGroup>\n    ));\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"identity-providers:deleteProvider\",\n    messageKey: t(\"deleteConfirm\", { provider: selectedProvider?.alias }),\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.identityProviders.del({\n          alias: selectedProvider!.alias!,\n        });\n        setProviders([\n          ...providers!.filter((p) => p.alias !== selectedProvider?.alias),\n        ]);\n        refresh();\n        addAlert(t(\"deletedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"identity-providers:deleteError\", error);\n      }\n    },\n  });\n\n  if (!providers) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      {manageDisplayDialog && (\n        <ManageOrderDialog\n          onClose={() => {\n            setManageDisplayDialog(false);\n            refresh();\n          }}\n          providers={providers.filter((p) => p.enabled)}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"common:identityProviders\"\n        subKey=\"identity-providers:listExplain\"\n        helpUrl={helpUrls.identityProvidersUrl}\n      />\n      <PageSection\n        variant={providers.length === 0 ? \"default\" : \"light\"}\n        className={providers.length === 0 ? \"\" : \"pf-u-p-0\"}\n      >\n        {providers.length === 0 && (\n          <>\n            <TextContent>\n              <Text component={TextVariants.p}>{t(\"getStarted\")}</Text>\n            </TextContent>\n            {Object.keys(identityProviders).map((group) => (\n              <Fragment key={group}>\n                <TextContent>\n                  <Text className=\"pf-u-mt-lg\" component={TextVariants.h2}>\n                    {group}:\n                  </Text>\n                </TextContent>\n                <hr className=\"pf-u-mb-lg\" />\n                <Gallery hasGutter>\n                  {sortBy(identityProviders[group], \"name\").map((provider) => (\n                    <ClickableCard\n                      key={provider.id}\n                      data-testid={`${provider.id}-card`}\n                      onClick={() => navigateToCreate(provider.id)}\n                    >\n                      <CardTitle>\n                        <Split hasGutter>\n                          <SplitItem>\n                            <ProviderIconMapper provider={provider} />\n                          </SplitItem>\n                          <SplitItem isFilled>{provider.name}</SplitItem>\n                        </Split>\n                      </CardTitle>\n                    </ClickableCard>\n                  ))}\n                </Gallery>\n              </Fragment>\n            ))}\n          </>\n        )}\n        {providers.length !== 0 && (\n          <KeycloakDataTable\n            loader={providers}\n            ariaLabelKey=\"common:identityProviders\"\n            searchPlaceholderKey=\"identity-providers:searchForProvider\"\n            toolbarItem={\n              <>\n                <ToolbarItem>\n                  <Dropdown\n                    data-testid=\"addProviderDropdown\"\n                    toggle={\n                      <DropdownToggle\n                        onToggle={() => setAddProviderOpen(!addProviderOpen)}\n                        isPrimary\n                      >\n                        {t(\"addProvider\")}\n                      </DropdownToggle>\n                    }\n                    isOpen={addProviderOpen}\n                    dropdownItems={identityProviderOptions()}\n                  />\n                </ToolbarItem>\n\n                <ToolbarItem>\n                  <Button\n                    data-testid=\"manageDisplayOrder\"\n                    variant=\"link\"\n                    onClick={() => setManageDisplayDialog(true)}\n                  >\n                    {t(\"manageDisplayOrder\")}\n                  </Button>\n                </ToolbarItem>\n              </>\n            }\n            actions={[\n              {\n                title: t(\"common:delete\"),\n                onRowClick: (provider) => {\n                  setSelectedProvider(provider);\n                  toggleDeleteDialog();\n                },\n              },\n            ]}\n            columns={[\n              {\n                name: \"alias\",\n                displayKey: \"common:name\",\n                cellRenderer: DetailLink,\n              },\n              {\n                name: \"providerId\",\n                displayKey: \"identity-providers:providerDetails\",\n                cellFormatters: [upperCaseFormatter()],\n              },\n            ]}\n          />\n        )}\n      </PageSection>\n    </>\n  );\n}\n"],"names":["DropdownGroup","_a","children","className","label","props","__rest","_jsx","DropdownContext","sectionClass","sectionTitleClass","sectionComponent","_jsxs","Object","assign","css","displayName","arrayAggregator","array","setter","iteratee","accumulator","index","length","value","baseAggregator","collection","baseEach","key","createAggregator","initializer","func","isArray","baseIteratee","objectProto","hasOwnProperty","groupBy","result","baseAssignValue","groupBy$1","CubeIconConfig","CubeIcon","createIcon","FacebookSquareIconConfig","FacebookSquareIcon","GithubIconConfig","GithubIcon","GitlabIconConfig","GitlabIcon","GoogleIconConfig","GoogleIcon","LinkedinIconConfig","LinkedinIcon","OpenshiftIconConfig","OpenshiftIcon","StackOverflowIconConfig","StackOverflowIcon","TwitterIconConfig","TwitterIcon","FontAwesomeIcon","icon","styles","style","height","width","environment","resourceUrl","ProviderIconMapper","provider","defaultProps","size","id","ManageOrderDialog","providers","onClose","t","useTranslation","adminClient","useAdminClient","addAlert","addError","useAlerts","alias","setAlias","useState","liveText","setLiveText","order","setOrder","map","onDragStart","item","onDragMove","onDragCancel","onDragFinish","providerOrder","list","Modal","ModalVariant","small","Button","updates","find","p","config","guiOrder","identityProviders","update","Promise","all","error","ButtonVariant","link","TextContent","Text","DataList","sortBy","DataListItem","DataListItemRow","DataListControl","DataListDragButton","DataListItemCells","DataListCell","IdentityProvidersSection","useServerInfo","realm","useRealm","navigate","useNavigate","setKey","refresh","addProviderOpen","setAddProviderOpen","manageDisplayDialog","setManageDisplayDialog","setProviders","selectedProvider","setSelectedProvider","useFetch","realms","findOne","Error","DetailLink","identityProvider","Link","toIdentityProvider","providerId","tab","enabled","Badge","navigateToCreate","toIdentityProviderCreate","identityProviderOptions","keys","group","DropdownItem","name","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","titleKey","messageKey","continueButtonLabel","continueButtonVariant","danger","onConfirm","del","filter","AlertVariant","success","_Fragment","ViewHeader","helpUrls","identityProvidersUrl","PageSection","TextVariants","Fragment","h2","Gallery","ClickableCard","CardTitle","Split","SplitItem","KeycloakDataTable","ToolbarItem","Dropdown","DropdownToggle","title","onRowClick","displayKey","cellRenderer","cellFormatters","upperCaseFormatter","Spinner"],"mappings":"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"}