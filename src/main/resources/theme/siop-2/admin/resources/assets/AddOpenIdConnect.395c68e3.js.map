{"version":3,"file":"AddOpenIdConnect.395c68e3.js","sources":["../../src/identity-providers/add/OpenIdConnectSettings.tsx","../../src/identity-providers/add/AddOpenIdConnect.tsx"],"sourcesContent":["import { FormGroup, Title } from \"@patternfly/react-core\";\nimport { useFormContext } from \"react-hook-form\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { JsonFileUpload } from \"../../components/json-file-upload/JsonFileUpload\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { addTrailingSlash } from \"../../util\";\nimport { getAuthorizationHeaders } from \"../../utils/getAuthorizationHeaders\";\nimport { DiscoveryEndpointField } from \"../component/DiscoveryEndpointField\";\nimport { DiscoverySettings } from \"./DiscoverySettings\";\n\nexport const OpenIdConnectSettings = () => {\n  const { t } = useTranslation(\"identity-providers\");\n  const id = \"oidc\";\n\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const {\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext();\n\n  const setupForm = (result: any) => {\n    Object.keys(result).map((k) => setValue(`config.${k}`, result[k]));\n  };\n\n  const fileUpload = async (obj?: object) => {\n    clearErrors(\"discoveryError\");\n    if (!obj) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"providerId\", id);\n    formData.append(\"file\", new Blob([JSON.stringify(obj)]));\n\n    try {\n      const response = await fetch(\n        `${addTrailingSlash(\n          adminClient.baseUrl\n        )}admin/realms/${realm}/identity-provider/import-config`,\n        {\n          method: \"POST\",\n          body: formData,\n          headers: getAuthorizationHeaders(await adminClient.getAccessToken()),\n        }\n      );\n      if (response.ok) {\n        const result = await response.json();\n        setupForm(result);\n      } else {\n        setError(\"discoveryError\", {\n          type: \"manual\",\n          message: response.statusText,\n        });\n      }\n    } catch (error) {\n      setError(\"discoveryError\", {\n        type: \"manual\",\n        message: (error as Error).message,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Title headingLevel=\"h4\" size=\"xl\" className=\"kc-form-panel__title\">\n        {t(\"oidcSettings\")}\n      </Title>\n\n      <DiscoveryEndpointField\n        id=\"oidc\"\n        fileUpload={\n          <FormGroup\n            label={t(\"importConfig\")}\n            fieldId=\"kc-import-config\"\n            labelIcon={\n              <HelpItem\n                helpText=\"identity-providers-help:importConfig\"\n                fieldLabelId=\"identity-providers:importConfig\"\n              />\n            }\n            validated={errors.discoveryError ? \"error\" : \"default\"}\n            helperTextInvalid={errors.discoveryError?.message}\n          >\n            <JsonFileUpload\n              id=\"kc-import-config\"\n              helpText=\"identity=providers-help:jsonFileUpload\"\n              hideDefaultPreview\n              unWrap\n              validated={errors.discoveryError ? \"error\" : \"default\"}\n              onChange={(value) => fileUpload(value)}\n            />\n          </FormGroup>\n        }\n      >\n        {(readonly) => <DiscoverySettings readOnly={readonly} />}\n      </DiscoveryEndpointField>\n    </>\n  );\n};\n","import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { OIDCAuthentication } from \"./OIDCAuthentication\";\nimport { OIDCGeneralSettings } from \"./OIDCGeneralSettings\";\nimport { OpenIdConnectSettings } from \"./OpenIdConnectSettings\";\n\ntype DiscoveryIdentity = IdentityProviderRepresentation & {\n  discoveryEndpoint?: string;\n};\n\nexport default function AddOpenIdConnect() {\n  const { t } = useTranslation(\"identity-providers\");\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const isKeycloak = pathname.includes(\"keycloak-oidc\");\n  const id = `${isKeycloak ? \"keycloak-\" : \"\"}oidc`;\n\n  const form = useForm<IdentityProviderRepresentation>({\n    defaultValues: { alias: id },\n  });\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: DiscoveryIdentity) => {\n    delete provider.discoveryEndpoint;\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId: id,\n      });\n      addAlert(t(\"createSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId: id,\n          alias: provider.alias!,\n          tab: \"settings\",\n        })\n      );\n    } catch (error) {\n      addError(\"identity-providers:createError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\n          isKeycloak ? \"addKeycloakOpenIdProvider\" : \"addOpenIdProvider\"\n        )}\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            role=\"manage-identity-providers\"\n            isHorizontal\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <OIDCGeneralSettings id={id} />\n            <OpenIdConnectSettings />\n            <OIDCAuthentication />\n            <ActionGroup>\n              <Button\n                isDisabled={!isDirty}\n                variant=\"primary\"\n                type=\"submit\"\n                data-testid=\"createProvider\"\n              >\n                {t(\"common:add\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                data-testid=\"cancel\"\n                component={(props) => (\n                  <Link {...props} to={toIdentityProviders({ realm })} />\n                )}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["OpenIdConnectSettings","t","useTranslation","id","adminClient","useAdminClient","realm","useRealm","setValue","setError","clearErrors","formState","errors","useFormContext","setupForm","result","keys","map","k","fileUpload","obj","formData","FormData","append","Blob","JSON","stringify","response","fetch","addTrailingSlash","baseUrl","method","body","headers","getAuthorizationHeaders","getAccessToken","ok","json","type","message","statusText","error","_Fragment","_jsx","Title","DiscoveryEndpointField","FormGroup","HelpItem","discoveryError","JsonFileUpload","value","readonly","DiscoverySettings","AddOpenIdConnect","navigate","useNavigate","pathname","useLocation","isKeycloak","includes","form","useForm","defaultValues","alias","handleSubmit","isDirty","addAlert","addError","useAlerts","onSubmit","provider","discoveryEndpoint","identityProviders","create","providerId","AlertVariant","success","toIdentityProvider","tab","ViewHeader","PageSection","FormProvider","FormAccess","OIDCGeneralSettings","OIDCAuthentication","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"orCAaO,MAAMA,EAAwB,IAAM,CACnC,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAC3CC,EAAK,OAEL,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,MAAAA,GAAUC,EAAU,EACtB,CACJC,SAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,UAAW,CAAEC,OAAAA,CAAO,GAClBC,EAAgB,EAEdC,EAAaC,GAAgB,CAC1BC,OAAAA,KAAKD,CAAM,EAAEE,IAAKC,GAAMV,EAAU,UAASU,IAAKH,EAAOG,EAAE,CAAC,CAAA,EAG7DC,EAAa,MAAOC,GAAiB,CAEzC,GADAV,EAAY,gBAAgB,EACxB,CAACU,EACH,OAGIC,MAAAA,EAAW,IAAIC,SACZC,EAAAA,OAAO,aAAcpB,CAAE,EACvBoB,EAAAA,OAAO,OAAQ,IAAIC,KAAK,CAACC,KAAKC,UAAUN,CAAG,CAAC,CAAC,CAAC,EAEnD,GAAA,CACIO,MAAAA,EAAW,MAAMC,MACpB,GAAEC,EACDzB,EAAY0B,OAAO,iBACJxB,oCACjB,CACEyB,OAAQ,OACRC,KAAMX,EACNY,QAASC,EAAwB,MAAM9B,EAAY+B,gBAAgB,CAAA,CACpE,EAEH,GAAIR,EAASS,GAAI,CACTrB,MAAAA,EAAS,MAAMY,EAASU,OAC9BvB,EAAUC,CAAM,CAAA,MAEhBN,EAAS,iBAAkB,CACzB6B,KAAM,SACNC,QAASZ,EAASa,UAAAA,CACnB,QAEIC,GACPhC,EAAS,iBAAkB,CACzB6B,KAAM,SACNC,QAAUE,EAAgBF,OAAAA,CAC3B,CACH,CAAA,EAGF,SACEG,EAAA,CAAA,SAAA,CACEC,EAACC,EAAK,CAAC,aAAa,KAAK,KAAK,KAAK,UAAU,uBAAsB,SAChE3C,EAAE,cAAc,CAAA,CACX,EAER0C,EAACE,EAAsB,CACrB,GAAG,OACH,aACGC,EAAS,CACR,MAAO7C,EAAE,cAAc,EACvB,QAAQ,mBACR,YACG8C,EAAQ,CACP,SAAS,uCACT,aAAa,iCAAA,CAEhB,EACD,UAAWnC,EAAOoC,eAAiB,QAAU,UAC7C,kBAAmBpC,EAAOoC,gBAAgBT,QAAQ,WAEjDU,EAAc,CACb,GAAG,mBACH,SAAS,yCACT,mBAAkB,GAClB,OAAM,GACN,UAAWrC,EAAOoC,eAAiB,QAAU,UAC7C,SAAqB7B,GAAAA,EAAW+B,CAAK,CAAA,CAAE,CAAA,CAG5C,EAAA,SAEcC,GAAAR,EAACS,EAAiB,CAAC,SAAUD,CAAAA,CAAS,CAAA,CAC9B,CAAA,CAAA,CACxB,CAEP,EC9EA,SAAwBE,IAAmB,CACnC,KAAA,CAAEpD,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAC3CoD,EAAWC,IACX,CAAEC,SAAAA,GAAaC,EAAa,EAC5BC,EAAaF,EAASG,SAAS,eAAe,EAC9CxD,EAAM,GAAEuD,EAAa,YAAc,SAEnCE,EAAOC,EAAwC,CACnDC,cAAe,CAAEC,MAAO5D,CAAG,CAAA,CAC5B,EACK,CACJ6D,aAAAA,EACArD,UAAW,CAAEsD,QAAAA,CAAQ,CACnBL,EAAAA,EAEE,CAAExD,YAAAA,GAAgBC,EAAgB,EAClC,CAAE6D,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EACpC,CAAE9D,MAAAA,GAAUC,EAAU,EAEtB8D,EAAW,MAAOC,GAAgC,CACtD,OAAOA,EAASC,kBACZ,GAAA,CACInE,MAAAA,EAAYoE,kBAAkBC,OAAO,CACzC,GAAGH,EACHI,WAAYvE,CAAAA,CACb,EACD+D,EAASjE,EAAE,eAAe,EAAG0E,EAAaC,OAAO,EACjDtB,EACEuB,EAAmB,CACjBvE,MAAAA,EACAoE,WAAYvE,EACZ4D,MAAOO,EAASP,MAChBe,IAAK,UACN,CAAA,CAAC,QAEGrC,GACP0B,EAAS,iCAAkC1B,CAAK,CAClD,CAAA,EAGF,SACEC,EAAA,CAAA,SAAA,CACEC,EAACoC,EAAU,CACT,SAAU9E,EACRyD,EAAa,4BAA8B,mBAAmB,CAAA,CAEhE,EACFf,EAACqC,EAAW,CAAC,QAAQ,QAAO,WACzBC,EAAY,CAAA,GAAKrB,EAAI,WACnBsB,EAAU,CACT,KAAK,4BACL,aAAY,GACZ,SAAUlB,EAAaK,CAAQ,EAAE,SAAA,CAEjC1B,EAACwC,EAAmB,CAAC,GAAAhF,CAAA,CAAU,EAC9BwC,EAAA3C,EAAwB,EAAA,EACzB2C,EAACyC,EAAkB,CAAA,CAAA,IAClBC,EAAW,CAAA,SAAA,CACV1C,EAAC2C,EAAM,CACL,WAAY,CAACrB,EACb,QAAQ,UACR,KAAK,SACL,cAAY,iBAAgB,SAE3BhE,EAAE,YAAY,CAAA,CACR,EACT0C,EAAC2C,EAAM,CACL,QAAQ,OACR,cAAY,SACZ,UACEC,GAAA5C,EAAC6C,EAAI,CAAA,GAAKD,EAAO,GAAIE,EAAoB,CAAEnF,MAAAA,CAAAA,CAAO,CAAA,CAClD,EAAA,SAEDL,EAAE,eAAe,CAAA,CACX,CAAA,CAAA,CACG,CAAA,CAAA,CAAA,CAAA,CACH,CAAA,CAEH,CAAA,CAAA,CACb,CAEP"}