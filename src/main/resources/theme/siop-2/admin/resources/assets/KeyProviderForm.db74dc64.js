import{u as S,C as E,F as V}from"./index.esm.68aaf060.js";import{u as g,h as d,F as q,j as e,P as w,az as O,aA as R,g as j,cD as p,aZ as D,aw as u,ac as H,q as f,aX as v}from"./index.2ecf13ca.js";import{D as k}from"./DynamicComponents.16b222ec.js";import{F as z}from"./FormAccess.7ed5d8eb.js";import{H as h}from"./HelpItem.49be9c4e.js";import{K as G}from"./KeycloakTextInput.97e36976.js";import{V as L}from"./ViewHeader.67577dd4.js";import{u as y}from"./useParams.921239aa.js";import{a as I,A as N}from"./FormGroup.24d2e56a.js";import"./ClientSelect.95a4ec0e.js";import"./Select.5d6f6214.js";import"./check.51c67984.js";import"./star-icon.648ddb2a.js";import"./FileUpload.005327fa.js";import"./CodeEditor.0b7c4c70.js";import"./copy-icon.06155c15.js";import"./EmptyStateBody.25bf6e38.js";import"./EmptyStateSecondaryActions.3ed74a6a.js";import"./GroupPickerDialog.38947607.js";import"./ListEmptyState.94d606ed.js";import"./TableToolbar.f167c244.js";import"./plus-circle-icon.f1969120.js";import"./DataListItemRow.7402b99a.js";import"./data-list.f7ff2ea7.js";import"./grip-vertical-icon.6efe1939.js";import"./Modal.2c72168d.js";import"./ActionListItem.c90af00f.js";import"./FlexItem.2ee8dfc9.js";import"./minus-circle-icon.e9e185f2.js";import"./MultiLineInput.7867bd1a.js";import"./PasswordInput.4caf2dff.js";import"./useToggle.97c716af.js";import"./AddRoleMappingModal.c7175fba.js";import"./KeycloakDataTable.5c9a6c7c.js";import"./Td.ff2a9f66.js";import"./Checkbox.56efba4a.js";import"./useLocaleSort.377bcdf5.js";import"./resource.09062762.js";import"./joinPath.69b856b1.js";import"./filter-icon.f568e30b.js";import"./ConfirmDialog.b43fd344.js";import"./KeycloakTextArea.2947a089.js";import"./GridItem.a22d8cac.js";import"./Text.441b2f8e.js";const Y=({providerType:i,onClose:o})=>{const{t}=g("realm-settings"),{id:a}=y(),{adminClient:s}=O(),{addAlert:c,addError:P}=R(),b=j().componentTypes?.[p]??[],l=S({mode:"onChange"}),{register:F,control:A,handleSubmit:T,formState:{errors:C},reset:x}=l,K=async r=>{r.config&&Object.entries(r.config).forEach(([m,n])=>r.config[m]=Array.isArray(n)?n:[n]);try{a?(await s.components.update({id:a},{...r,providerType:p}),c(t("saveProviderSuccess"),v.success)):(await s.components.create({...r,providerId:i,providerType:p,config:{...r.config,priority:["0"]}}),c(t("saveProviderSuccess"),v.success),o?.())}catch(m){P("realm-settings:saveProviderError",m)}};return D(async()=>{if(a)return await s.components.findOne({id:a})},r=>{r&&x({...r})},[]),d(z,{isHorizontal:!0,role:"manage-realm",onSubmit:T(K),children:[a&&e(I,{label:t("providerId"),labelIcon:e(h,{helpText:"client-scopes-help:mapperName",fieldLabelId:"providerId"}),fieldId:"providerId",isRequired:!0,children:e(G,{id:"providerId","data-testid":"providerId-input",isReadOnly:!0,...F("id")})}),e(I,{label:t("common:name"),labelIcon:e(h,{helpText:"client-scopes-help:mapperName",fieldLabelId:"name"}),fieldId:"name",isRequired:!0,validated:C.name?u.error:u.default,helperTextInvalid:t("common:required"),children:e(E,{name:"name",control:A,rules:{required:!0},defaultValue:i,render:({field:r})=>e(H,{id:"name",value:r.value,onChange:r.onChange,"data-testid":"name-input"})})}),e(V,{...l,children:e(k,{properties:b.find(r=>r.id===i)?.properties||[]})}),d(N,{children:[e(f,{"data-testid":"add-provider-button",variant:"primary",type:"submit",children:t("common:save")}),e(f,{onClick:()=>o?.(),variant:"link",children:t("common:cancel")})]})]})};function jr(){const{t:i}=g("realm-settings"),o=y();return d(q,{children:[e(L,{titleKey:i("editProvider"),subKey:o.providerType}),e(w,{variant:"light",children:e(Y,{...o})})]})}export{Y as KeyProviderForm,jr as default};
//# sourceMappingURL=KeyProviderForm.db74dc64.js.map
