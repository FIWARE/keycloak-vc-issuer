{"version":3,"file":"ScopeDetails.a11dede0.js","sources":["../../src/clients/authorization/ScopeDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { useParams } from \"../../utils/useParams\";\nimport useToggle from \"../../utils/useToggle\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport type { ScopeDetailsParams } from \"../routes/Scope\";\nimport { DeleteScopeDialog } from \"./DeleteScopeDialog\";\n\ntype FormFields = Omit<ScopeRepresentation, \"resources\">;\n\nexport default function ScopeDetails() {\n  const { t } = useTranslation(\"clients\");\n  const { id, scopeId, realm } = useParams<ScopeDetailsParams>();\n  const navigate = useNavigate();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [deleteDialog, toggleDeleteDialog] = useToggle();\n  const [scope, setScope] = useState<ScopeRepresentation>();\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormFields>({\n    mode: \"onChange\",\n  });\n\n  useFetch(\n    async () => {\n      if (scopeId) {\n        const scope = await adminClient.clients.getAuthorizationScope({\n          id,\n          scopeId,\n        });\n        if (!scope) {\n          throw new Error(t(\"common:notFound\"));\n        }\n        return scope;\n      }\n    },\n    (scope) => {\n      setScope(scope);\n      reset({ ...scope });\n    },\n    []\n  );\n\n  const onSubmit = async (scope: ScopeRepresentation) => {\n    try {\n      if (scopeId) {\n        await adminClient.clients.updateAuthorizationScope(\n          { id, scopeId },\n          scope\n        );\n        setScope(scope);\n      } else {\n        await adminClient.clients.createAuthorizationScope(\n          { id },\n          {\n            name: scope.name!,\n            displayName: scope.displayName,\n            iconUri: scope.iconUri,\n          }\n        );\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"scopes\" }));\n      }\n      addAlert(\n        t((scopeId ? \"update\" : \"create\") + \"ScopeSuccess\"),\n        AlertVariant.success\n      );\n    } catch (error) {\n      addError(\"clients:scopeSaveError\", error);\n    }\n  };\n\n  return (\n    <>\n      <DeleteScopeDialog\n        clientId={id}\n        open={deleteDialog}\n        toggleDialog={toggleDeleteDialog}\n        selectedScope={scope}\n        refresh={() =>\n          navigate(toAuthorizationTab({ realm, clientId: id, tab: \"scopes\" }))\n        }\n      />\n      <ViewHeader\n        titleKey={\n          scopeId ? scope?.name! : t(\"clients:createAuthorizationScope\")\n        }\n        dropdownItems={\n          scopeId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"common:delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          role=\"view-clients\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <FormGroup\n            label={t(\"common:name\")}\n            fieldId=\"name\"\n            labelIcon={\n              <HelpItem helpText=\"clients-help:scopeName\" fieldLabelId=\"name\" />\n            }\n            helperTextInvalid={t(\"common:required\")}\n            validated={\n              errors.name ? ValidatedOptions.error : ValidatedOptions.default\n            }\n            isRequired\n          >\n            <KeycloakTextInput\n              id=\"name\"\n              validated={\n                errors.name ? ValidatedOptions.error : ValidatedOptions.default\n              }\n              isRequired\n              {...register(\"name\", { required: true })}\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"displayName\")}\n            fieldId=\"displayName\"\n            labelIcon={\n              <HelpItem\n                helpText=\"clients-help:scopeDisplayName\"\n                fieldLabelId=\"displayName\"\n              />\n            }\n          >\n            <KeycloakTextInput id=\"displayName\" {...register(\"displayName\")} />\n          </FormGroup>\n          <FormGroup\n            label={t(\"iconUri\")}\n            fieldId=\"iconUri\"\n            labelIcon={\n              <HelpItem\n                helpText=\"clients-help:iconUri\"\n                fieldLabelId=\"clients:iconUri\"\n              />\n            }\n          >\n            <KeycloakTextInput id=\"iconUri\" {...register(\"iconUri\")} />\n          </FormGroup>\n          <ActionGroup>\n            <div className=\"pf-u-mt-md\">\n              <Button\n                variant={ButtonVariant.primary}\n                type=\"submit\"\n                data-testid=\"save\"\n              >\n                {t(\"common:save\")}\n              </Button>\n\n              {!scope ? (\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"scopes\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"link\"\n                  data-testid=\"revert\"\n                  onClick={() => reset({ ...scope })}\n                >\n                  {t(\"common:revert\")}\n                </Button>\n              )}\n            </div>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopeDetails","t","useTranslation","id","scopeId","realm","useParams","navigate","useNavigate","adminClient","useAdminClient","addAlert","addError","useAlerts","deleteDialog","toggleDeleteDialog","useToggle","scope","setScope","useState","register","reset","handleSubmit","formState","errors","useForm","mode","useFetch","clients","getAuthorizationScope","Error","onSubmit","updateAuthorizationScope","createAuthorizationScope","name","displayName","iconUri","toAuthorizationTab","clientId","tab","AlertVariant","success","error","_Fragment","_jsx","DeleteScopeDialog","ViewHeader","DropdownItem","undefined","PageSection","FormAccess","FormGroup","HelpItem","ValidatedOptions","default","KeycloakTextInput","required","ActionGroup","Button","ButtonVariant","primary","props","Link"],"mappings":"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"}