{"version":3,"file":"AddSamlConnect.2f99e21f.js","sources":["../../src/identity-providers/add/SamlConnectSettings.tsx","../../src/identity-providers/add/AddSamlConnect.tsx"],"sourcesContent":["import { FormGroup, Title } from \"@patternfly/react-core\";\nimport { useFormContext } from \"react-hook-form\";\n\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\n\nimport { FileUploadForm } from \"../../components/json-file-upload/FileUploadForm\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport environment from \"../../environment\";\nimport { addTrailingSlash } from \"../../util\";\nimport { getAuthorizationHeaders } from \"../../utils/getAuthorizationHeaders\";\nimport { DiscoveryEndpointField } from \"../component/DiscoveryEndpointField\";\nimport { DescriptorSettings } from \"./DescriptorSettings\";\n\ntype FormFields = IdentityProviderRepresentation & {\n  discoveryError: string;\n};\n\nexport const SamlConnectSettings = () => {\n  const { t } = useTranslation(\"identity-providers\");\n  const id = \"saml\";\n\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const {\n    setValue,\n    register,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext<FormFields>();\n\n  const setupForm = (result: IdentityProviderRepresentation) => {\n    Object.entries(result).map(([key, value]) =>\n      setValue(`config.${key}`, value)\n    );\n  };\n\n  const fileUpload = async (xml: string) => {\n    clearErrors(\"discoveryError\");\n    if (!xml) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"providerId\", id);\n    formData.append(\"file\", new Blob([xml]));\n\n    try {\n      const response = await fetch(\n        `${addTrailingSlash(\n          adminClient.baseUrl\n        )}admin/realms/${realm}/identity-provider/import-config`,\n        {\n          method: \"POST\",\n          body: formData,\n          headers: getAuthorizationHeaders(await adminClient.getAccessToken()),\n        }\n      );\n      if (response.ok) {\n        const result = await response.json();\n        setupForm(result);\n      } else {\n        setError(\"discoveryError\", {\n          type: \"manual\",\n          message: response.statusText,\n        });\n      }\n    } catch (error) {\n      setError(\"discoveryError\", {\n        type: \"manual\",\n        message: (error as Error).message,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Title headingLevel=\"h4\" size=\"xl\" className=\"kc-form-panel__title\">\n        {t(\"samlSettings\")}\n      </Title>\n\n      <FormGroup\n        label={t(\"serviceProviderEntityId\")}\n        fieldId=\"kc-service-provider-entity-id\"\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:serviceProviderEntityId\"\n            fieldLabelId=\"identity-providers:serviceProviderEntityId\"\n          />\n        }\n        isRequired\n        helperTextInvalid={t(\"common:required\")}\n        validated={errors.config?.entityId ? \"error\" : \"default\"}\n      >\n        <KeycloakTextInput\n          data-testid=\"serviceProviderEntityId\"\n          id=\"kc-service-provider-entity-id\"\n          validated={errors.config?.entityId ? \"error\" : \"default\"}\n          defaultValue={`${environment.authServerUrl}/realms/${realm}`}\n          {...register(\"config.entityId\", { required: true })}\n        />\n      </FormGroup>\n\n      <DiscoveryEndpointField\n        id=\"saml\"\n        fileUpload={\n          <FormGroup\n            label={t(\"importConfig\")}\n            fieldId=\"kc-import-config\"\n            labelIcon={\n              <HelpItem\n                helpText=\"identity-providers-help:importConfig\"\n                fieldLabelId=\"identity-providers:importConfig\"\n              />\n            }\n            validated={errors.discoveryError ? \"error\" : \"default\"}\n            helperTextInvalid={errors.discoveryError?.message}\n          >\n            <FileUploadForm\n              id=\"kc-import-config\"\n              extension=\".xml\"\n              hideDefaultPreview\n              unWrap\n              validated={errors.discoveryError ? \"error\" : \"default\"}\n              onChange={(value) => fileUpload(value)}\n            />\n          </FormGroup>\n        }\n      >\n        {(readonly) => <DescriptorSettings readOnly={readonly} />}\n      </DiscoveryEndpointField>\n    </>\n  );\n};\n","import {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { SamlConnectSettings } from \"./SamlConnectSettings\";\nimport { SamlGeneralSettings } from \"./SamlGeneralSettings\";\n\ntype DiscoveryIdentityProvider = IdentityProviderRepresentation & {\n  discoveryEndpoint?: string;\n};\n\nexport default function AddSamlConnect() {\n  const { t } = useTranslation(\"identity-providers\");\n  const navigate = useNavigate();\n  const id = \"saml\";\n\n  const form = useForm<DiscoveryIdentityProvider>({\n    defaultValues: { alias: id, config: { allowCreate: \"true\" } },\n  });\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { adminClient } = useAdminClient();\n  const { addAlert } = useAlerts();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: DiscoveryIdentityProvider) => {\n    delete provider.discoveryEndpoint;\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId: id,\n      });\n      addAlert(t(\"createSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId: id,\n          alias: provider.alias!,\n          tab: \"settings\",\n        })\n      );\n    } catch (error: any) {\n      addAlert(\n        t(\"createError\", {\n          error: error.response?.data?.errorMessage || error,\n        }),\n        AlertVariant.danger\n      );\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey={t(\"addSamlProvider\")} />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            role=\"manage-identity-providers\"\n            isHorizontal\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <SamlGeneralSettings id={id} />\n            <SamlConnectSettings />\n            <ActionGroup>\n              <Button\n                isDisabled={!isDirty}\n                variant=\"primary\"\n                type=\"submit\"\n                data-testid=\"createProvider\"\n              >\n                {t(\"common:add\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                data-testid=\"cancel\"\n                component={(props) => (\n                  <Link {...props} to={toIdentityProviders({ realm })} />\n                )}\n              >\n                {t(\"common:cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["SamlConnectSettings","t","useTranslation","id","adminClient","useAdminClient","realm","useRealm","setValue","register","setError","clearErrors","formState","errors","useFormContext","setupForm","result","Object","entries","map","key","value","fileUpload","xml","formData","FormData","append","Blob","response","fetch","addTrailingSlash","baseUrl","method","body","headers","getAuthorizationHeaders","getAccessToken","ok","json","type","message","statusText","error","_Fragment","_jsx","Title","FormGroup","HelpItem","config","entityId","KeycloakTextInput","environment","authServerUrl","required","DiscoveryEndpointField","discoveryError","FileUploadForm","readonly","DescriptorSettings","AddSamlConnect","navigate","useNavigate","form","useForm","defaultValues","alias","allowCreate","handleSubmit","isDirty","addAlert","useAlerts","onSubmit","provider","discoveryEndpoint","identityProviders","create","providerId","AlertVariant","success","toIdentityProvider","tab","data","errorMessage","danger","ViewHeader","PageSection","FormProvider","FormAccess","SamlGeneralSettings","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"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"}