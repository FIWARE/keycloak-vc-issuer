{"version":3,"file":"LdapMapperDetails.cb9975d0.js","sources":["../../src/user-federation/ldap/mappers/LdapMapperDetails.tsx"],"sourcesContent":["import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport type ComponentTypeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentTypeRepresentation\";\nimport { DirectionType } from \"@keycloak/keycloak-admin-client/lib/resources/userStorageProvider\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  Form,\n  FormGroup,\n  PageSection,\n  Select,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../../components/confirm-dialog/ConfirmDialog\";\nimport { DynamicComponents } from \"../../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../../components/help-enabler/HelpItem\";\nimport { KeycloakSpinner } from \"../../../components/keycloak-spinner/KeycloakSpinner\";\nimport { KeycloakTextInput } from \"../../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../../context/auth/AdminClient\";\nimport { useRealm } from \"../../../context/realm-context/RealmContext\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../../util\";\nimport { useParams } from \"../../../utils/useParams\";\nimport { toUserFederationLdap } from \"../../routes/UserFederationLdap\";\nimport { UserFederationLdapMapperParams } from \"../../routes/UserFederationLdapMapper\";\n\nexport default function LdapMapperDetails() {\n  const form = useForm<ComponentRepresentation>();\n  const [mapping, setMapping] = useState<ComponentRepresentation>();\n  const [components, setComponents] = useState<ComponentTypeRepresentation[]>();\n\n  const { adminClient } = useAdminClient();\n  const { id, mapperId } = useParams<UserFederationLdapMapperParams>();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { t } = useTranslation(\"user-federation\");\n  const { addAlert, addError } = useAlerts();\n\n  const [isMapperDropdownOpen, setIsMapperDropdownOpen] = useState(false);\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  useFetch(\n    async () => {\n      const components = await adminClient.components.listSubComponents({\n        id,\n        type: \"org.keycloak.storage.ldap.mappers.LDAPStorageMapper\",\n      });\n      if (mapperId && mapperId !== \"new\") {\n        const fetchedMapper = await adminClient.components.findOne({\n          id: mapperId,\n        });\n        return { components, fetchedMapper };\n      }\n      return { components };\n    },\n    ({ components, fetchedMapper }) => {\n      setMapping(fetchedMapper);\n      setComponents(components);\n      if (mapperId !== \"new\" && !fetchedMapper)\n        throw new Error(t(\"common:notFound\"));\n\n      if (fetchedMapper) setupForm(fetchedMapper);\n    },\n    []\n  );\n\n  const setupForm = (mapper: ComponentRepresentation) => {\n    convertToFormValues(mapper, form.setValue);\n  };\n\n  const save = async (mapper: ComponentRepresentation) => {\n    const component: ComponentRepresentation =\n      convertFormValuesToObject(mapper);\n    const map = {\n      ...component,\n      config: Object.entries(component.config || {}).reduce(\n        (result, [key, value]) => {\n          result[key] = Array.isArray(value) ? value : [value];\n          return result;\n        },\n        {} as Record<string, string | string[]>\n      ),\n    };\n\n    try {\n      if (mapperId === \"new\") {\n        await adminClient.components.create(map);\n        navigate(\n          toUserFederationLdap({ realm, id: mapper.parentId!, tab: \"mappers\" })\n        );\n      } else {\n        await adminClient.components.update({ id: mapperId }, map);\n      }\n      setupForm(map as ComponentRepresentation);\n      addAlert(\n        t(\n          mapperId === \"new\"\n            ? \"common:mappingCreatedSuccess\"\n            : \"common:mappingUpdatedSuccess\"\n        ),\n        AlertVariant.success\n      );\n    } catch (error) {\n      addError(\n        mapperId === \"new\"\n          ? \"common:mappingCreatedError\"\n          : \"common:mappingUpdatedError\",\n        error\n      );\n    }\n  };\n\n  const sync = async (direction: DirectionType) => {\n    try {\n      const result = await adminClient.userStorageProvider.mappersSync({\n        parentId: mapping?.parentId || \"\",\n        id: mapperId,\n        direction,\n      });\n      addAlert(\n        t(\"syncLDAPGroupsSuccessful\", {\n          result: result.status,\n        })\n      );\n    } catch (error) {\n      addError(\"user-federation:syncLDAPGroupsError\", error);\n    }\n    refresh();\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"common:deleteMappingTitle\",\n    messageKey: \"common:deleteMappingConfirm\",\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.components.del({\n          id: mapping!.id!,\n        });\n        addAlert(t(\"common:mappingDeletedSuccess\"), AlertVariant.success);\n        navigate(toUserFederationLdap({ id, realm, tab: \"mappers\" }));\n      } catch (error) {\n        addError(\"common:mappingDeletedError\", error);\n      }\n    },\n  });\n\n  const mapperType = useWatch({\n    control: form.control,\n    name: \"providerId\",\n  });\n\n  if (!components) {\n    return <KeycloakSpinner />;\n  }\n\n  const isNew = mapperId === \"new\";\n  const mapper = components.find((c) => c.id === mapperType);\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        key={key}\n        titleKey={mapping ? mapping.name! : t(\"common:createNewMapper\")}\n        dropdownItems={\n          isNew\n            ? undefined\n            : [\n                <DropdownItem key=\"delete\" onClick={toggleDeleteDialog}>\n                  {t(\"common:delete\")}\n                </DropdownItem>,\n                mapper?.metadata.fedToKeycloakSyncSupported && (\n                  <DropdownItem\n                    key=\"fedSync\"\n                    onClick={() => sync(\"fedToKeycloak\")}\n                  >\n                    {t(\"syncLDAPGroupsToKeycloak\")}\n                  </DropdownItem>\n                ),\n                mapper?.metadata.keycloakToFedSyncSupported && (\n                  <DropdownItem\n                    key=\"ldapSync\"\n                    onClick={() => {\n                      sync(\"keycloakToFed\");\n                    }}\n                  >\n                    {t(\"syncKeycloakGroupsToLDAP\")}\n                  </DropdownItem>\n                ),\n              ]\n        }\n      />\n      <PageSection variant=\"light\" isFilled>\n        <FormAccess role=\"manage-realm\" isHorizontal>\n          {!isNew && (\n            <FormGroup label={t(\"common:id\")} fieldId=\"kc-ldap-mapper-id\">\n              <KeycloakTextInput\n                isDisabled\n                id=\"kc-ldap-mapper-id\"\n                data-testid=\"ldap-mapper-id\"\n                {...form.register(\"id\")}\n              />\n            </FormGroup>\n          )}\n          <FormGroup\n            label={t(\"common:name\")}\n            labelIcon={\n              <HelpItem\n                helpText=\"user-federation-help:nameHelp\"\n                fieldLabelId=\"name\"\n              />\n            }\n            fieldId=\"kc-ldap-mapper-name\"\n            isRequired\n          >\n            <KeycloakTextInput\n              isDisabled={!isNew}\n              isRequired\n              id=\"kc-ldap-mapper-name\"\n              data-testid=\"ldap-mapper-name\"\n              validated={\n                form.formState.errors.name\n                  ? ValidatedOptions.error\n                  : ValidatedOptions.default\n              }\n              {...form.register(\"name\", { required: true })}\n            />\n            <KeycloakTextInput\n              hidden\n              defaultValue={isNew ? id : mapping ? mapping.parentId : \"\"}\n              id=\"kc-ldap-parentId\"\n              data-testid=\"ldap-mapper-parentId\"\n              {...form.register(\"parentId\")}\n            />\n            <KeycloakTextInput\n              hidden\n              defaultValue=\"org.keycloak.storage.ldap.mappers.LDAPStorageMapper\"\n              id=\"kc-ldap-provider-type\"\n              data-testid=\"ldap-mapper-provider-type\"\n              {...form.register(\"providerType\")}\n            />\n          </FormGroup>\n          {!isNew ? (\n            <FormGroup\n              label={t(\"common:mapperType\")}\n              labelIcon={\n                <HelpItem\n                  helpText={\n                    mapper?.helpText\n                      ? mapper.helpText\n                      : t(\"user-federation-help:mapperTypeHelp\")\n                  }\n                  fieldLabelId=\"mapperType\"\n                />\n              }\n              fieldId=\"kc-ldap-mapper-type\"\n              isRequired\n            >\n              <KeycloakTextInput\n                isDisabled={!isNew}\n                isRequired\n                id=\"kc-ldap-mapper-type\"\n                data-testid=\"ldap-mapper-type-fld\"\n                {...form.register(\"providerId\")}\n              />\n            </FormGroup>\n          ) : (\n            <FormGroup\n              label={t(\"common:mapperType\")}\n              labelIcon={\n                <HelpItem\n                  helpText={\n                    mapper?.helpText\n                      ? mapper.helpText\n                      : t(\"user-federation-help:mapperTypeHelp\")\n                  }\n                  fieldLabelId=\"mapperType\"\n                />\n              }\n              fieldId=\"kc-providerId\"\n              isRequired\n            >\n              <Controller\n                name=\"providerId\"\n                defaultValue=\"\"\n                control={form.control}\n                data-testid=\"ldap-mapper-type-select\"\n                render={({ field }) => (\n                  <Select\n                    toggleId=\"kc-providerId\"\n                    required\n                    onToggle={() =>\n                      setIsMapperDropdownOpen(!isMapperDropdownOpen)\n                    }\n                    isOpen={isMapperDropdownOpen}\n                    onSelect={(_, value) => {\n                      field.onChange(value as string);\n                      setIsMapperDropdownOpen(false);\n                    }}\n                    selections={field.value}\n                    variant={SelectVariant.typeahead}\n                  >\n                    {components.map((c) => (\n                      <SelectOption key={c.id} value={c.id} />\n                    ))}\n                  </Select>\n                )}\n              ></Controller>\n            </FormGroup>\n          )}\n          <FormProvider {...form}>\n            {!!mapperType && (\n              <DynamicComponents properties={mapper?.properties!} />\n            )}\n          </FormProvider>\n        </FormAccess>\n\n        <Form onSubmit={form.handleSubmit(() => save(form.getValues()))}>\n          <ActionGroup>\n            <Button\n              isDisabled={!form.formState.isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"ldap-mapper-save\"\n            >\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              onClick={() =>\n                isNew\n                  ? navigate(-1)\n                  : navigate(\n                      `/${realm}/user-federation/ldap/${\n                        mapping!.parentId\n                      }/mappers`\n                    )\n              }\n              data-testid=\"ldap-mapper-cancel\"\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </Form>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["LdapMapperDetails","form","useForm","mapping","setMapping","useState","components","setComponents","adminClient","useAdminClient","id","mapperId","useParams","navigate","useNavigate","realm","useRealm","t","useTranslation","addAlert","addError","useAlerts","isMapperDropdownOpen","setIsMapperDropdownOpen","key","setKey","refresh","useFetch","listSubComponents","type","fetchedMapper","findOne","Error","setupForm","mapper","setValue","save","component","convertFormValuesToObject","map","config","Object","entries","reduce","result","value","Array","isArray","create","toUserFederationLdap","parentId","tab","update","AlertVariant","success","error","sync","direction","userStorageProvider","mappersSync","status","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","titleKey","messageKey","continueButtonLabel","continueButtonVariant","ButtonVariant","danger","onConfirm","del","mapperType","useWatch","control","name","_jsx","KeycloakSpinner","isNew","find","c","_Fragment","ViewHeader","undefined","DropdownItem","metadata","fedToKeycloakSyncSupported","keycloakToFedSyncSupported","_jsxs","PageSection","FormAccess","FormGroup","KeycloakTextInput","register","HelpItem","formState","errors","ValidatedOptions","default","required","helpText","Controller","field","Select","_","onChange","SelectVariant","typeahead","SelectOption","FormProvider","DynamicComponents","properties","Form","handleSubmit","getValues","ActionGroup","Button","isDirty"],"mappings":"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"}