{"version":3,"file":"DedicatedScopes.a2d28c1e.js","sources":["../../src/clients/scopes/DecicatedScope.tsx","../../src/clients/scopes/DedicatedScopes.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  AlertVariant,\n  Divider,\n  FormGroup,\n  PageSection,\n  Switch,\n} from \"@patternfly/react-core\";\n\nimport type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { RoleMapping, Row } from \"../../components/role-mapping/RoleMapping\";\nimport type { RoleMappingPayload } from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { useAccess } from \"../../context/access/Access\";\n\ntype DedicatedScopeProps = {\n  client: ClientRepresentation;\n};\n\nexport const DedicatedScope = ({\n  client: initialClient,\n}: DedicatedScopeProps) => {\n  const { t } = useTranslation(\"clients\");\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [client, setClient] = useState<ClientRepresentation>(initialClient);\n\n  const { hasAccess } = useAccess();\n  const isManager = hasAccess(\"manage-clients\") || client.access?.manage;\n\n  const assignRoles = async (rows: Row[]) => {\n    try {\n      const realmRoles = rows\n        .filter((row) => row.client === undefined)\n        .map((row) => row.role as RoleMappingPayload)\n        .flat();\n      await Promise.all([\n        adminClient.clients.addRealmScopeMappings(\n          {\n            id: client.id!,\n          },\n          realmRoles\n        ),\n        ...rows\n          .filter((row) => row.client !== undefined)\n          .map((row) =>\n            adminClient.clients.addClientScopeMappings(\n              {\n                id: client.id!,\n                client: row.client!.id!,\n              },\n              [row.role as RoleMappingPayload]\n            )\n          ),\n      ]);\n\n      addAlert(t(\"clientScopeSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"clients:clientScopeError\", error);\n    }\n  };\n\n  const update = async () => {\n    const newClient = { ...client, fullScopeAllowed: !client.fullScopeAllowed };\n    try {\n      await adminClient.clients.update({ id: client.id! }, newClient);\n      addAlert(t(\"clientScopeSuccess\"), AlertVariant.success);\n      setClient(newClient);\n    } catch (error) {\n      addError(\"clients:clientScopeError\", error);\n    }\n  };\n\n  return (\n    <PageSection>\n      <FormAccess\n        role=\"manage-clients\"\n        fineGrainedAccess={client.access?.manage}\n        isHorizontal\n      >\n        <FormGroup\n          hasNoPaddingTop\n          label={t(\"fullScopeAllowed\")}\n          labelIcon={\n            <HelpItem\n              helpText=\"clients-help:fullScopeAllowed\"\n              fieldLabelId=\"clients:fullScopeAllowed\"\n            />\n          }\n          fieldId=\"fullScopeAllowed\"\n        >\n          <Switch\n            id=\"fullScopeAllowed\"\n            label={t(\"common:on\")}\n            labelOff={t(\"common:off\")}\n            isChecked={client.fullScopeAllowed}\n            onChange={update}\n            aria-label={t(\"fullScopeAllowed\")}\n          />\n        </FormGroup>\n      </FormAccess>\n      {!client.fullScopeAllowed && (\n        <>\n          <Divider />\n          <RoleMapping\n            name={client.clientId!}\n            id={client.id!}\n            type=\"clients\"\n            save={assignRoles}\n            isManager={isManager}\n          />\n        </>\n      )}\n    </PageSection>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ProtocolMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/protocolMapperRepresentation\";\nimport type { ProtocolMapperTypeRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/serverInfoRepesentation\";\nimport {\n  AlertVariant,\n  PageSection,\n  Tab,\n  TabTitleText,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { MapperList } from \"../../client-scopes/details/MapperList\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../../components/routable-tabs/RoutableTabs\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { useParams } from \"../../utils/useParams\";\nimport {\n  DedicatedScopeDetailsParams,\n  DedicatedScopeTab,\n  toDedicatedScope,\n} from \"../routes/DedicatedScopeDetails\";\nimport { toMapper } from \"../routes/Mapper\";\nimport { DedicatedScope } from \"./DecicatedScope\";\n\nexport default function DedicatedScopes() {\n  const { t } = useTranslation(\"clients\");\n  const navigate = useNavigate();\n  const { realm, clientId } = useParams<DedicatedScopeDetailsParams>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [client, setClient] = useState<ClientRepresentation>();\n\n  useFetch(() => adminClient.clients.findOne({ id: clientId }), setClient, []);\n\n  const useTab = (tab: DedicatedScopeTab) =>\n    useRoutableTab(toDedicatedScope({ realm, clientId, tab }));\n\n  const mappersTab = useTab(\"mappers\");\n  const scopeTab = useTab(\"scope\");\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  const addMappers = async (\n    mappers: ProtocolMapperTypeRepresentation | ProtocolMapperRepresentation[]\n  ): Promise<void> => {\n    if (!Array.isArray(mappers)) {\n      const mapper = mappers as ProtocolMapperTypeRepresentation;\n      navigate(\n        toMapper({\n          realm,\n          id: client.id!,\n          mapperId: mapper.id!,\n        })\n      );\n    } else {\n      try {\n        await adminClient.clients.addMultipleProtocolMappers(\n          { id: client.id! },\n          mappers as ProtocolMapperRepresentation[]\n        );\n        setClient(await adminClient.clients.findOne({ id: client.id! }));\n        addAlert(t(\"common:mappingCreatedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"common:mappingCreatedError\", error);\n      }\n    }\n  };\n\n  const onDeleteMapper = async (mapper: ProtocolMapperRepresentation) => {\n    try {\n      await adminClient.clients.delProtocolMapper({\n        id: client.id!,\n        mapperId: mapper.id!,\n      });\n      setClient({\n        ...client,\n        protocolMappers: client.protocolMappers?.filter(\n          (m) => m.id !== mapper.id\n        ),\n      });\n      addAlert(t(\"common:mappingDeletedSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"common:mappingDeletedError\", error);\n    }\n    return true;\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={client.clientId!}\n        subKey=\"clients-help:dedicatedScopeExplain\"\n        divider={false}\n      />\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <RoutableTabs\n          isBox\n          mountOnEnter\n          defaultLocation={toDedicatedScope({\n            realm,\n            clientId,\n            tab: \"mappers\",\n          })}\n        >\n          <Tab\n            title={<TabTitleText>{t(\"mappers\")}</TabTitleText>}\n            data-testid=\"mappersTab\"\n            {...mappersTab}\n          >\n            <MapperList\n              model={client}\n              onAdd={addMappers}\n              onDelete={onDeleteMapper}\n              detailLink={(mapperId) =>\n                toMapper({ realm, id: client.id!, mapperId })\n              }\n            />\n          </Tab>\n          <Tab\n            title={<TabTitleText>{t(\"scope\")}</TabTitleText>}\n            data-testid=\"scopeTab\"\n            {...scopeTab}\n          >\n            <DedicatedScope client={client} />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["DedicatedScope","client","initialClient","t","useTranslation","adminClient","useAdminClient","addAlert","addError","useAlerts","setClient","useState","hasAccess","useAccess","isManager","access","manage","assignRoles","rows","realmRoles","filter","row","undefined","map","role","flat","Promise","all","clients","addRealmScopeMappings","id","addClientScopeMappings","AlertVariant","success","error","update","newClient","fullScopeAllowed","PageSection","_jsx","FormAccess","FormGroup","HelpItem","Switch","_Fragment","Divider","RoleMapping","clientId","DedicatedScopes","navigate","useNavigate","realm","useParams","useFetch","findOne","useTab","tab","useRoutableTab","toDedicatedScope","mappersTab","scopeTab","KeycloakSpinner","addMappers","mappers","Array","isArray","addMultipleProtocolMappers","mapper","toMapper","mapperId","onDeleteMapper","delProtocolMapper","protocolMappers","m","ViewHeader","RoutableTabs","Tab","TabTitleText","MapperList"],"mappings":"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"}