{"version":3,"file":"AttributesGroupDetails.10794461.js","sources":["../../src/realm-settings/user-profile/AttributesGroupForm.tsx","../../src/realm-settings/user-profile/AttributesGroupDetails.tsx"],"sourcesContent":["import type { UserProfileGroup } from \"@keycloak/keycloak-admin-client/lib/defs/userProfileConfig\";\nimport {\n  ActionGroup,\n  Button,\n  FormGroup,\n  PageSection,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useEffect, useMemo } from \"react\";\nimport { FormProvider, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport type { EditAttributesGroupParams } from \"../routes/EditAttributesGroup\";\nimport { toUserProfile } from \"../routes/UserProfile\";\nimport { useUserProfile } from \"./UserProfileContext\";\n\nimport \"../realm-settings-section.css\";\n\nfunction parseAnnotations(input: Record<string, unknown>): KeyValueType[] {\n  return Object.entries(input).reduce((p, [key, value]) => {\n    if (typeof value === \"string\") {\n      return [...p, { key, value }];\n    } else {\n      return [...p];\n    }\n  }, [] as KeyValueType[]);\n}\n\nfunction transformAnnotations(input: KeyValueType[]): Record<string, unknown> {\n  return Object.fromEntries(\n    input\n      .filter((annotation) => annotation.key.length > 0)\n      .map((annotation) => [annotation.key, annotation.value] as const)\n  );\n}\n\ntype FormFields = Required<Omit<UserProfileGroup, \"annotations\">> & {\n  annotations: KeyValueType[];\n};\n\nconst defaultValues: FormFields = {\n  annotations: [{ key: \"\", value: \"\" }],\n  displayDescription: \"\",\n  displayHeader: \"\",\n  name: \"\",\n};\n\nexport default function AttributesGroupForm() {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const { config, save } = useUserProfile();\n  const navigate = useNavigate();\n  const params = useParams<EditAttributesGroupParams>();\n  const form = useForm<FormFields>({ defaultValues });\n\n  const matchingGroup = useMemo(\n    () => config?.groups?.find(({ name }) => name === params.name),\n    [config?.groups]\n  );\n\n  useEffect(() => {\n    if (!matchingGroup) {\n      return;\n    }\n\n    const annotations = matchingGroup.annotations\n      ? parseAnnotations(matchingGroup.annotations)\n      : [];\n\n    form.reset({ ...defaultValues, ...matchingGroup, annotations });\n  }, [matchingGroup]);\n\n  const onSubmit: SubmitHandler<FormFields> = async (values) => {\n    if (!config) {\n      return;\n    }\n\n    const groups = [...(config.groups ?? [])];\n    const updateAt = matchingGroup ? groups.indexOf(matchingGroup) : -1;\n    const updatedGroup: UserProfileGroup = {\n      ...values,\n      annotations: transformAnnotations(values.annotations),\n    };\n\n    if (updateAt === -1) {\n      groups.push(updatedGroup);\n    } else {\n      groups[updateAt] = updatedGroup;\n    }\n\n    const success = await save({ ...config, groups });\n\n    if (success) {\n      navigate(toUserProfile({ realm, tab: \"attributes-group\" }));\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={\n          matchingGroup\n            ? \"realm-settings:editGroupText\"\n            : \"realm-settings:createGroupText\"\n        }\n        divider\n      />\n      <PageSection variant=\"light\" onSubmit={form.handleSubmit(onSubmit)}>\n        <FormAccess isHorizontal role=\"manage-realm\">\n          <FormGroup\n            label={t(\"realm-settings:nameField\")}\n            fieldId=\"kc-name\"\n            isRequired\n            helperTextInvalid={t(\"common:required\")}\n            validated={form.formState.errors.name ? \"error\" : \"default\"}\n            labelIcon={\n              <HelpItem\n                helpText=\"realm-settings:nameHint\"\n                fieldLabelId=\"realm-settings:nameField\"\n              />\n            }\n          >\n            <KeycloakTextInput\n              id=\"kc-name\"\n              isReadOnly={!!matchingGroup}\n              {...form.register(\"name\", { required: true })}\n            />\n            {!!matchingGroup && (\n              <input type=\"hidden\" {...form.register(\"name\")} />\n            )}\n          </FormGroup>\n          <FormGroup\n            label={t(\"realm-settings:displayHeaderField\")}\n            fieldId=\"kc-display-header\"\n            labelIcon={\n              <HelpItem\n                helpText=\"realm-settings:displayHeaderHint\"\n                fieldLabelId=\"realm-settings:displayHeaderField\"\n              />\n            }\n          >\n            <KeycloakTextInput\n              id=\"kc-display-header\"\n              {...form.register(\"displayHeader\")}\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"realm-settings:displayDescriptionField\")}\n            fieldId=\"kc-display-description\"\n            labelIcon={\n              <HelpItem\n                helpText=\"realm-settings:displayDescriptionHint\"\n                fieldLabelId=\"realm-settings:displayDescriptionField\"\n              />\n            }\n          >\n            <KeycloakTextInput\n              id=\"kc-display-description\"\n              {...form.register(\"displayDescription\")}\n            />\n          </FormGroup>\n          <TextContent>\n            <Text component=\"h2\">{t(\"realm-settings:annotationsText\")}</Text>\n          </TextContent>\n          <FormGroup\n            label={t(\"realm-settings:annotationsText\")}\n            fieldId=\"kc-annotations\"\n          >\n            <FormProvider {...form}>\n              <KeyValueInput name=\"annotations\" />\n            </FormProvider>\n          </FormGroup>\n          <ActionGroup>\n            <Button variant=\"primary\" type=\"submit\">\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              component={(props) => (\n                <Link\n                  {...props}\n                  to={toUserProfile({ realm, tab: \"attributes-group\" })}\n                />\n              )}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n","import AttributesGroupForm from \"./AttributesGroupForm\";\nimport { UserProfileProvider } from \"./UserProfileContext\";\n\nconst AttributesGroupDetails = () => (\n  <UserProfileProvider>\n    <AttributesGroupForm />\n  </UserProfileProvider>\n);\n\nexport default AttributesGroupDetails;\n"],"names":["parseAnnotations","input","Object","entries","reduce","p","key","value","transformAnnotations","fromEntries","filter","annotation","length","map","defaultValues","annotations","displayDescription","displayHeader","name","AttributesGroupForm","t","useTranslation","realm","useRealm","config","save","useUserProfile","navigate","useNavigate","params","useParams","form","useForm","matchingGroup","useMemo","groups","find","useEffect","reset","onSubmit","values","updateAt","indexOf","updatedGroup","push","toUserProfile","tab","_Fragment","_jsx","ViewHeader","PageSection","handleSubmit","FormAccess","_jsxs","FormGroup","formState","errors","HelpItem","KeycloakTextInput","register","required","TextContent","Text","FormProvider","KeyValueInput","ActionGroup","Button","props","Link","AttributesGroupDetails","UserProfileProvider"],"mappings":"4yBA2BA,SAASA,EAAiBC,EAAgD,CACjEC,OAAAA,OAAOC,QAAQF,CAAK,EAAEG,OAAO,CAACC,EAAG,CAACC,EAAKC,CAAK,IAC7C,OAAOA,GAAU,SACZ,CAAC,GAAGF,EAAG,CAAEC,IAAAA,EAAKC,MAAAA,CAAAA,CAAO,EAErB,CAAC,GAAGF,CAAC,EAEb,CAAqB,CAAA,CAC1B,CAEA,SAASG,EAAqBP,EAAgD,CAC5E,OAAOC,OAAOO,YACZR,EACGS,OAAuBC,GAAAA,EAAWL,IAAIM,OAAS,CAAC,EAChDC,OAAoB,CAACF,EAAWL,IAAKK,EAAWJ,KAAK,EAAW,CAEvE,CAMA,MAAMO,EAA4B,CAChCC,YAAa,CAAC,CAAET,IAAK,GAAIC,MAAO,EAAA,CAAI,EACpCS,mBAAoB,GACpBC,cAAe,GACfC,KAAM,EACR,EAEA,SAAwBC,GAAsB,CACtC,KAAA,CAAEC,GAAMC,EAAgB,EACxB,CAAEC,MAAAA,GAAUC,EAAU,EACtB,CAAEC,OAAAA,EAAQC,KAAAA,GAASC,EAAgB,EACnCC,EAAWC,IACXC,EAASC,IACTC,EAAOC,EAAoB,CAAElB,cAAAA,CAAAA,CAAe,EAE5CmB,EAAgBC,EAAAA,QAAAA,QACpB,IAAMV,GAAQW,QAAQC,KAAK,CAAC,CAAElB,KAAAA,CAAAA,IAAWA,IAASW,EAAOX,IAAI,EAC7D,CAACM,GAAQW,MAAM,CAAC,EAGlBE,EAAAA,QAAAA,UAAU,IAAM,CACd,GAAI,CAACJ,EACH,OAGF,MAAMlB,EAAckB,EAAclB,YAC9Bf,EAAiBiC,EAAclB,WAAW,EAC1C,GAEJgB,EAAKO,MAAM,CAAE,GAAGxB,EAAe,GAAGmB,EAAelB,YAAAA,CAAAA,CAAa,CAAA,EAC7D,CAACkB,CAAa,CAAC,EAEZM,MAAAA,EAAsC,MAAOC,GAAW,CAC5D,GAAI,CAAChB,EACH,OAGF,MAAMW,EAAS,CAAC,GAAIX,EAAOW,QAAU,CAAG,CAAA,EAClCM,EAAWR,EAAgBE,EAAOO,QAAQT,CAAa,EAAI,GAC3DU,EAAiC,CACrC,GAAGH,EACHzB,YAAaP,EAAqBgC,EAAOzB,WAAW,CAAA,EAGlD0B,IAAa,GACfN,EAAOS,KAAKD,CAAY,EAExBR,EAAOM,GAAYE,EAGL,MAAMlB,EAAK,CAAE,GAAGD,EAAQW,OAAAA,CAAAA,CAAQ,GAG9CR,EAASkB,EAAc,CAAEvB,MAAAA,EAAOwB,IAAK,kBAAoB,CAAA,CAAC,CAC5D,EAGF,SACEC,EAAA,CAAA,SAAA,CACEC,EAACC,EAAU,CACT,SACEhB,EACI,+BACA,iCAEN,QAAO,EAAA,CACP,EACFe,EAACE,EAAW,CAAC,QAAQ,QAAQ,SAAUnB,EAAKoB,aAAaZ,CAAQ,EAAE,WAChEa,EAAU,CAAC,aAAY,GAAC,KAAK,eAAc,SAAA,CAC1CC,EAACC,EAAS,CACR,MAAOlC,EAAE,0BAA0B,EACnC,QAAQ,UACR,WAAU,GACV,kBAAmBA,EAAE,iBAAiB,EACtC,UAAWW,EAAKwB,UAAUC,OAAOtC,KAAO,QAAU,UAClD,YACGuC,EAAQ,CACP,SAAS,0BACT,aAAa,0BAAA,CAEhB,EAAA,SAAA,CAEDT,EAACU,EAAiB,CAChB,GAAG,UACH,WAAY,CAAC,CAACzB,EAAc,GACxBF,EAAK4B,SAAS,OAAQ,CAAEC,SAAU,EAAA,CAAM,CAAC,CAAA,EAE9C,CAAC,CAAC3B,KACD,QAAA,CAAO,KAAK,SAAQ,GAAKF,EAAK4B,SAAS,MAAM,CAAA,CAC9C,CAAA,CAAA,CACS,EACZX,EAACM,EAAS,CACR,MAAOlC,EAAE,mCAAmC,EAC5C,QAAQ,oBACR,YACGqC,EAAQ,CACP,SAAS,mCACT,aAAa,mCAAA,CAEhB,EAAA,WAEAC,EAAiB,CAChB,GAAG,oBAAmB,GAClB3B,EAAK4B,SAAS,eAAe,CAAA,CAAC,CAAA,CAE1B,EACZX,EAACM,EAAS,CACR,MAAOlC,EAAE,wCAAwC,EACjD,QAAQ,yBACR,YACGqC,EAAQ,CACP,SAAS,wCACT,aAAa,wCAAA,CAEhB,EAAA,WAEAC,EAAiB,CAChB,GAAG,yBAAwB,GACvB3B,EAAK4B,SAAS,oBAAoB,CAAA,CAAC,CAAA,CAE/B,EACZX,EAACa,EAAW,CAAA,WACTC,EAAI,CAAC,UAAU,KAAI,SAAE1C,EAAE,gCAAgC,CAAA,CAAC,CAAA,CAC7C,EACd4B,EAACM,EAAS,CACR,MAAOlC,EAAE,gCAAgC,EACzC,QAAQ,iBAAgB,WAEvB2C,EAAY,CAAA,GAAKhC,EAAI,WACnBiC,EAAa,CAAC,KAAK,aAAA,CAAa,CAAA,CAAG,CAAA,CAE5B,EACZX,EAACY,EAAW,CAAA,SAAA,CACVjB,EAACkB,EAAM,CAAC,QAAQ,UAAU,KAAK,SAAQ,SACpC9C,EAAE,aAAa,CAAA,CACT,EACT4B,EAACkB,EAAM,CACL,QAAQ,OACR,UACEC,GAAAnB,EAACoB,EAAI,CAAA,GACCD,EACJ,GAAItB,EAAc,CAAEvB,MAAAA,EAAOwB,IAAK,kBAAA,CAAoB,CAAA,CAEtD,EAAA,SAED1B,EAAE,eAAe,CAAA,CACX,CAAA,CAAA,CACG,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACb,CAEP,CCtMMiD,MAAAA,GAAyB,IAC7BrB,EAACsB,EAAmB,CAAA,SAClBtB,EAAC7B,EAAmB,EAAA,CAAG,CAE1B"}