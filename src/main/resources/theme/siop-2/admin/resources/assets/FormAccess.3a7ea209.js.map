{"version":3,"file":"FormAccess.3a7ea209.js","sources":["../../../../node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","../../../../node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","../../../../node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","../../../../node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","../../../../node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","../../../../node_modules/@patternfly/react-styles/css/layouts/Stack/stack.mjs","../../../../node_modules/@patternfly/react-core/dist/esm/layouts/Stack/Stack.js","../../../../node_modules/@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js","../../src/components/form-access/FormAccess.tsx"],"sourcesContent":["import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"clipboardCopy\": \"pf-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-c-clipboard-copy__toggle-icon\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, removeFindDomNode = false } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\", \"removeFindDomNode\"]);\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden, removeFindDomNode: removeFindDomNode },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, id: id, \"aria-labelledby\": `${id} ${textId}` }, props),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": `${id} ${contentId}`, \"aria-expanded\": isExpanded }, props), isExpanded ? React.createElement(AngleDownIcon, { \"aria-hidden\": \"true\" }) : React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverPosition } from '../Popover';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nexport class ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                this.updateText(this.props.children);\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState(prevState => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (text) => {\n            this.setState({ text });\n            this.props.onChange(text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            switchDelay, \n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe, removeFindDomNode } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"switchDelay\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\", \"removeFindDomNode\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: this.expandContent, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, { isReadOnly: isReadOnly || this.state.expanded, onChange: this.updateText, value: this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }), removeFindDomNode: removeFindDomNode }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateText }, this.state.text))))))));\n        };\n        this.state = {\n            text: Array.isArray(this.props.children)\n                ? this.props.children.join('')\n                : this.props.children,\n            expanded: this.props.isExpanded,\n            copied: false\n        };\n        if (this.props.switchDelay !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('ClipboardCopy: switchDelay prop has been deprecated. ' +\n                'The tooltip message will switch back to the hover tip as soon as the tooltip is hidden.');\n        }\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: PopoverPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true,\n    removeFindDomNode: false\n};\n//# sourceMappingURL=ClipboardCopy.js.map","import './stack.css';\nexport default {\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"stack\": \"pf-l-stack\",\n  \"stackItem\": \"pf-l-stack__item\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport const Stack = (_a) => {\n    var { hasGutter = false, className = '', children = null, component = 'div' } = _a, props = __rest(_a, [\"hasGutter\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(styles.stack, hasGutter && styles.modifiers.gutter, className) }), children));\n};\nStack.displayName = 'Stack';\n//# sourceMappingURL=Stack.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport const StackItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.stackItem, isFilled && styles.modifiers.fill, className) }), children));\n};\nStackItem.displayName = 'StackItem';\n//# sourceMappingURL=StackItem.js.map","import type { AccessType } from \"@keycloak/keycloak-admin-client/lib/defs/whoAmIRepresentation\";\nimport {\n  ActionGroup,\n  ClipboardCopy,\n  Form,\n  FormGroup,\n  FormProps,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  TextArea,\n} from \"@patternfly/react-core\";\nimport {\n  Children,\n  cloneElement,\n  isValidElement,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from \"react\";\nimport { Controller } from \"react-hook-form\";\n\nimport { useAccess } from \"../../context/access/Access\";\n\nexport type FormAccessProps = FormProps & {\n  /**\n   * One of the AccessType's that the user needs to have to view this form. Also see {@link useAccess}.\n   * @type {AccessType}\n   */\n  role: AccessType;\n\n  /**\n   * An override property if fine grained access has been setup for this form.\n   * @type {boolean}\n   */\n  fineGrainedAccess?: boolean;\n\n  /**\n   * Set unWrap when you don't want this component to wrap your \"children\" in a {@link Form} component.\n   * @type {boolean}\n   */\n  unWrap?: boolean;\n\n  /**\n   * Overwrite the fineGrainedAccess and make form regardless of access rights.\n   */\n  isReadOnly?: boolean;\n};\n\n/**\n * Use this in place of a patternfly Form component and add the `role` and `fineGrainedAccess` properties.\n * @param {FormAccessProps} param0 - all properties of Form + role and fineGrainedAccess\n */\nexport const FormAccess = ({\n  children,\n  role,\n  fineGrainedAccess = false,\n  isReadOnly = false,\n  unWrap = false,\n  ...rest\n}: PropsWithChildren<FormAccessProps>) => {\n  const { hasAccess } = useAccess();\n\n  const recursiveCloneChildren = (\n    children: ReactNode,\n    newProps: any\n  ): ReactNode => {\n    return Children.map(children, (child) => {\n      if (!isValidElement(child)) {\n        return child;\n      }\n\n      if (child.props) {\n        const element = child as ReactElement;\n        if (child.type === Controller) {\n          return cloneElement(child, {\n            ...element.props,\n            render: (props: any) => {\n              const renderElement = element.props.render(props);\n              return cloneElement(renderElement, {\n                ...renderElement.props,\n                ...newProps,\n              });\n            },\n          });\n        }\n        const children = recursiveCloneChildren(\n          element.props.children,\n          newProps\n        );\n        if (child.type === TextArea) {\n          return cloneElement(child, {\n            readOnly: newProps.isDisabled,\n            children,\n          } as any);\n        }\n\n        return cloneElement(\n          child,\n          child.type === FormGroup ||\n            child.type === GridItem ||\n            child.type === Grid ||\n            child.type === ActionGroup ||\n            child.type === ClipboardCopy ||\n            child.type === Stack ||\n            child.type === StackItem\n            ? { children }\n            : { ...newProps, children }\n        );\n      }\n      return child;\n    });\n  };\n\n  const isDisabled = isReadOnly || (!hasAccess(role) && !fineGrainedAccess);\n\n  return (\n    <>\n      {!unWrap && (\n        <Form {...rest} className={\"keycloak__form \" + (rest.className || \"\")}>\n          {recursiveCloneChildren(children, isDisabled ? { isDisabled } : {})}\n        </Form>\n      )}\n      {unWrap &&\n        recursiveCloneChildren(children, isDisabled ? { isDisabled } : {})}\n    </>\n  );\n};\n"],"names":["styles$1","ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","onTooltipHidden","removeFindDomNode","props","__rest","_jsx","Tooltip","Button","Object","assign","type","CopyIcon","displayName","ClipboardCopyToggle","contentId","isExpanded","AngleDownIcon","AngleRightIcon","ClipboardCopyExpanded","React","constructor","render","className","onChange","isReadOnly","isCode","suppressContentEditableWarning","css","styles","clipboardCopyExpandableContent","onInput","e","target","innerText","contentEditable","defaultProps","clipboardCopyFunc","event","text","navigator","clipboard","writeText","toString","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","updateText","componentWillUnmount","window","clearTimeout","expandContent","_event","setState","expanded","switchDelay","isBlock","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","textIdPrefix","toggleIdPrefix","contentIdPrefix","_jsxs","clipboardCopy","modifiers","inline","block","state","getOUIAProps","GenerateId","_Fragment","clipboardCopyText","code","clipboardCopyActions","clipboardCopyActionsItem","copied","clipboardCopyGroup","TextInput","Array","isArray","join","undefined","console","warn","PopoverPosition","top","Stack","hasGutter","component","stack","gutter","StackItem","isFilled","stackItem","fill","FormAccess","role","fineGrainedAccess","unWrap","rest","hasAccess","useAccess","recursiveCloneChildren","newProps","Children","map","child","isValidElement","element","Controller","cloneElement","renderElement","TextArea","readOnly","isDisabled","FormGroup","GridItem","Grid","ActionGroup","Form"],"mappings":"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"}