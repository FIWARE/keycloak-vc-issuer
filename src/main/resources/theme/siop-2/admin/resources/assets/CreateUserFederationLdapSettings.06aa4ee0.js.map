{"version":3,"file":"CreateUserFederationLdapSettings.06aa4ee0.js","sources":["../../src/user-federation/CreateUserFederationLdapSettings.tsx"],"sourcesContent":["import { AlertVariant, PageSection } from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useAdminClient } from \"../context/auth/AdminClient\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { toUserFederation } from \"./routes/UserFederation\";\nimport { ExtendedHeader } from \"./shared/ExtendedHeader\";\nimport {\n  LdapComponentRepresentation,\n  serializeFormData,\n  UserFederationLdapForm,\n} from \"./UserFederationLdapForm\";\n\nexport default function CreateUserFederationLdapSettings() {\n  const { t } = useTranslation(\"user-federation\");\n  const form = useForm<LdapComponentRepresentation>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const onSubmit = async (formData: LdapComponentRepresentation) => {\n    try {\n      await adminClient.components.create(serializeFormData(formData));\n      addAlert(t(\"createSuccess\"), AlertVariant.success);\n      navigate(toUserFederation({ realm }));\n    } catch (error) {\n      addError(\"user-federation:createError\", error);\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      <ExtendedHeader\n        provider=\"LDAP\"\n        noDivider\n        save={() => form.handleSubmit(onSubmit)()}\n      />\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <PageSection variant=\"light\">\n          <UserFederationLdapForm onSubmit={onSubmit} />\n        </PageSection>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["CreateUserFederationLdapSettings","t","useTranslation","form","useForm","mode","navigate","useNavigate","adminClient","useAdminClient","realm","useRealm","addAlert","addError","useAlerts","onSubmit","formData","components","create","serializeFormData","AlertVariant","success","toUserFederation","error","FormProvider","_jsx","ExtendedHeader","handleSubmit","PageSection","UserFederationLdapForm"],"mappings":"2iCAgBA,SAAwBA,IAAmC,CACnD,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,iBAAiB,EACxCC,EAAOC,EAAqC,CAAEC,KAAM,UAAA,CAAY,EAChEC,EAAWC,IACX,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,MAAAA,GAAUC,EAAU,EACtB,CAAEC,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EAEpCC,EAAW,MAAOC,GAA0C,CAC5D,GAAA,CACF,MAAMR,EAAYS,WAAWC,OAAOC,EAAkBH,CAAQ,CAAC,EAC/DJ,EAASX,EAAE,eAAe,EAAGmB,EAAaC,OAAO,EACjDf,EAASgB,EAAiB,CAAEZ,MAAAA,CAAO,CAAA,CAAC,QAC7Ba,GACPV,EAAS,8BAA+BU,CAAK,CAC/C,CAAA,EAGF,SACGC,EAAY,CAAA,GAAKrB,EAAI,SAAA,CACpBsB,EAACC,EAAc,CACb,SAAS,OACT,UAAS,GACT,KAAM,IAAMvB,EAAKwB,aAAaZ,CAAQ,EAAC,CAAA,CACvC,EACFU,EAACG,EAAW,CAAC,QAAQ,QAAQ,UAAU,WAAU,WAC9CA,EAAW,CAAC,QAAQ,QAAO,WACzBC,EAAsB,CAAC,SAAAd,CAAA,CAAmB,CAAA,CAAG,CAAA,CAEpC,CAAA,CAAA,CACD,CAEnB"}