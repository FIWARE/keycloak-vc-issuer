{"version":3,"file":"DeleteScopeDialog.c7d426ad.js","sources":["../../src/clients/authorization/DeleteScopeDialog.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { Alert, AlertVariant } from \"@patternfly/react-core\";\n\nimport type { PermissionScopeRepresentation } from \"./Scopes\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { ConfirmDialogModal } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\n\ntype DeleteScopeDialogProps = {\n  clientId: string;\n  selectedScope:\n    | PermissionScopeRepresentation\n    | ScopeRepresentation\n    | undefined;\n  refresh: () => void;\n  open: boolean;\n  toggleDialog: () => void;\n};\n\nexport const DeleteScopeDialog = ({\n  clientId,\n  selectedScope,\n  refresh,\n  open,\n  toggleDialog,\n}: DeleteScopeDialogProps) => {\n  const { t } = useTranslation(\"clients\");\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  return (\n    <ConfirmDialogModal\n      open={open}\n      toggleDialog={toggleDialog}\n      titleKey=\"clients:deleteScope\"\n      continueButtonLabel=\"clients:confirm\"\n      onConfirm={async () => {\n        try {\n          await adminClient.clients.delAuthorizationScope({\n            id: clientId,\n            scopeId: selectedScope?.id!,\n          });\n          addAlert(t(\"resourceScopeSuccess\"), AlertVariant.success);\n          refresh();\n        } catch (error) {\n          addError(\"clients:resourceScopeError\", error);\n        }\n      }}\n    >\n      {t(\"deleteScopeConfirm\")}\n      {selectedScope &&\n        \"permissions\" in selectedScope &&\n        selectedScope.permissions &&\n        selectedScope.permissions.length > 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteScopeWarning\")}\n            className=\"pf-u-pt-lg\"\n          >\n            <p className=\"pf-u-pt-xs\">\n              {selectedScope.permissions.map((permission) => (\n                <strong key={permission.id} className=\"pf-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n    </ConfirmDialogModal>\n  );\n};\n"],"names":["DeleteScopeDialog","clientId","selectedScope","refresh","open","toggleDialog","t","useTranslation","adminClient","useAdminClient","addAlert","addError","useAlerts","ConfirmDialogModal","clients","delAuthorizationScope","id","scopeId","AlertVariant","success","error","permissions","length","Alert","map","permission","name"],"mappings":"sIAoBO,MAAMA,EAAoB,CAAC,CAChCC,SAAAA,EACAC,cAAAA,EACAC,QAAAA,EACAC,KAAAA,EACAC,aAAAA,CACsB,IAAM,CACtB,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,SAAS,EAChC,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EAE1C,SACGC,EAAkB,CACjB,KAAAT,EACA,aAAAC,EACA,SAAS,sBACT,oBAAoB,kBACpB,UAAW,SAAY,CACjB,GAAA,CACIG,MAAAA,EAAYM,QAAQC,sBAAsB,CAC9CC,GAAIf,EACJgB,QAASf,GAAec,EAAAA,CACzB,EACDN,EAASJ,EAAE,sBAAsB,EAAGY,EAAaC,OAAO,EAC/ChB,UACFiB,GACPT,EAAS,6BAA8BS,CAAK,CAC9C,CACF,EAAE,SAEDd,CAAAA,EAAE,oBAAoB,EACtBJ,GACC,gBAAiBA,GACjBA,EAAcmB,aACdnB,EAAcmB,YAAYC,OAAS,KAChCC,EAAK,CACJ,QAAQ,UACR,SAAQ,GACR,QAAO,GACP,MAAOjB,EAAE,oBAAoB,EAC7B,UAAU,aAAY,WAEtB,IAAA,CAAG,UAAU,aAAY,SACtBJ,EAAcmB,YAAYG,IAAKC,KAC9B,SAAA,CAA4B,UAAU,aAAY,SAC/CA,EAAWC,IAAAA,EADDD,EAAWT,EAAE,CAG3B,CAAA,CAAC,CAAA,CAGP,CAAA,CAAA,CACgB,CAEzB"}