{"version":3,"file":"ResourceDetails.472998f6.js","sources":["../../src/clients/authorization/ScopePicker.tsx","../../src/clients/authorization/ResourceDetails.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\n\nimport type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\nexport const ScopePicker = ({ clientId }: { clientId: string }) => {\n  const { t } = useTranslation(\"clients\");\n  const { control } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n\n  const { adminClient } = useAdminClient();\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search]\n  );\n\n  const renderScopes = (scopes?: ScopeRepresentation[]) =>\n    scopes?.map((option) => (\n      <SelectOption key={option.id} value={option}>\n        {option.name}\n      </SelectOption>\n    ));\n\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem\n          helpText=\"clients-help:scopes\"\n          fieldLabelId=\"clients:scopes\"\n        />\n      }\n      fieldId=\"scopes\"\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId=\"scopes\"\n            variant={SelectVariant.typeaheadMulti}\n            chipGroupProps={{\n              numChips: 3,\n              expandedText: t(\"common:hide\"),\n              collapsedText: t(\"common:showRemaining\"),\n            }}\n            onToggle={setOpen}\n            isOpen={open}\n            selections={field.value.map((o: Scope) => o.name)}\n            onFilter={(_, value) => {\n              setSearch(value);\n              return renderScopes(scopes);\n            }}\n            onSelect={(_, selectedValue) => {\n              const option =\n                typeof selectedValue === \"string\"\n                  ? selectedValue\n                  : (selectedValue as Scope).name;\n              const changedValue = field.value.find(\n                (o: Scope) => o.name === option\n              )\n                ? field.value.filter((item: Scope) => item.name !== option)\n                : [...field.value, selectedValue];\n              field.onChange(changedValue);\n            }}\n            onClear={(event) => {\n              event.stopPropagation();\n              setSearch(\"\");\n              field.onChange([]);\n            }}\n            aria-label={t(\"authorizationScopes\")}\n          >\n            {renderScopes(scopes)}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n  Switch,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport { ResourceDetailsParams, toResourceDetails } from \"../routes/Resource\";\nimport { ScopePicker } from \"./ScopePicker\";\n\nimport \"./resource-details.css\";\n\ntype SubmittedResource = Omit<\n  ResourceRepresentation,\n  \"attributes\" | \"scopes\"\n> & {\n  attributes: KeyValueType[];\n};\n\nexport default function ResourceDetails() {\n  const { t } = useTranslation(\"clients\");\n  const [client, setClient] = useState<ClientRepresentation>();\n  const [resource, setResource] = useState<ResourceRepresentation>();\n\n  const [permissions, setPermission] =\n    useState<ResourceServerRepresentation[]>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const form = useForm<SubmittedResource>({\n    mode: \"onChange\",\n  });\n  const {\n    register,\n    formState: { errors },\n    control,\n    setValue,\n    handleSubmit,\n  } = form;\n\n  const { id, resourceId, realm } = useParams<ResourceDetailsParams>();\n  const navigate = useNavigate();\n\n  const setupForm = (resource: ResourceRepresentation = {}) => {\n    convertToFormValues(resource, setValue);\n  };\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.findOne({ id }),\n        resourceId\n          ? adminClient.clients.getResource({ id, resourceId })\n          : Promise.resolve(undefined),\n        resourceId\n          ? adminClient.clients.listPermissionsByResource({ id, resourceId })\n          : Promise.resolve(undefined),\n      ]),\n    ([client, resource, permissions]) => {\n      if (!client) {\n        throw new Error(t(\"common:notFound\"));\n      }\n      setClient(client);\n      setPermission(permissions);\n      setResource(resource);\n      setupForm(resource);\n    },\n    []\n  );\n\n  const submit = async (submitted: SubmittedResource) => {\n    const resource = convertFormValuesToObject<\n      SubmittedResource,\n      ResourceRepresentation\n    >(submitted);\n\n    try {\n      if (resourceId) {\n        await adminClient.clients.updateResource({ id, resourceId }, resource);\n      } else {\n        const result = await adminClient.clients.createResource(\n          { id },\n          resource\n        );\n        navigate(toResourceDetails({ realm, id, resourceId: result._id! }));\n      }\n      addAlert(\n        t((resourceId ? \"update\" : \"create\") + \"ResourceSuccess\"),\n        AlertVariant.success\n      );\n    } catch (error) {\n      addError(\"clients:resourceSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"clients:deleteResource\",\n    children: (\n      <>\n        {t(\"deleteResourceConfirm\")}\n        {permissions?.length !== 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteResourceWarning\")}\n            className=\"pf-u-pt-lg\"\n          >\n            <p className=\"pf-u-pt-xs\">\n              {permissions?.map((permission) => (\n                <strong key={permission.id} className=\"pf-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n      </>\n    ),\n    continueButtonLabel: \"clients:confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delResource({\n          id,\n          resourceId: resourceId!,\n        });\n        addAlert(t(\"resourceDeletedSuccess\"), AlertVariant.success);\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"resources\" }));\n      } catch (error) {\n        addError(\"clients:resourceDeletedError\", error);\n      }\n    },\n  });\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={resourceId ? resource?.name! : \"clients:createResource\"}\n        dropdownItems={\n          resourceId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"common:delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"view-clients\"\n            className=\"keycloak__resource-details__form\"\n            onSubmit={handleSubmit(submit)}\n          >\n            <FormGroup\n              label={t(\"owner\")}\n              fieldId=\"owner\"\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:owner\"\n                  fieldLabelId=\"clients:owner\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"owner\"\n                value={client.clientId}\n                isReadOnly\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"common:name\")}\n              fieldId=\"name\"\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:resourceName\"\n                  fieldLabelId=\"name\"\n                />\n              }\n              helperTextInvalid={t(\"common:required\")}\n              validated={\n                errors.name ? ValidatedOptions.error : ValidatedOptions.default\n              }\n              isRequired\n            >\n              <KeycloakTextInput\n                id=\"name\"\n                validated={\n                  errors.name\n                    ? ValidatedOptions.error\n                    : ValidatedOptions.default\n                }\n                {...register(\"name\", { required: true })}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"displayName\")}\n              fieldId=\"displayName\"\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:displayName\"\n                  fieldLabelId=\"name\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"displayName\"\n                {...register(\"displayName\")}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"type\")}\n              fieldId=\"type\"\n              labelIcon={\n                <HelpItem helpText=\"clients-help:type\" fieldLabelId=\"type\" />\n              }\n            >\n              <KeycloakTextInput id=\"type\" {...register(\"type\")} />\n            </FormGroup>\n            <FormGroup\n              label={t(\"uris\")}\n              fieldId=\"uris\"\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:uris\"\n                  fieldLabelId=\"clients:uris\"\n                />\n              }\n            >\n              <MultiLineInput\n                name=\"uris\"\n                type=\"url\"\n                aria-label={t(\"uris\")}\n                addButtonLabel=\"clients:addUri\"\n              />\n            </FormGroup>\n            <ScopePicker clientId={id} />\n            <FormGroup\n              label={t(\"iconUri\")}\n              fieldId=\"iconUri\"\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:iconUri\"\n                  fieldLabelId=\"clients:iconUri\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"iconUri\"\n                type=\"url\"\n                {...register(\"icon_uri\")}\n              />\n            </FormGroup>\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"ownerManagedAccess\")}\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:ownerManagedAccess\"\n                  fieldLabelId=\"clients:ownerManagedAccess\"\n                />\n              }\n              fieldId=\"ownerManagedAccess\"\n            >\n              <Controller\n                name=\"ownerManagedAccess\"\n                control={control}\n                defaultValue={false}\n                render={({ field }) => (\n                  <Switch\n                    id=\"ownerManagedAccess\"\n                    label={t(\"common:on\")}\n                    labelOff={t(\"common:off\")}\n                    isChecked={field.value}\n                    onChange={field.onChange}\n                    aria-label={t(\"ownerManagedAccess\")}\n                  />\n                )}\n              />\n            </FormGroup>\n\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"resourceAttribute\")}\n              labelIcon={\n                <HelpItem\n                  helpText=\"clients-help:resourceAttribute\"\n                  fieldLabelId=\"clients:resourceAttribute\"\n                />\n              }\n              fieldId=\"resourceAttribute\"\n            >\n              <KeyValueInput name=\"attributes\" />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"common:save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"resources\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopePicker","clientId","t","useTranslation","control","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","adminClient","useAdminClient","useFetch","params","id","first","max","deep","name","clients","listAllScopes","renderScopes","map","option","SelectOption","FormGroup","HelpItem","Controller","field","Select","SelectVariant","typeaheadMulti","numChips","expandedText","collapsedText","value","o","_","selectedValue","changedValue","find","filter","item","onChange","event","stopPropagation","ResourceDetails","client","setClient","resource","setResource","permissions","setPermission","addAlert","addError","useAlerts","form","useForm","mode","register","formState","errors","setValue","handleSubmit","resourceId","realm","useParams","navigate","useNavigate","setupForm","convertToFormValues","Promise","all","findOne","getResource","resolve","undefined","listPermissionsByResource","Error","submit","submitted","convertFormValuesToObject","updateResource","result","createResource","toResourceDetails","_id","AlertVariant","success","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","titleKey","children","_Fragment","length","_jsx","Alert","permission","continueButtonLabel","onConfirm","delResource","toAuthorizationTab","tab","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","KeycloakTextInput","ValidatedOptions","default","required","MultiLineInput","Switch","KeyValueInput","ActionGroup","Button","ButtonVariant","primary","props","Link","KeycloakSpinner"],"mappings":"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"}