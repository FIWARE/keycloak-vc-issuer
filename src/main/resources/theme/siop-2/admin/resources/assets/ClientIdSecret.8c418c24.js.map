{"version":3,"file":"ClientIdSecret.8c418c24.js","sources":["../../src/identity-providers/component/ClientIdSecret.tsx"],"sourcesContent":["import IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { FormGroup, ValidatedOptions } from \"@patternfly/react-core\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { PasswordInput } from \"../../components/password-input/PasswordInput\";\n\nexport const ClientIdSecret = ({\n  secretRequired = true,\n  create = true,\n}: {\n  secretRequired?: boolean;\n  create?: boolean;\n}) => {\n  const { t } = useTranslation(\"identity-providers\");\n\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext<IdentityProviderRepresentation>();\n\n  return (\n    <>\n      <FormGroup\n        label={t(\"clientId\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:clientId\"\n            fieldLabelId=\"identity-providers:clientId\"\n          />\n        }\n        fieldId=\"kc-client-id\"\n        isRequired\n        validated={\n          errors.config?.clientId\n            ? ValidatedOptions.error\n            : ValidatedOptions.default\n        }\n        helperTextInvalid={t(\"common:required\")}\n      >\n        <KeycloakTextInput\n          isRequired\n          id=\"kc-client-id\"\n          data-testid=\"clientId\"\n          {...register(\"config.clientId\", { required: true })}\n        />\n      </FormGroup>\n      <FormGroup\n        label={t(\"clientSecret\")}\n        labelIcon={\n          <HelpItem\n            helpText=\"identity-providers-help:clientSecret\"\n            fieldLabelId=\"identity-providers:clientSecret\"\n          />\n        }\n        fieldId=\"kc-client-secret\"\n        isRequired={secretRequired}\n        validated={\n          errors.config?.clientSecret\n            ? ValidatedOptions.error\n            : ValidatedOptions.default\n        }\n        helperTextInvalid={t(\"common:required\")}\n      >\n        {create ? (\n          <PasswordInput\n            isRequired={secretRequired}\n            id=\"kc-client-secret\"\n            data-testid=\"clientSecret\"\n            {...register(\"config.clientSecret\", { required: secretRequired })}\n          />\n        ) : (\n          <KeycloakTextInput\n            isRequired={secretRequired}\n            type=\"password\"\n            id=\"kc-client-secret\"\n            data-testid=\"clientSecret\"\n            {...register(\"config.clientSecret\", { required: secretRequired })}\n          />\n        )}\n      </FormGroup>\n    </>\n  );\n};\n"],"names":["ClientIdSecret","secretRequired","create","t","useTranslation","register","formState","errors","useFormContext","_Fragment","_jsx","FormGroup","HelpItem","config","clientId","ValidatedOptions","error","default","KeycloakTextInput","required","clientSecret","PasswordInput"],"mappings":"4SASO,MAAMA,EAAiB,CAAC,CAC7BC,eAAAA,EAAiB,GACjBC,OAAAA,EAAS,EAIX,IAAM,CACE,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAE3C,CACJC,SAAAA,EACAC,UAAW,CAAEC,OAAAA,CAAO,GAClBC,EAAgD,EAEpD,SACEC,EAAA,CAAA,SAAA,CACEC,EAACC,EAAS,CACR,MAAOR,EAAE,UAAU,EACnB,YACGS,EAAQ,CACP,SAAS,mCACT,aAAa,6BAAA,CAEhB,EACD,QAAQ,eACR,WAAU,GACV,UACEL,EAAOM,QAAQC,SACXC,EAAiBC,MACjBD,EAAiBE,QAEvB,kBAAmBd,EAAE,iBAAiB,EAAE,WAEvCe,EAAiB,CAChB,WAAU,GACV,GAAG,eACH,cAAY,WAAU,GAClBb,EAAS,kBAAmB,CAAEc,SAAU,EAAA,CAAM,CAAA,CAAC,CAAA,CAE3C,EACZT,EAACC,EAAS,CACR,MAAOR,EAAE,cAAc,EACvB,YACGS,EAAQ,CACP,SAAS,uCACT,aAAa,iCAAA,CAEhB,EACD,QAAQ,mBACR,WAAYX,EACZ,UACEM,EAAOM,QAAQO,aACXL,EAAiBC,MACjBD,EAAiBE,QAEvB,kBAAmBd,EAAE,iBAAiB,EAAE,SAEvCD,EACCQ,EAACW,EAAa,CACZ,WAAYpB,EACZ,GAAG,mBACH,cAAY,eAAc,GACtBI,EAAS,sBAAuB,CAAEc,SAAUlB,CAAAA,CAAgB,CAAA,CAChE,EAEFS,EAACQ,EAAiB,CAChB,WAAYjB,EACZ,KAAK,WACL,GAAG,mBACH,cAAY,eAAc,GACtBI,EAAS,sBAAuB,CAAEc,SAAUlB,CAAAA,CAAgB,CAAA,CAAC,CAAA,CAG3D,CAAA,CAAA,CACX,CAEP"}