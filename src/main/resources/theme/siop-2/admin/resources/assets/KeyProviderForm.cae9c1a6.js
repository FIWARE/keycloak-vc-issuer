import{u as S,C as E,F as V}from"./index.esm.1e7ace95.js";import{u as g,h as d,F as q,j as e,P as w,az as O,aA as R,g as j,cD as p,aZ as D,aw as u,ac as H,q as f,aX as v}from"./index.7cbfb18a.js";import{D as k}from"./DynamicComponents.7f569784.js";import{F as z}from"./FormAccess.3a7ea209.js";import{H as h}from"./HelpItem.719382e8.js";import{K as G}from"./KeycloakTextInput.9afb01cd.js";import{V as L}from"./ViewHeader.083cd951.js";import{u as y}from"./useParams.3f76335e.js";import{a as I,A as N}from"./FormGroup.60c77f60.js";import"./ClientSelect.2d31aa2e.js";import"./Select.fbe867d5.js";import"./check.51c67984.js";import"./star-icon.a6efdd26.js";import"./FileUpload.c211f5c1.js";import"./CodeEditor.5b99e2f5.js";import"./copy-icon.dbf95270.js";import"./EmptyStateBody.1533f3a6.js";import"./EmptyStateSecondaryActions.511adeb0.js";import"./GroupPickerDialog.174f65c8.js";import"./ListEmptyState.fef0510e.js";import"./TableToolbar.51ae2a5f.js";import"./plus-circle-icon.aa8a939a.js";import"./DataListItemRow.df3ed5f3.js";import"./data-list.f7ff2ea7.js";import"./grip-vertical-icon.7e109111.js";import"./Modal.11970fe7.js";import"./ActionListItem.65cb5d9a.js";import"./FlexItem.ae9c1d3c.js";import"./minus-circle-icon.c093f419.js";import"./MultiLineInput.091fd21a.js";import"./PasswordInput.aa539188.js";import"./useToggle.461e82f2.js";import"./AddRoleMappingModal.c8e6830c.js";import"./KeycloakDataTable.ae870e97.js";import"./Td.1e0c90e7.js";import"./Checkbox.7d63c785.js";import"./useLocaleSort.b8a659bb.js";import"./resource.2cd5a37e.js";import"./joinPath.69b856b1.js";import"./filter-icon.a9b0a5f3.js";import"./ConfirmDialog.4dc691c5.js";import"./KeycloakTextArea.d98120cb.js";import"./GridItem.63e5e367.js";import"./Text.28ece842.js";const Y=({providerType:i,onClose:o})=>{const{t}=g("realm-settings"),{id:a}=y(),{adminClient:s}=O(),{addAlert:c,addError:P}=R(),b=j().componentTypes?.[p]??[],l=S({mode:"onChange"}),{register:F,control:A,handleSubmit:T,formState:{errors:C},reset:x}=l,K=async r=>{r.config&&Object.entries(r.config).forEach(([m,n])=>r.config[m]=Array.isArray(n)?n:[n]);try{a?(await s.components.update({id:a},{...r,providerType:p}),c(t("saveProviderSuccess"),v.success)):(await s.components.create({...r,providerId:i,providerType:p,config:{...r.config,priority:["0"]}}),c(t("saveProviderSuccess"),v.success),o?.())}catch(m){P("realm-settings:saveProviderError",m)}};return D(async()=>{if(a)return await s.components.findOne({id:a})},r=>{r&&x({...r})},[]),d(z,{isHorizontal:!0,role:"manage-realm",onSubmit:T(K),children:[a&&e(I,{label:t("providerId"),labelIcon:e(h,{helpText:"client-scopes-help:mapperName",fieldLabelId:"providerId"}),fieldId:"providerId",isRequired:!0,children:e(G,{id:"providerId","data-testid":"providerId-input",isReadOnly:!0,...F("id")})}),e(I,{label:t("common:name"),labelIcon:e(h,{helpText:"client-scopes-help:mapperName",fieldLabelId:"name"}),fieldId:"name",isRequired:!0,validated:C.name?u.error:u.default,helperTextInvalid:t("common:required"),children:e(E,{name:"name",control:A,rules:{required:!0},defaultValue:i,render:({field:r})=>e(H,{id:"name",value:r.value,onChange:r.onChange,"data-testid":"name-input"})})}),e(V,{...l,children:e(k,{properties:b.find(r=>r.id===i)?.properties||[]})}),d(N,{children:[e(f,{"data-testid":"add-provider-button",variant:"primary",type:"submit",children:t("common:save")}),e(f,{onClick:()=>o?.(),variant:"link",children:t("common:cancel")})]})]})};function jr(){const{t:i}=g("realm-settings"),o=y();return d(q,{children:[e(L,{titleKey:i("editProvider"),subKey:o.providerType}),e(w,{variant:"light",children:e(Y,{...o})})]})}export{Y as KeyProviderForm,jr as default};
//# sourceMappingURL=KeyProviderForm.cae9c1a6.js.map
