{"version":3,"file":"ConfirmDialog.b43fd344.js","sources":["../../src/components/confirm-dialog/ConfirmDialog.tsx"],"sourcesContent":["import { ReactElement, ReactNode, useState } from \"react\";\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const useConfirmDialog = (\n  props: ConfirmDialogProps\n): [() => void, () => ReactElement] => {\n  const [show, setShow] = useState(false);\n\n  function toggleDialog() {\n    setShow((show) => !show);\n  }\n\n  const Dialog = () => (\n    <ConfirmDialogModal\n      key=\"confirmDialog\"\n      {...props}\n      open={show}\n      toggleDialog={toggleDialog}\n    />\n  );\n  return [toggleDialog, Dialog];\n};\n\nexport interface ConfirmDialogModalProps extends ConfirmDialogProps {\n  open: boolean;\n  toggleDialog: () => void;\n}\n\nexport type ConfirmDialogProps = {\n  titleKey: string;\n  messageKey?: string;\n  noCancelButton?: boolean;\n  confirmButtonDisabled?: boolean;\n  cancelButtonLabel?: string;\n  continueButtonLabel?: string;\n  continueButtonVariant?: ButtonVariant;\n  variant?: ModalVariant;\n  onConfirm: () => void;\n  onCancel?: () => void;\n  children?: ReactNode;\n};\n\nexport const ConfirmDialogModal = ({\n  titleKey,\n  messageKey,\n  noCancelButton,\n  cancelButtonLabel,\n  continueButtonLabel,\n  continueButtonVariant,\n  onConfirm,\n  onCancel,\n  children,\n  open = true,\n  variant = ModalVariant.small,\n  toggleDialog,\n  confirmButtonDisabled,\n}: ConfirmDialogModalProps) => {\n  const { t } = useTranslation();\n  return (\n    <Modal\n      title={t(titleKey)}\n      isOpen={open}\n      onClose={toggleDialog}\n      variant={variant}\n      actions={[\n        <Button\n          id=\"modal-confirm\"\n          data-testid=\"confirm\"\n          key=\"confirm\"\n          isDisabled={confirmButtonDisabled}\n          variant={continueButtonVariant || ButtonVariant.primary}\n          onClick={() => {\n            onConfirm();\n            toggleDialog();\n          }}\n        >\n          {t(continueButtonLabel || \"common:continue\")}\n        </Button>,\n        !noCancelButton && (\n          <Button\n            id=\"modal-cancel\"\n            data-testid=\"cancel\"\n            key=\"cancel\"\n            variant={ButtonVariant.link}\n            onClick={() => {\n              if (onCancel) onCancel();\n              toggleDialog();\n            }}\n          >\n            {t(cancelButtonLabel || \"common:cancel\")}\n          </Button>\n        ),\n      ]}\n    >\n      {!messageKey && children}\n      {messageKey && t(messageKey)}\n    </Modal>\n  );\n};\n"],"names":["useConfirmDialog","props","show","setShow","useState","toggleDialog","_jsx","ConfirmDialogModal","titleKey","messageKey","noCancelButton","cancelButtonLabel","continueButtonLabel","continueButtonVariant","onConfirm","onCancel","children","open","variant","ModalVariant","small","confirmButtonDisabled","t","useTranslation","Modal","Button","ButtonVariant","primary","link"],"mappings":"2HASaA,MAAAA,EACXC,GACqC,CACrC,KAAM,CAACC,EAAMC,CAAO,EAAIC,mBAAS,EAAK,EAEtC,SAASC,GAAe,CACbH,EAAAA,GAAS,CAACA,CAAI,CACzB,CAUO,MAAA,CAACG,EARO,IACbC,EAACC,EAAkB,CAAA,GAEbN,EACJ,KAAMC,EACN,aAAAG,GAHI,eAAe,CAMK,CAC9B,EAqBaE,EAAqB,CAAC,CACjCC,SAAAA,EACAC,WAAAA,EACAC,eAAAA,EACAC,kBAAAA,EACAC,oBAAAA,EACAC,sBAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,KAAAA,EAAO,GACPC,QAAAA,EAAUC,EAAaC,MACvBf,aAAAA,EACAgB,sBAAAA,CACuB,IAAM,CACvB,KAAA,CAAEC,EAAAA,GAAMC,EAAgB,EAC9B,SACGC,EAAK,CACJ,MAAOF,EAAEd,CAAQ,EACjB,OAAQS,EACR,QAASZ,EACT,QAAAa,EACA,QAAS,CACPZ,EAACmB,EAAM,CACL,GAAG,gBACH,cAAY,UAEZ,WAAYJ,EACZ,QAASR,GAAyBa,EAAcC,QAChD,QAAS,IAAM,CACFb,IACGT,GAChB,EAAE,SAEDiB,EAAEV,GAAuB,iBAAiB,GARvC,SAAS,EAUf,CAACF,KACEe,EAAM,CACL,GAAG,eACH,cAAY,SAEZ,QAASC,EAAcE,KACvB,QAAS,IAAM,CACTb,GAAoBA,IACVV,GAChB,EAAE,SAEDiB,EAAEX,GAAqB,eAAe,CAAC,EAPpC,QAAQ,CASf,EACD,SAED,CAAA,CAACF,GAAcO,EACfP,GAAca,EAAEb,CAAU,CAAC,CAAA,CACtB,CAEZ"}