{"version":3,"file":"DiscoveryEndpointField.efc7fb86.js","sources":["../../src/identity-providers/component/DiscoveryEndpointField.tsx"],"sourcesContent":["import { FormGroup, Switch } from \"@patternfly/react-core\";\nimport { ReactNode, useEffect, useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"../../components/help-enabler/HelpItem\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport environment from \"../../environment\";\n\ntype DiscoveryEndpointFieldProps = {\n  id: string;\n  fileUpload: ReactNode;\n  children: (readOnly: boolean) => ReactNode;\n};\n\nexport const DiscoveryEndpointField = ({\n  id,\n  fileUpload,\n  children,\n}: DiscoveryEndpointFieldProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n\n  const { adminClient } = useAdminClient();\n\n  const {\n    setValue,\n    register,\n    setError,\n    watch,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext();\n  const discoveryUrl = watch(\"discoveryEndpoint\");\n\n  const [discovery, setDiscovery] = useState(true);\n  const [discovering, setDiscovering] = useState(false);\n  const [discoveryResult, setDiscoveryResult] =\n    useState<Record<string, string>>();\n\n  const setupForm = (result: Record<string, string>) => {\n    Object.keys(result).map((k) => setValue(`config.${k}`, result[k]));\n  };\n\n  useEffect(() => {\n    if (!discoveryUrl) {\n      setDiscovering(false);\n      return;\n    }\n\n    (async () => {\n      clearErrors(\"discoveryError\");\n      try {\n        const result = await adminClient.identityProviders.importFromUrl({\n          providerId: id,\n          fromUrl: discoveryUrl,\n        });\n        setupForm(result);\n        setDiscoveryResult(result);\n      } catch (error) {\n        setError(\"discoveryError\", {\n          type: \"manual\",\n          message: (error as Error).message,\n        });\n      }\n\n      setDiscovering(false);\n    })();\n  }, [discovering]);\n\n  return (\n    <>\n      <FormGroup\n        label={t(\n          id === \"oidc\" ? \"useDiscoveryEndpoint\" : \"useEntityDescriptor\"\n        )}\n        fieldId=\"kc-discovery-endpoint\"\n        labelIcon={\n          <HelpItem\n            helpText={`identity-providers-help:${\n              id === \"oidc\" ? \"useDiscoveryEndpoint\" : \"useEntityDescriptor\"\n            }`}\n            fieldLabelId=\"identity-providers:discoveryEndpoint\"\n          />\n        }\n      >\n        <Switch\n          id=\"kc-discovery-endpoint-switch\"\n          label={t(\"common:on\")}\n          labelOff={t(\"common:off\")}\n          isChecked={discovery}\n          onChange={(checked) => {\n            clearErrors(\"discoveryError\");\n            setDiscovery(checked);\n          }}\n          aria-label={t(\n            id === \"oidc\" ? \"useDiscoveryEndpoint\" : \"useEntityDescriptor\"\n          )}\n        />\n      </FormGroup>\n      {discovery && (\n        <FormGroup\n          label={t(\n            id === \"oidc\" ? \"discoveryEndpoint\" : \"samlEntityDescriptor\"\n          )}\n          fieldId=\"kc-discovery-endpoint\"\n          labelIcon={\n            <HelpItem\n              helpText={`identity-providers-help:${\n                id === \"oidc\" ? \"discoveryEndpoint\" : \"samlEntityDescriptor\"\n              }`}\n              fieldLabelId=\"identity-providers:discoveryEndpoint\"\n            />\n          }\n          validated={\n            errors.discoveryError || errors.discoveryEndpoint\n              ? \"error\"\n              : !discoveryResult\n              ? \"default\"\n              : \"success\"\n          }\n          helperTextInvalid={\n            errors.discoveryEndpoint\n              ? t(\"common:required\")\n              : t(\"noValidMetaDataFound\", {\n                  error: errors.discoveryError?.message,\n                })\n          }\n          isRequired\n        >\n          <KeycloakTextInput\n            type=\"url\"\n            data-testid=\"discoveryEndpoint\"\n            id=\"kc-discovery-endpoint\"\n            placeholder={\n              id === \"oidc\"\n                ? \"https://hostname/auth/realms/master/.well-known/openid-configuration\"\n                : \"\"\n            }\n            validated={\n              errors.discoveryError || errors.discoveryEndpoint\n                ? \"error\"\n                : !discoveryResult\n                ? \"default\"\n                : \"success\"\n            }\n            customIconUrl={\n              discovering\n                ? environment.resourceUrl + \"/discovery-load-indicator.svg\"\n                : \"\"\n            }\n            {...register(\"discoveryEndpoint\", {\n              required: true,\n              onBlur: () => setDiscovering(true),\n            })}\n          />\n        </FormGroup>\n      )}\n      {!discovery && fileUpload}\n      {discovery && !errors.discoveryError && children(true)}\n      {!discovery && children(false)}\n    </>\n  );\n};\n"],"names":["DiscoveryEndpointField","id","fileUpload","children","t","useTranslation","adminClient","useAdminClient","setValue","register","setError","watch","clearErrors","formState","errors","useFormContext","discoveryUrl","discovery","setDiscovery","useState","discovering","setDiscovering","discoveryResult","setDiscoveryResult","setupForm","result","keys","map","k","useEffect","identityProviders","importFromUrl","providerId","fromUrl","error","type","message","_Fragment","_jsx","FormGroup","HelpItem","Switch","checked","discoveryError","discoveryEndpoint","KeycloakTextInput","environment","resourceUrl","required","onBlur"],"mappings":"kRAgBO,MAAMA,EAAyB,CAAC,CACrCC,GAAAA,EACAC,WAAAA,EACAC,SAAAA,CAC2B,IAAM,CAC3B,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAE3C,CAAEC,YAAAA,GAAgBC,EAAgB,EAElC,CACJC,SAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAC,UAAW,CAAEC,OAAAA,CAAO,GAClBC,EAAgB,EACdC,EAAeL,EAAM,mBAAmB,EAExC,CAACM,EAAWC,CAAY,EAAIC,mBAAS,EAAI,EACzC,CAACC,EAAaC,CAAc,EAAIF,mBAAS,EAAK,EAC9C,CAACG,EAAiBC,CAAkB,EACxCJ,EAAkC,QAAA,SAAA,EAE9BK,EAAaC,GAAmC,CAC7CC,OAAAA,KAAKD,CAAM,EAAEE,IAAKC,GAAMpB,EAAU,UAASoB,IAAKH,EAAOG,EAAE,CAAC,CAAA,EAGnEC,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACd,GAAI,CAACb,EAAc,CACjBK,EAAe,EAAK,EACpB,MACF,EAEC,SAAY,CACXT,EAAY,gBAAgB,EACxB,GAAA,CACF,MAAMa,EAAS,MAAMnB,EAAYwB,kBAAkBC,cAAc,CAC/DC,WAAY/B,EACZgC,QAASjB,CAAAA,CACV,EACDQ,EAAUC,CAAM,EAChBF,EAAmBE,CAAM,QAClBS,GACPxB,EAAS,iBAAkB,CACzByB,KAAM,SACNC,QAAUF,EAAgBE,OAAAA,CAC3B,CACH,CAEAf,EAAe,EAAK,CAAA,IAClB,EACH,CAACD,CAAW,CAAC,IAGdiB,EAAA,CAAA,SAAA,CACEC,EAACC,EAAS,CACR,MAAOnC,EACLH,IAAO,OAAS,uBAAyB,qBAAqB,EAEhE,QAAQ,wBACR,YACGuC,EAAQ,CACP,SAAW,2BACTvC,IAAO,OAAS,uBAAyB,wBAE3C,aAAa,sCAAA,CAEhB,EAAA,WAEAwC,EAAM,CACL,GAAG,+BACH,MAAOrC,EAAE,WAAW,EACpB,SAAUA,EAAE,YAAY,EACxB,UAAWa,EACX,SAAuByB,GAAA,CACrB9B,EAAY,gBAAgB,EAC5BM,EAAawB,CAAO,CACtB,EACA,aAAYtC,EACVH,IAAO,OAAS,uBAAyB,qBAAqB,CAAA,CAC9D,CAAA,CACF,EAEHgB,GACCqB,EAACC,EAAS,CACR,MAAOnC,EACLH,IAAO,OAAS,oBAAsB,sBAAsB,EAE9D,QAAQ,wBACR,YACGuC,EAAQ,CACP,SAAW,2BACTvC,IAAO,OAAS,oBAAsB,yBAExC,aAAa,sCAAA,CAEhB,EACD,UACEa,EAAO6B,gBAAkB7B,EAAO8B,kBAC5B,QACCtB,EAED,UADA,UAGN,kBACER,EAAO8B,kBACHxC,EAAE,iBAAiB,EACnBA,EAAE,uBAAwB,CACxB8B,MAAOpB,EAAO6B,gBAAgBP,OAAAA,CAC/B,EAEP,WAAU,GAAA,WAETS,EAAiB,CAChB,KAAK,MACL,cAAY,oBACZ,GAAG,wBACH,YACE5C,IAAO,OACH,uEACA,GAEN,UACEa,EAAO6B,gBAAkB7B,EAAO8B,kBAC5B,QACCtB,EAED,UADA,UAGN,cACEF,EACI0B,EAAYC,YAAc,gCAC1B,GACL,GACGtC,EAAS,oBAAqB,CAChCuC,SAAU,GACVC,OAAQ,IAAM5B,EAAe,EAAI,CAAA,CAClC,CAAA,CAAC,CAGP,CAAA,EACA,CAACJ,GAAaf,EACde,GAAa,CAACH,EAAO6B,gBAAkBxC,EAAS,EAAI,EACpD,CAACc,GAAad,EAAS,EAAK,CAAC,CAAA,CAC7B,CAEP"}