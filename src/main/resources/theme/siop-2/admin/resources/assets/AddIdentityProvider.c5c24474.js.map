{"version":3,"file":"AddIdentityProvider.c5c24474.js","sources":["../../src/identity-providers/add/AddIdentityProvider.tsx"],"sourcesContent":["import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toUpperCase } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { ExtendedFieldsForm } from \"../component/ExtendedFieldsForm\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport type { IdentityProviderCreateParams } from \"../routes/IdentityProviderCreate\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { GeneralSettings } from \"./GeneralSettings\";\n\nexport default function AddIdentityProvider() {\n  const { t } = useTranslation(\"identity-providers\");\n  const { providerId } = useParams<IdentityProviderCreateParams>();\n  const form = useForm<IdentityProviderRepresentation>();\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: IdentityProviderRepresentation) => {\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId,\n        alias: providerId,\n      });\n      addAlert(t(\"createSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId,\n          alias: providerId,\n          tab: \"settings\",\n        })\n      );\n    } catch (error) {\n      addError(\"identity-providers:createError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\"addIdentityProvider\", {\n          provider: toUpperCase(providerId),\n        })}\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <FormProvider {...form}>\n            <GeneralSettings id={providerId} />\n            <ExtendedFieldsForm providerId={providerId} />\n          </FormProvider>\n          <ActionGroup>\n            <Button\n              isDisabled={!isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"createProvider\"\n            >\n              {t(\"common:add\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              data-testid=\"cancel\"\n              component={(props) => (\n                <Link {...props} to={toIdentityProviders({ realm })} />\n              )}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["AddIdentityProvider","t","useTranslation","providerId","useParams","form","useForm","handleSubmit","formState","isDirty","adminClient","useAdminClient","addAlert","addError","useAlerts","navigate","useNavigate","realm","useRealm","onSubmit","provider","identityProviders","create","alias","AlertVariant","success","toIdentityProvider","tab","error","_Fragment","_jsx","ViewHeader","toUpperCase","PageSection","FormAccess","_jsxs","FormProvider","GeneralSettings","ExtendedFieldsForm","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"urBAwBA,SAAwBA,GAAsB,CACtC,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,oBAAoB,EAC3C,CAAEC,WAAAA,GAAeC,EAAyC,EAC1DC,EAAOC,IACP,CACJC,aAAAA,EACAC,UAAW,CAAEC,QAAAA,CAAQ,CACnBJ,EAAAA,EAEE,CAAEK,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EACpCC,EAAWC,IACX,CAAEC,MAAAA,GAAUC,EAAU,EAEtBC,EAAW,MAAOC,GAA6C,CAC/D,GAAA,CACIV,MAAAA,EAAYW,kBAAkBC,OAAO,CACzC,GAAGF,EACHjB,WAAAA,EACAoB,MAAOpB,CAAAA,CACR,EACDS,EAASX,EAAE,eAAe,EAAGuB,EAAaC,OAAO,EACjDV,EACEW,EAAmB,CACjBT,MAAAA,EACAd,WAAAA,EACAoB,MAAOpB,EACPwB,IAAK,UACN,CAAA,CAAC,QAEGC,GACPf,EAAS,iCAAkCe,CAAK,CAClD,CAAA,EAGF,SACEC,EAAA,CAAA,SAAA,CACEC,EAACC,EAAU,CACT,SAAU9B,EAAE,sBAAuB,CACjCmB,SAAUY,EAAY7B,CAAU,CAAA,CACjC,CAAA,CACD,EACF2B,EAACG,EAAW,CAAC,QAAQ,QAAO,WACzBC,EAAU,CACT,KAAK,4BACL,aAAY,GACZ,SAAU3B,EAAaY,CAAQ,EAAE,SAAA,CAEjCgB,EAACC,EAAY,CAAA,GAAK/B,EAAI,SAAA,CACpByB,EAACO,EAAe,CAAC,GAAIlC,CAAAA,CAAc,EACnC2B,EAACQ,EAAkB,CAAC,WAAAnC,CAAA,CAA0B,CAAA,CAAA,CACjC,EACfgC,EAACI,EAAW,CAAA,SAAA,CACVT,EAACU,EAAM,CACL,WAAY,CAAC/B,EACb,QAAQ,UACR,KAAK,SACL,cAAY,iBAAgB,SAE3BR,EAAE,YAAY,CAAA,CACR,EACT6B,EAACU,EAAM,CACL,QAAQ,OACR,cAAY,SACZ,UACEC,GAAAX,EAACY,EAAI,CAAA,GAAKD,EAAO,GAAIE,EAAoB,CAAE1B,MAAAA,CAAAA,CAAO,CAAA,CAClD,EAAA,SAEDhB,EAAE,eAAe,CAAA,CACX,CAAA,CAAA,CACG,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACb,CAEP"}