{"version":3,"file":"NewRealmForm.a7f92685.js","sources":["../../src/realm/add/NewRealmForm.tsx"],"sourcesContent":["import type RealmRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/realmRepresentation\";\nimport {\n  ActionGroup,\n  Button,\n  FormGroup,\n  PageSection,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { JsonFileUpload } from \"../../components/json-file-upload/JsonFileUpload\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealms } from \"../../context/RealmsContext\";\nimport { useWhoAmI } from \"../../context/whoami/WhoAmI\";\nimport { toDashboard } from \"../../dashboard/routes/Dashboard\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\n\nexport default function NewRealmForm() {\n  const { t } = useTranslation(\"realm\");\n  const navigate = useNavigate();\n  const { refresh, whoAmI } = useWhoAmI();\n  const { refresh: refreshRealms } = useRealms();\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const [realm, setRealm] = useState<RealmRepresentation>();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm<RealmRepresentation>({ mode: \"onChange\" });\n\n  const handleFileChange = (obj?: object) => {\n    const defaultRealm = { id: \"\", realm: \"\", enabled: true };\n    convertToFormValues(obj || defaultRealm, setValue);\n    setRealm(obj || defaultRealm);\n  };\n\n  const save = async (fields: RealmRepresentation) => {\n    try {\n      await adminClient.realms.create({\n        ...realm,\n        ...convertFormValuesToObject(fields),\n      });\n      addAlert(t(\"saveRealmSuccess\"));\n\n      refresh();\n      await refreshRealms();\n      navigate(toDashboard({ realm: fields.realm }));\n    } catch (error) {\n      addError(\"realm:saveRealmError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey=\"realm:createRealm\" subKey=\"realm:realmExplain\" />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          onSubmit={handleSubmit(save)}\n          role=\"view-realm\"\n          isReadOnly={!whoAmI.canCreateRealm()}\n        >\n          <JsonFileUpload\n            id=\"kc-realm-filename\"\n            allowEditingUploadedText\n            onChange={handleFileChange}\n          />\n          <FormGroup\n            label={t(\"realmName\")}\n            isRequired\n            fieldId=\"kc-realm-name\"\n            validated={errors.realm ? \"error\" : \"default\"}\n            helperTextInvalid={errors.realm?.message}\n          >\n            <KeycloakTextInput\n              isRequired\n              id=\"kc-realm-name\"\n              validated={errors.realm ? \"error\" : \"default\"}\n              {...register(\"realm\", {\n                required: { value: true, message: t(\"common:required\") },\n                pattern: {\n                  value: /^[a-zA-Z0-9-_]+$/,\n                  message: t(\"invalidRealmName\"),\n                },\n              })}\n            />\n          </FormGroup>\n          <FormGroup label={t(\"enabled\")} fieldId=\"kc-realm-enabled-switch\">\n            <Controller\n              name=\"enabled\"\n              defaultValue={true}\n              control={control}\n              render={({ field }) => (\n                <Switch\n                  id=\"kc-realm-enabled-switch\"\n                  name=\"enabled\"\n                  label={t(\"common:on\")}\n                  labelOff={t(\"common:off\")}\n                  isChecked={field.value}\n                  onChange={field.onChange}\n                  aria-label={t(\"enabled\")}\n                />\n              )}\n            />\n          </FormGroup>\n          <ActionGroup>\n            <Button variant=\"primary\" type=\"submit\">\n              {t(\"common:create\")}\n            </Button>\n            <Button variant=\"link\" onClick={() => navigate(-1)}>\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["NewRealmForm","t","useTranslation","navigate","useNavigate","refresh","whoAmI","useWhoAmI","refreshRealms","useRealms","adminClient","useAdminClient","addAlert","addError","useAlerts","realm","setRealm","useState","register","handleSubmit","control","setValue","formState","errors","useForm","mode","handleFileChange","obj","defaultRealm","id","enabled","_Fragment","_jsx","ViewHeader","PageSection","FormAccess","fields","realms","create","convertFormValuesToObject","toDashboard","error","canCreateRealm","JsonFileUpload","FormGroup","message","KeycloakTextInput","required","value","pattern","Controller","field","Switch","onChange","_jsxs","ActionGroup","Button"],"mappings":"+wBAwBA,SAAwBA,IAAe,CAC/B,KAAA,CAAEC,EAAAA,CAAAA,EAAMC,EAAe,OAAO,EAC9BC,EAAWC,IACX,CAAEC,QAAAA,EAASC,OAAAA,GAAWC,EAAW,EACjC,CAAEF,QAASG,GAAkBC,EAAW,EACxC,CAAEC,YAAAA,GAAgBC,EAAgB,EAClC,CAAEC,SAAAA,EAAUC,SAAAA,GAAaC,EAAW,EACpC,CAACC,EAAOC,CAAQ,EAAIC,EAA+B,QAAA,SAAA,EAEnD,CACJC,SAAAA,EACAC,aAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,UAAW,CAAEC,OAAAA,CAAO,GAClBC,EAA6B,CAAEC,KAAM,UAAA,CAAY,EAE/CC,EAAoBC,GAAiB,CACzC,MAAMC,EAAe,CAAEC,GAAI,GAAId,MAAO,GAAIe,QAAS,EAAA,EAC/BH,EAAAA,GAAOC,EAAcP,CAAQ,EACjDL,EAASW,GAAOC,CAAY,CAAA,EAmB9B,SACEG,EAAA,CAAA,SAAA,CACEC,EAACC,EAAU,CAAC,SAAS,oBAAoB,OAAO,oBAAA,CAAuB,EACvED,EAACE,EAAW,CAAC,QAAQ,QAAO,WACzBC,EAAU,CACT,aAAY,GACZ,SAAUhB,EAtBL,MAAOiB,GAAgC,CAC9C,GAAA,CACI1B,MAAAA,EAAY2B,OAAOC,OAAO,CAC9B,GAAGvB,EACH,GAAGwB,EAA0BH,CAAM,CAAA,CACpC,EACQnC,EAAAA,EAAE,kBAAkB,CAAC,EAErBI,IACT,MAAMG,EAAe,EACrBL,EAASqC,EAAY,CAAEzB,MAAOqB,EAAOrB,KAAO,CAAA,CAAC,QACtC0B,GACP5B,EAAS,uBAAwB4B,CAAK,CACxC,CAAA,CASiC,EAC3B,KAAK,aACL,WAAY,CAACnC,EAAOoC,eAAiB,EAAA,SAAA,CAErCV,EAACW,EAAc,CACb,GAAG,oBACH,yBAAwB,GACxB,SAAUjB,CAAAA,CACV,EACFM,EAACY,EAAS,CACR,MAAO3C,EAAE,WAAW,EACpB,WAAU,GACV,QAAQ,gBACR,UAAWsB,EAAOR,MAAQ,QAAU,UACpC,kBAAmBQ,EAAOR,OAAO8B,QAAQ,WAExCC,EAAiB,CAChB,WAAU,GACV,GAAG,gBACH,UAAWvB,EAAOR,MAAQ,QAAU,UAAU,GAC1CG,EAAS,QAAS,CACpB6B,SAAU,CAAEC,MAAO,GAAMH,QAAS5C,EAAE,iBAAiB,CAAE,EACvDgD,QAAS,CACPD,MAAO,mBACPH,QAAS5C,EAAE,kBAAkB,CAC/B,CAAA,CACD,CAAA,CAAC,CAAA,CAEM,EACZ+B,EAACY,EAAS,CAAC,MAAO3C,EAAE,SAAS,EAAG,QAAQ,0BAAyB,WAC9DiD,EAAU,CACT,KAAK,UACL,aAAc,GACd,QAAA9B,EACA,OAAQ,CAAC,CAAE+B,MAAAA,CAAAA,MACRC,EAAM,CACL,GAAG,0BACH,KAAK,UACL,MAAOnD,EAAE,WAAW,EACpB,SAAUA,EAAE,YAAY,EACxB,UAAWkD,EAAMH,MACjB,SAAUG,EAAME,SAChB,aAAYpD,EAAE,SAAS,CAAA,CAAE,CAAA,CAE3B,CAAA,CAEM,EACZqD,EAACC,EAAW,CAAA,SAAA,CACVvB,EAACwB,EAAM,CAAC,QAAQ,UAAU,KAAK,SAAQ,SACpCvD,EAAE,eAAe,CAAA,CACX,EACT+B,EAACwB,EAAM,CAAC,QAAQ,OAAO,QAAS,IAAMrD,EAAS,EAAE,EAAE,SAChDF,EAAE,eAAe,CAAA,CACX,CAAA,CAAA,CACG,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACb,CAEP"}