{"version":3,"file":"ExpandableSection.0b0d95f4.js","sources":["../../../../node_modules/@patternfly/react-styles/css/components/ExpandableSection/expandable-section.mjs","../../../../node_modules/@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp.js","../../../../node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection.js"],"sourcesContent":["import './expandable-section.css';\nexport default {\n  \"expandableSection\": \"pf-c-expandable-section\",\n  \"expandableSectionContent\": \"pf-c-expandable-section__content\",\n  \"expandableSectionToggle\": \"pf-c-expandable-section__toggle\",\n  \"expandableSectionToggleIcon\": \"pf-c-expandable-section__toggle-icon\",\n  \"expandableSectionToggleText\": \"pf-c-expandable-section__toggle-text\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"detached\": \"pf-m-detached\",\n    \"truncate\": \"pf-m-truncate\",\n    \"limitWidth\": \"pf-m-limit-width\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"indented\": \"pf-m-indented\",\n    \"active\": \"pf-m-active\",\n    \"expandTop\": \"pf-m-expand-top\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","export const c_expandable_section_m_truncate__content_LineClamp = {\n  \"name\": \"--pf-c-expandable-section--m-truncate__content--LineClamp\",\n  \"value\": \"3\",\n  \"var\": \"var(--pf-c-expandable-section--m-truncate__content--LineClamp)\"\n};\nexport default c_expandable_section_m_truncate__content_LineClamp;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ExpandableSection/expandable-section';\nimport { css } from '@patternfly/react-styles';\nimport lineClamp from '@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { debounce } from '../../helpers/util';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var ExpandableSectionVariant;\n(function (ExpandableSectionVariant) {\n    ExpandableSectionVariant[\"default\"] = \"default\";\n    ExpandableSectionVariant[\"truncate\"] = \"truncate\";\n})(ExpandableSectionVariant || (ExpandableSectionVariant = {}));\nconst setLineClamp = (lines, element) => {\n    if (!element || lines < 1) {\n        return;\n    }\n    element.style.setProperty(lineClamp.name, lines.toString());\n};\nexport class ExpandableSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.expandableContentRef = React.createRef();\n        this.observer = () => { };\n        this.checkToggleVisibility = () => {\n            var _a;\n            if ((_a = this.expandableContentRef) === null || _a === void 0 ? void 0 : _a.current) {\n                const maxLines = this.props.truncateMaxLines || parseInt(lineClamp.value);\n                const totalLines = this.expandableContentRef.current.scrollHeight /\n                    parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);\n                this.setState({\n                    hasToggle: totalLines > maxLines\n                });\n            }\n        };\n        this.resize = () => {\n            const { offsetWidth } = this.expandableContentRef.current;\n            if (this.state.previousWidth !== offsetWidth) {\n                this.setState({ previousWidth: offsetWidth });\n                this.checkToggleVisibility();\n            }\n        };\n        this.handleResize = debounce(this.resize, 250);\n        this.state = {\n            isExpanded: props.isExpanded,\n            hasToggle: true,\n            previousWidth: undefined\n        };\n    }\n    calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded) {\n        if (propOrStateIsExpanded && toggleTextExpanded !== '') {\n            return toggleTextExpanded;\n        }\n        if (!propOrStateIsExpanded && toggleTextCollapsed !== '') {\n            return toggleTextCollapsed;\n        }\n        return toggleText;\n    }\n    componentDidMount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            const expandableContent = this.expandableContentRef.current;\n            this.setState({ previousWidth: expandableContent.offsetWidth });\n            this.observer = getResizeObserver(expandableContent, this.handleResize, false);\n            if (this.props.truncateMaxLines) {\n                setLineClamp(this.props.truncateMaxLines, expandableContent);\n            }\n            this.checkToggleVisibility();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.variant === ExpandableSectionVariant.truncate &&\n            prevProps.truncateMaxLines !== this.props.truncateMaxLines) {\n            const expandableContent = this.expandableContentRef.current;\n            setLineClamp(this.props.truncateMaxLines, expandableContent);\n            this.checkToggleVisibility();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            this.observer();\n        }\n    }\n    render() {\n        const _a = this.props, { onToggle: onToggleProp, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isActive, className, toggleText, toggleTextExpanded, toggleTextCollapsed, toggleContent, children, isExpanded, isDetached, displaySize, isWidthLimited, isIndented, contentId, variant, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        truncateMaxLines } = _a, props = __rest(_a, [\"onToggle\", \"isActive\", \"className\", \"toggleText\", \"toggleTextExpanded\", \"toggleTextCollapsed\", \"toggleContent\", \"children\", \"isExpanded\", \"isDetached\", \"displaySize\", \"isWidthLimited\", \"isIndented\", \"contentId\", \"variant\", \"truncateMaxLines\"]);\n        let onToggle = onToggleProp;\n        let propOrStateIsExpanded = isExpanded;\n        // uncontrolled\n        if (isExpanded === undefined) {\n            propOrStateIsExpanded = this.state.isExpanded;\n            onToggle = isOpen => {\n                this.setState({ isExpanded: isOpen }, () => onToggleProp(this.state.isExpanded));\n            };\n        }\n        const computedToggleText = this.calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded);\n        const expandableToggle = !isDetached && (React.createElement(\"button\", { className: css(styles.expandableSectionToggle), type: \"button\", \"aria-expanded\": propOrStateIsExpanded, onClick: () => onToggle(!propOrStateIsExpanded) },\n            variant !== ExpandableSectionVariant.truncate && (React.createElement(\"span\", { className: css(styles.expandableSectionToggleIcon) },\n                React.createElement(AngleRightIcon, { \"aria-hidden\": true }))),\n            React.createElement(\"span\", { className: css(styles.expandableSectionToggleText) }, toggleContent || computedToggleText)));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.expandableSection, propOrStateIsExpanded && styles.modifiers.expanded, isActive && styles.modifiers.active, isDetached && styles.modifiers.detached, displaySize === 'large' && styles.modifiers.displayLg, isWidthLimited && styles.modifiers.limitWidth, isIndented && styles.modifiers.indented, variant === ExpandableSectionVariant.truncate && styles.modifiers.truncate, className) }, props),\n            variant === ExpandableSectionVariant.default && expandableToggle,\n            React.createElement(\"div\", { ref: this.expandableContentRef, className: css(styles.expandableSectionContent), hidden: variant !== ExpandableSectionVariant.truncate && !propOrStateIsExpanded, id: contentId }, children),\n            variant === ExpandableSectionVariant.truncate && this.state.hasToggle && expandableToggle));\n    }\n}\nExpandableSection.displayName = 'ExpandableSection';\nExpandableSection.defaultProps = {\n    className: '',\n    toggleText: '',\n    toggleTextExpanded: '',\n    toggleTextCollapsed: '',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded) => undefined,\n    isActive: false,\n    isDetached: false,\n    displaySize: 'default',\n    isWidthLimited: false,\n    isIndented: false,\n    contentId: '',\n    variant: 'default'\n};\n//# sourceMappingURL=ExpandableSection.js.map"],"names":["styles","c_expandable_section_m_truncate__content_LineClamp","lineClamp","ExpandableSectionVariant","setLineClamp","lines","element","style","setProperty","name","toString","ExpandableSection","React","constructor","props","expandableContentRef","observer","checkToggleVisibility","_a","current","maxLines","truncateMaxLines","parseInt","value","totalLines","scrollHeight","getComputedStyle","lineHeight","setState","hasToggle","resize","offsetWidth","state","previousWidth","handleResize","debounce","isExpanded","undefined","calculateToggleText","toggleText","toggleTextExpanded","toggleTextCollapsed","propOrStateIsExpanded","componentDidMount","variant","truncate","expandableContent","getResizeObserver","componentDidUpdate","prevProps","componentWillUnmount","render","onToggle","onToggleProp","isActive","className","toggleContent","children","isDetached","displaySize","isWidthLimited","isIndented","contentId","__rest","isOpen","computedToggleText","expandableToggle","_jsxs","css","expandableSectionToggle","_jsx","expandableSectionToggleIcon","AngleRightIcon","expandableSectionToggleText","Object","assign","expandableSection","modifiers","expanded","active","detached","displayLg","limitWidth","indented","default","expandableSectionContent","displayName","defaultProps"],"mappings":"4FACA,MAAeA,EAAA,CACb,kBAAqB,0BACrB,yBAA4B,mCAC5B,wBAA2B,kCAC3B,4BAA+B,uCAC/B,4BAA+B,uCAC/B,UAAa,CACX,SAAY,gBACZ,SAAY,gBACZ,SAAY,gBACZ,WAAc,mBACd,UAAa,kBACb,SAAY,gBACZ,OAAU,cACV,UAAa,kBACb,aAAgB,oBACjB,CACH,EClBaC,EAAqD,CAChE,KAAQ,4DACR,MAAS,IACT,IAAO,gEACT,EACAC,EAAeD,ECGR,IAAIE,GACV,SAAUA,EAA0B,CACjCA,EAAyB,QAAa,UACtCA,EAAyB,SAAc,UAC3C,GAAGA,IAA6BA,EAA2B,CAAE,EAAC,EAC9D,MAAMC,EAAe,CAACC,EAAOC,IAAY,CACjC,CAACA,GAAWD,EAAQ,GAGxBC,EAAQC,MAAMC,YAAYN,EAAUO,KAAMJ,EAAMK,SAAQ,CAAE,CAC9D,EACO,MAAMC,UAA0BC,EAAAA,QAAAA,SAAgB,CACnDC,YAAYC,EAAO,CACf,MAAMA,CAAK,EACX,KAAKC,qBAAuBH,EAAAA,QAAAA,YAC5B,KAAKI,SAAW,IAAM,GACtB,KAAKC,sBAAwB,IAAM,CAC/B,IAAIC,EACJ,GAAKA,GAAAA,EAAK,KAAKH,wBAA0B,MAAQG,IAAO,SAAkBA,EAAGC,QAAS,CAClF,MAAMC,EAAW,KAAKN,MAAMO,kBAAoBC,SAASpB,EAAUqB,KAAK,EAClEC,EAAa,KAAKT,qBAAqBI,QAAQM,aACjDH,SAASI,iBAAiB,KAAKX,qBAAqBI,OAAO,EAAEQ,UAAU,EAC3E,KAAKC,SAAS,CACVC,UAAWL,EAAaJ,CAC5B,CAAC,CACL,GAEJ,KAAKU,OAAS,IAAM,CAChB,KAAM,CAAEC,YAAAA,CAAY,EAAI,KAAKhB,qBAAqBI,QAC9C,KAAKa,MAAMC,gBAAkBF,IAC7B,KAAKH,SAAS,CAAEK,cAAeF,CAAY,CAAC,EAC5C,KAAKd,sBAAqB,IAGlC,KAAKiB,aAAeC,EAAS,KAAKL,OAAQ,GAAG,EAC7C,KAAKE,MAAQ,CACTI,WAAYtB,EAAMsB,WAClBP,UAAW,GACXI,cAAeI,OAEvB,CACAC,oBAAoBC,EAAYC,EAAoBC,EAAqBC,EAAuB,CAC5F,OAAIA,GAAyBF,IAAuB,GACzCA,EAEP,CAACE,GAAyBD,IAAwB,GAC3CA,EAEJF,CACX,CACAI,mBAAoB,CAChB,GAAI,KAAK7B,MAAM8B,UAAYzC,EAAyB0C,SAAU,CAC1D,MAAMC,EAAoB,KAAK/B,qBAAqBI,QACpD,KAAKS,SAAS,CAAEK,cAAea,EAAkBf,WAAY,CAAC,EAC9D,KAAKf,SAAW+B,EAAkBD,EAAmB,KAAKZ,aAAc,EAAK,EACzE,KAAKpB,MAAMO,kBACXjB,EAAa,KAAKU,MAAMO,iBAAkByB,CAAiB,EAE/D,KAAK7B,sBAAqB,CAC9B,CACJ,CACA+B,mBAAmBC,EAAW,CAC1B,GAAI,KAAKnC,MAAM8B,UAAYzC,EAAyB0C,UAChDI,EAAU5B,mBAAqB,KAAKP,MAAMO,iBAAkB,CAC5D,MAAMyB,EAAoB,KAAK/B,qBAAqBI,QACpDf,EAAa,KAAKU,MAAMO,iBAAkByB,CAAiB,EAC3D,KAAK7B,sBAAqB,CAC9B,CACJ,CACAiC,sBAAuB,CACf,KAAKpC,MAAM8B,UAAYzC,EAAyB0C,UAChD,KAAK7B,SAAQ,CAErB,CACAmC,QAAS,CACL,MAAMjC,EAAK,KAAKJ,MAAO,CAAEsC,SAAUC,EAEnCC,SAAAA,EAAUC,UAAAA,EAAWhB,WAAAA,EAAYC,mBAAAA,EAAoBC,oBAAAA,EAAqBe,cAAAA,EAAeC,SAAAA,EAAUrB,WAAAA,EAAYsB,WAAAA,EAAYC,YAAAA,EAAaC,eAAAA,EAAgBC,WAAAA,EAAYC,UAAAA,EAAWlB,QAAAA,EAE/KvB,iBAAAA,CAAiB,EAAIH,EAAIJ,EAAQiD,EAAO7C,EAAI,CAAC,WAAY,WAAY,YAAa,aAAc,qBAAsB,sBAAuB,gBAAiB,WAAY,aAAc,aAAc,cAAe,iBAAkB,aAAc,YAAa,UAAW,kBAAkB,CAAC,EAChS,IAAIkC,EAAWC,EACXX,EAAwBN,EAExBA,IAAeC,SACfK,EAAwB,KAAKV,MAAMI,WACnCgB,EAAWY,GAAU,CACjB,KAAKpC,SAAS,CAAEQ,WAAY4B,CAAQ,EAAE,IAAMX,EAAa,KAAKrB,MAAMI,UAAU,CAAC,IAGvF,MAAM6B,EAAqB,KAAK3B,oBAAoBC,EAAYC,EAAoBC,EAAqBC,CAAqB,EACxHwB,EAAmB,CAACR,GAAUS,EAAA,SAAA,CAAA,UAAgDC,EAAIpE,EAAOqE,uBAAuB,EAAC,KAAQ,SAAQ,gBAAmB3B,EAAqB,QAAW,IAAMU,EAAS,CAACV,CAAqB,EAAC,SAAA,CAC5NE,IAAYzC,EAAyB0C,UAAQyB,EAAA,OAAA,CAAA,UAA8CF,EAAIpE,EAAOuE,2BAA2B,EAAC,SAAAD,EAAAE,EAAA,CAAA,cACzE,EAAI,CAAA,EAAK,EAAAF,EAAA,OAAA,CAAA,UACzBF,EAAIpE,EAAOyE,2BAA2B,EAAC,SAAIjB,GAAiBS,CAAkB,CAAA,CAAA,EAAG,EAC9H,OAAAE,EAAA,MAAA,CAAA,GAAmCO,OAAOC,OAAO,CAAEpB,UAAWa,EAAIpE,EAAO4E,kBAAmBlC,GAAyB1C,EAAO6E,UAAUC,SAAUxB,GAAYtD,EAAO6E,UAAUE,OAAQrB,GAAc1D,EAAO6E,UAAUG,SAAUrB,IAAgB,SAAW3D,EAAO6E,UAAUI,UAAWrB,GAAkB5D,EAAO6E,UAAUK,WAAYrB,GAAc7D,EAAO6E,UAAUM,SAAUvC,IAAYzC,EAAyB0C,UAAY7C,EAAO6E,UAAUhC,SAAUU,CAAS,CAAG,EAAEzC,CAAK,EAAC,SAAA,CACzc8B,IAAYzC,EAAyBiF,SAAWlB,EAAgBI,EAAA,MAAA,CAAA,IAC9B,KAAKvD,qBAAoB,UAAaqD,EAAIpE,EAAOqF,wBAAwB,EAAC,OAAUzC,IAAYzC,EAAyB0C,UAAY,CAACH,EAAqB,GAAMoB,EAAS,SAAIL,CAAQ,CAAA,EACxNb,IAAYzC,EAAyB0C,UAAY,KAAKb,MAAMH,WAAaqC,CAAgB,CAAA,CAAA,CACjG,CACJ,CACAvD,EAAkB2E,YAAc,oBAChC3E,EAAkB4E,aAAe,CAC7BhC,UAAW,GACXhB,WAAY,GACZC,mBAAoB,GACpBC,oBAAqB,GAErBW,SAAWhB,GAAU,GACrBkB,SAAU,GACVI,WAAY,GACZC,YAAa,UACbC,eAAgB,GAChBC,WAAY,GACZC,UAAW,GACXlB,QAAS,SACb"}