{
  "redirectURI": "アイデンティティー・プロバイダーの設定で使用するリダイレクトURIです。",
  "alias": "エイリアスは一意にアイデンティティー・プロバイダーを識別するもので、リダイレクトURIの構築にも使用されます。",
  "displayName": "アイデンティティー・プロバイダーの分かりやすい名前を設定します。",
  "clientId": "アイデンティティー・プロバイダーで登録されているクライアント識別子を設定します。",
  "clientSecret": "アイデンティティー・プロバイダーで登録されているクライアント・シークレットを設定します。このフィールドは、ボールトから値を取得できます。${vault.ID}形式を使用します。",
  "discoveryEndpoint": "リモートIDPディスカバリー・ディスクリプターよりメタデータをインポートします。",
  "importConfig": "ダウンロードしたIDPディスカバリー・ディスクリプターよりメタデータをインポートします。",
  "passLoginHint": "アイデンティティー・プロバイダーにlogin_hintを渡します。",
  "passCurrentLocale": "現在のロケールをui_localesパラメーターとしてアイデンティティー・プロバイダーに渡します。",
  "logoutUrl": "外部IDPからユーザーのログアウトに使用するセッション終了エンドポイントを設定します。",
  "backchannelLogout": "外部IDPがバックチャンネル・ログアウトをサポートするどうかを設定します。",
  "disableUserInfo": "追加のユーザー情報を取得するUserInfoサービスの使用を無効にするかどうかを設定します。デフォルトではこのOIDCサービスを使用します。",
  "userInfoUrl": "UserInfoのURLを設定します。これはオプションです。",
  "issuer": "レスポンス内の発行者の識別子（Issuer Identifier）を設定します。未設定の場合は、検証は実行されません。",
  "scopes": "認可リクエストの際に送信されるスコープです。スペース区切りでスコープのリストを設定します。デフォルトは「openid」です。",
  "acceptsPromptNone": "これは、アイデンティティー・プロバイダー・オーセンティケーターとともに使用されるか、またはkc_idp_hintがこのアイデンティティー・プロバイダーを指す場合に使用されます。クライアントがprompt=noneでリクエストを送信し、ユーザーがまだ認証されていない場合、エラーは直接クライアントに返されませんが、prompt=noneのリクエストはこのアイデンティティー・プロバイダーに転送されます。",
  "validateSignature": "外部IDPの署名検証の有効/無効を設定します。",
  "useJwksUrl": "有効とした場合は、アイデンティティー・プロバイダーの公開鍵が指定されたJWKS URLからダウンロードされます。アイデンティティー・プロバイダーが新しい鍵ペアを生成する際に、新しい鍵が常に再ダウンロードされるため、柔軟性が大幅に向上します。無効とした場合は、Keycloak DBの公開鍵（または証明書）が使用されるため、アイデンティティー・プロバイダーの鍵ペアが変更された際には、常にKeycloak DBに新しい鍵をインポートする必要があります。",
  "allowedClockSkew": "アイデンティティー・プロバイダーのトークンの検証時に許容されるクロックスキュー（秒単位）。デフォルト値は0です。",
  "forwardParameters": "最初のアプリケーションへのリクエストから取得し、外部IDPの認可エンドポイントへ転送されるOpenID Connect/OAuth標準以外のクエリー・パラメーター。複数のパラメーターをカンマ（,）で区切って入力できます。",
  "clientAuthentication": "クライアント認証方法（参照：https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication）。秘密鍵で署名されたJWTの場合、レルム秘密鍵が使用されます。",
  "clientAssertionSigningAlg": "クライアント認証でJWTアサーションを利用するときの署名アルゴリズム。クライアント認証が 秘密鍵で署名されたJWT もしくは JWTでクライアント・シークレット の場合に設定します。アルゴリズムの指定をしなかった場合、 秘密鍵で署名されたJWT ではRS256 JWTでクライアント・シークレット ではHS256のアルゴリズムが使用されます。",
  "storeTokens": "ユーザー認証後のトークン格納の有効/無効を設定します。",
  "storedTokensReadable": "新しいユーザーが格納されたトークンを読み取り可能かどうかの有効/無効設定です。broker.read-tokenロールをアサインします。",
  "trustEmail": "有効とした場合は、このレルムでEメールの確認が有効となっている場合でも、このプロバイダーが提供するEメールは確認されなくなります。",
  "accountLinkingOnly": "オンの場合、ユーザーはこのプロバイダーからログインできません。このプロバイダーにリンクすることのみできます。これは、プロバイダーからのログインを許可したくないが、プロバイダーと統合したい場合に便利です",
  "hideOnLoginPage": "非表示の場合、明示的に要求されていれば（例えば、「kc_idp_hint」パラメーターを使用していれば）、このプロバイダーによるログインが可能です。",
  "firstBrokerLoginFlowAlias": "このアイデンティティー・プロバイダーでの初回ログイン後に起動させる認証フローのエイリアスです。「初回ログイン」という用語は、認証したアイデンティティー・プロバイダー・アカウントに現在関連付けられているKeycloakアカウントがない状態であることを意味します。",
  "syncMode": "すべてのマッパーのデフォルトの同期モード。同期モードは、マッパーを使用してユーザーデータを同期するタイミングを決定します。可能な値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」。",
  "useEntityDescriptor": "リモートIDPのSAMLエンティティー・ディスクリプターからメタデータをインポートします。",
  "samlEntityDescriptor": "外部IDPメタデータを設定ファイルよりロード、またはURLよりダウンロードして設定します。",
  "ssoServiceUrl": "認証リクエスト（SAML AuthnRequest）の送信に使用するURLを設定します。",
  "singleLogoutServiceUrl": "ログアウト・リクエストの送信に使用するURLを設定します。",
  "principalType": "アサーションから外部ユーザーを識別し、追跡する方法。デフォルトではSubject NameIDを使用しますが、識別属性を設定することもできます。",
  "principalAttribute": "外部ユーザーを識別するために使用される属性の名前またはフレンドリー名。",
  "httpPostBindingResponse": "HTTP-POSTバインディングを使用してリクエストに応答するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。",
  "httpPostBindingAuthnRequest": "HTTP-POSTバインディングを使用してAuthnRequestを送信するかどうかを設定します。オフの場合は、HTTP-REDIRECTバインディングが使用されます。",
  "wantAuthnRequestsSigned": "アイデンティティー・プロバイダーが署名付きAuthnRequestを要求するかどうかを設定します。",
  "signatureAlgorithm": "ドキュメントの署名に使用する署名アルゴリズムです。",
  "wantAssertionsSigned": "このサービス・プロバイダーが署名付きアサーションを要求するかどうかを設定します。",
  "wantAssertionsEncrypted": "このサービス・プロバイダーが暗号化されたアサーションを期待するかどうかを設定します。",
  "forceAuthentication": "アイデンティティー・プロバイダーが以前のセキュリティー・コンテキストに頼るのではなく、プレゼンターを直接認証すべきかどうかを設定します。",
  "validateSignatures": "SAMLレスポンスの署名検証の有効/無効を設定します。",
  "validatingX509Certs": "署名の確認に使用するPEM形式の証明書を設定します。",
  "addIdpMapperName": "マッパーの名前です。",
  "syncModeOverride": "このマッパーのIDPのデフォルトの同期モードをオーバーライドします。値は次のとおりです。このオプションが導入される前の動作を維持する「レガシー」、このアイデンティティー・プロバイダーを使用したユーザーの初回ログイン時に一度だけユーザーをインポートする「インポート」、このアイデンティティー・プロバイダーでログインするたびにユーザーを常に更新する「強制」、このマッパーのアイデンティティー・プロバイダーで定義された同期モードを使用する「継承」。"
}