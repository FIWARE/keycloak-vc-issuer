{
  "clientType": "''OpenID connect'' permite a los clientes verificar la identidad del usuario final basado en la autenticación realizada por un servidor de autorización. ''SAML'' habilita la autenticación y autorización de escenarios basados en web incluyendo cross-domain y single sign-on (SSO) y utiliza tokens de seguridad que contienen afirmaciones para pasar información.",
  "serviceAccount": "Permitir autenticar este cliente contra Keycloak y recibir un token de acceso dedicado para este cliente.",
  "rootURL": "URL raíz añadida a las URLs relativas",
  "validRedirectURIs": "Patrón de URI válida para la cual un navegador puede solicitar la redirección tras un inicio o cierre de sesión completado. Se permiten comodines simples p.ej. ''http://example.com/*''. También se pueden indicar rutas relativas p.ej. ''/my/relative/path/*''. Las rutas relativas generarán una URI de redirección usando el host y puerto de la petición. Para SAML, se deben fijar patrones de URI válidos si quieres confiar en la URL del servicio del consumidor indicada en la petición de inicio de sesión.",
  "nameIdFormat": "El formato de NameID que se usará para el título",
  "forceNameIdFormat": "Ignorar la petición de sujeto NameID y usar la configurada en la consola de administración.",
  "forcePostBinding": "Usar siempre POST para las respuestas",
  "includeAuthnStatement": "¿Debería incluirse una declaración especificando el método y la marca de tiempo en la respuesta de inicio de sesión?",
  "signDocuments": "¿Debería el dominio firmar los documentos SAML?",
  "signAssertions": "¿Deberían firmarse las aserciones en documentos SAML? Este ajuste no es necesario si el documento ya está siendo firmado.",
  "signatureAlgorithm": "El algoritmo de firma usado para firmar los documentos.",
  "canonicalization": "Método de canonicalización para las firmas XML",
  "webOrigins": "Orígenes CORS permitidos. Para permitir todos los orígenes de URIs de redirección válidas añade ''+''. Para permitir todos los orígenes añade ''*''.",
  "homeURL": "URL por defecto para usar cuando el servidor de autorización necesita redirigir o enviar de vuelta al cliente.",
  "adminURL": "URL a la interfaz de administración del cliente. Fija este valor si el cliente soporta el adaptador de REST. Esta API REST permite al servidor de autenticación enviar al cliente políticas de revocación y otras tareas administrativas. Normalment se fija a la URL base del cliente.",
  "clientId": "Indica el identificador (ID) referenciado en URIs y tokens. Por ejemplo ''my-client''",
  "clientName": "Indica el nombre visible del cliente. Por ejemplo ''My Client''. También soporta claves para valores localizados. Por ejemplo: ${my_client}",
  "description": "Indica la descripción del cliente. Por ejemplo ''My Client for TimeSheets''. También soporta claves para valores localizados. Por ejemplo: ${my_client_description}",
  "loginTheme": "Selecciona el tema para las páginas de inicio de sesión, OTP, permisos, registro y recordatorio de contraseña.",
  "encryptAssertions": "¿Deberían cifrarse las afirmaciones SAML con la clave pública del cliente usando AES?",
  "clientSignature": "¿Firmará el cliente sus peticiones y respuestas SAML? ¿Y deberían ser validadas?",
  "client-authenticator-type": "Cliente autenticador usado para autenticar este cliente contra el servidor Keycloak",
  "nodeReRegistrationTimeout": "Indica el máximo intervalo de tiempo para que los nodos del cluster registrados se vuelvan a registrar. Si el nodo del cluster no envía una petición de re-registro a Keycloak dentro de este intervalo, será desregistrado de Keycloak",
  "idpInitiatedSsoUrlName": "Nombre del fragmento de la URL para referenciar al cliente cuando quieres un SSO iniciado por el IDP. Dejando esto vacío deshabilita los SSO iniciados por el IDP. La URL referenciada desde el navegador será: {server-root}/realms/{realm}/protocol/saml/clients/{client-url-name}",
  "idpInitiatedSsoRelayState": "Estado de retransmisión que quieres enviar con una petición SAML cuando se inicia un SSO iniciado por el IDP",
  "masterSamlProcessingUrl": "Si está configurada, esta URL se usará para cada enlace al proveedor del servicio del consumidor de aserciones y servicios de desconexión únicos. Puede ser sobreescrito de forma individual para cada enlace y servicio en el punto final de configuración fina de SAML.",
  "accessTokenLifespan": "Tiempo máximo antes de que un token de acceso expire. Se recomienda que este valor sea corto en relación al tiempo máximo de SSO",
  "assertionConsumerServicePostBindingURL": "SAML POST Binding URL for the client''s assertion consumer service (login responses).  You can leave this blank if you do not have a URL for this binding.",
  "assertionConsumerServiceRedirectBindingURL": "Assertion Consumer Service Redirect Binding URL",
  "logoutServicePostBindingURL": "URL de enlace SAML POST para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.",
  "logoutServiceRedirectBindingURL": "URL de enlace SAML de redirección para la desconexión única del cliente. Puedes dejar esto en blanco si estás usando un enlace distinto.",
  "frontchannelLogout": "Cuando está activado, la desconexión require una redirección del navegador hacia el cliente. Cuando no está activado, el servidor realiza una invovación de desconexión en segundo plano.",
  "certificate": "Certificado de cliente para validar los JWT emitidos por este cliente y firmados con la clave privada del cliente de tu almacén de claves.",
  "archiveFormat": "Formato de archivo Java keystore o PKCS12",
  "keyAlias": "Alias del archivo de tu clave privada y certificado.",
  "keyPassword": "Contraseña para acceder a la clave privada contenida en el archivo",
  "storePassword": "Contraseña para acceder al archivo",
  "consentRequired": "Si está habilitado, los usuarios tienen que consentir el acceso del cliente.",
  "fullScopeAllowed": "Permite deshabilitar todas las restricciones."
}