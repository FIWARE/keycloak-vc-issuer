{
  "redirectURI": "Этот uri перенаправления используется в том случае, если сконфигурирован поставщик идентификации.",
  "alias": "Синоним уникально идентифицирует поставщика идентификации, а также используется для построения адреса переадресации.",
  "displayName": "Дружелюбное имя для провайдеров идентификации.",
  "clientId": "Идентификатор клиента, зарегистрированный с помощью поставщика идентификации.",
  "clientSecret": "Секрет клиента, зарегистрированный с помощью поставщика идентификации.",
  "discoveryEndpoint": "Импорт метаданных из дескриптора развертывания удаленного поставщика идентификации.",
  "importConfig": "Импорт метаданных со скачанного дескриптора развертывания удаленного поставщика идентификации.",
  "logoutUrl": "Конечная точка окончания сессии, используемая для выхода пользователя из внешнего IDP.",
  "backchannelLogout": "Поддерживает ли внешний IDP backchannel logout?",
  "disableUserInfo": "Отключить использование сервиса информации о пользователе, чтобы получить дополнительную информацию о пользователе?  По умолчанию используется сервис OIDC.",
  "userInfoUrl": "Url информации о пользователе. Это поле опционально.",
  "issuer": "Идентификатор эмитента для эмитента ответа. Если не предоставлен, проверка не будет выполняться.",
  "scopes": "Области, которые будут посланы после запроса авторизации. Это может быть список областей, разделенных пробелом. По умолчанию 'openid'.",
  "validateSignature": "Включить/выключить проверку подписей внешних поставщиков идентификации.",
  "useJwksUrl": "Если включено, то публичные ключи поставщиков идентификации будет скачаны с заданного JWKS URL. Это дает дополнительную гибкость, так как новые ключи скачиваются каждый раз когда поставщик идентификации создает новую пару. Если выключено, то будут использованы публичные ключи (или сертификат) из базы данных Keycloak, и в случае изменений пары на поставщике идентификации вам будет необходимо каждый раз импортировать новые ключи в базу данных Keycloak.",
  "storeTokens": "Включено/выключено хранение токенов после аутентификации пользователя.",
  "storedTokensReadable": "Включено/выключено чтение новыми пользователями любых сохраненных токенов. Это назначается ролью broker.read-token.",
  "trustEmail": "Если включено, то E-mail, предоставленный этим поставщиком не будет подтвержденным даже если подтверждение включено для realm.",
  "accountLinkingOnly": "Если установлено, то пользователи не смогут войти через этого провайдера.  Только устанавливает связь к этому провайдеру. Используется, если вы не хотите разрешать вход через этого провайдера, но хотите с этим провайдером иметь интеграцию.",
  "hideOnLoginPage": "Если скрыто, то вход с этим провайдером возможен только при явном вызове, например при использовании параметра 'kc_idp_hint'.",
  "firstBrokerLoginFlowAlias": "Синоним сценария аутентификации, который срабатывает после первого входа с этого поставщика идентификации. Термин 'First Login' означает, что еще не существует учетной записи Keycloak связанной с аутентифицированной учетной записью поставщика идентификации.",
  "useEntityDescriptor": "Импортировать метаданные из удаленного дескриптора сущностей IDP SAML.",
  "samlEntityDescriptor": "Позволяет вам загрузить метаданные внешнего IDP из файла конфигурации или скачать его из URL.",
  "ssoServiceUrl": "Url, который должен быть использован для отправленных запросов на аутентификацию (SAML AuthnRequest).",
  "singleLogoutServiceUrl": "Url, который должен быть использован для отправленных запросов на выход.",
  "principalType": "Определяет, каким образом Keycloak идентифицирует внешних пользователей по SAML-сообщению. По умолчанию идентификация происходит по Subject NameID, в качестве альтернативы можно использовать атрибут-идентификатор.",
  "principalAttribute": "Имя (Name) или \"дружественное имя\" (Friendly Name) атрибута, идентифицирующего внешних пользователей.",
  "httpPostBindingResponse": "Указывает, необходоимо ли отвечать на завпросы, используя привязку HTTP-POST. Если не задано, то будет использован HTTP-REDIRECT.",
  "httpPostBindingAuthnRequest": "Указывает, должны ли AuthnRequest быть посланы, используя привязку HTTP-POST. Если нет, то будет использован HTTP-REDIRECT.",
  "wantAuthnRequestsSigned": "Указывает, ожидает ли поставщик идентификации подписанных AuthnRequest.",
  "signatureAlgorithm": "Алгоритм, используемый для подписи документов.",
  "forceAuthentication": "Указывает, должен ли поставщик идентификации аутентифицировать ведущего напрямую, а не использовать предыдущий контекст безопасности.",
  "validateSignatures": "Включает/выключает проверку подписи ответов от SAML.",
  "validatingX509Certs": "Сертификат в формате PEM, который должен быть использован для проверки подписи.",
  "addIdpMapperName": "Наименование сопоставления."
}