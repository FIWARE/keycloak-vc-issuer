name: Pre-Release

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:

  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Number
        id: pr_number
        run: echo "::set-output name=nr::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION}-PRE-${{ steps.pr_number.outputs.nr }})"

  # build
  build-and-release:
    needs: [ "generate-version" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: compile theme
        run: |
          cd src/main/resources/theme/siop-2/account/src
          npm install
          npm run build
      
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk

      - name: build jar 
        run: |
          mvn versions:set -DnewVersion=${{ needs.generate-version.outputs.version }}
          mvn clean package
          ls -l target/

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          prerelease: true
          title: ${{ needs.generate-version.outputs.version }}
          files: |
            target/vc-issuer-0.0.1-PRE-1.jar
            LICENSE
